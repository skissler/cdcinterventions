(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    605076,      11219]
NotebookOptionsPosition[    600596,      11140]
NotebookOutlinePosition[    600932,      11155]
CellTagsIndexPosition[    600889,      11152]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Set parameter values and define functions: ", "Subtitle",
 CellChangeTimes->{{3.7933924736210012`*^9, 
  3.793392483595557*^9}},ExpressionUUID->"ab566253-7f82-4d8d-9c27-\
65f1490a9767"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Seasonal", " ", "forcing"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"beta", "[", 
     RowBox[{
     "t_", ",", "amplitude_", ",", "baseline_", ",", "phival_", ",", 
      "gammaval_"}], "]"}], ":=", 
    RowBox[{"gammaval", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"amplitude", "/", "2"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "*", "Pi", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "phival"}], ")"}], "/", "52"}]}], "]"}]}], "+", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{"amplitude", "/", "2"}], "+", "baseline"}], ")"}]}], 
      ")"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pC", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "0.3", ")"}], "*", 
      RowBox[{"(", "0.044", ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "needing", " ", "critical", " ", "care"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pH", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "0.7", ")"}], "*", 
      RowBox[{"(", "0.044", ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "hospitalization", " ", "but", " ", "not", 
     " ", "critical", " ", "care"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pS", " ", "=", " ", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{"pC", " ", "+", " ", "pH"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "not", " ", "needing", " ", "care"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nuval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"4.6", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "progressing", " ", "to", " ", "infectiousness"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammaval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"5", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "losing", " ", "infectiousness", " ", "or", " ", 
     "going", " ", "to", " ", "the", " ", "hospital"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deltaHval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"8", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "leaving", " ", "hospital", " ", "for", " ", 
     "those", " ", "not", " ", "going", " ", "to", " ", "critical", " ", 
     "care"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deltaCval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"6", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "leaving", " ", "hospital", " ", "and", " ", 
     "going", " ", "to", " ", "critical", " ", "care"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xiCval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"10", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rate", " ", "of", " ", "leaving", " ", "critical", " ", "care"}],
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cfr", " ", "=", " ", "0.01"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Set", " ", "overall", " ", "case", " ", "fatality", " ", "rate"}], 
     "*)"}], "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
    RowBox[{"amplitude", " ", "=", " ", "0.75"}], ";", " ", 
    RowBox[{"(*", "0.6", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"baseline", " ", "=", " ", "1.75"}], ";", " ", 
    RowBox[{"(*", "1.4", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"phival", "=", " ", 
     RowBox[{"-", "3.8"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kappaval", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"importtime", " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"31", "+", "29", "+", "11"}], ")"}], "/", "7"}], "]"}]}], 
    ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"importlength", " ", "=", " ", "0.5"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", 
     RowBox[{"2.5", "*", "52"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwindow", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "64"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwindowlong", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"52", "*", "2.5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fs", " ", "=", " ", "18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsz", "=", "400"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CCthreshold", " ", "=", " ", "0.000089"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7933824016469603`*^9, 3.793382433659927*^9}, {
   3.793392485521379*^9, 3.793392487521698*^9}, {3.79339263520496*^9, 
   3.793392714713307*^9}, {3.793393907287566*^9, 3.793394084370824*^9}, {
   3.793394124891756*^9, 3.793394206023793*^9}, {3.793394441118215*^9, 
   3.793394499802842*^9}, {3.793395056647203*^9, 3.793395072470455*^9}, {
   3.793395198721662*^9, 3.793395223075577*^9}, {3.793395308028611*^9, 
   3.793395309601819*^9}, {3.793395347946869*^9, 3.7933953670198517`*^9}, {
   3.7933954298851843`*^9, 3.7933954353875437`*^9}, 3.793395884942059*^9, {
   3.793396053807115*^9, 3.7933960594453506`*^9}, 3.793396128405074*^9, {
   3.793396161221387*^9, 3.7933961906697693`*^9}, 3.793396465160309*^9, {
   3.793396504452037*^9, 3.793396508265297*^9}, {3.793397487135983*^9, 
   3.793397487468416*^9}, {3.793397550483906*^9, 3.793397645934012*^9}, {
   3.793397959099144*^9, 3.793397965523966*^9}, {3.793398010877906*^9, 
   3.793398011155649*^9}, {3.7933981065674*^9, 3.793398113113698*^9}, {
   3.793398152790327*^9, 3.793398153271265*^9}, {3.793400392723693*^9, 
   3.793400405980054*^9}, {3.793435391281775*^9, 3.793435402007841*^9}, 
   3.793435658448827*^9, 3.793442193613069*^9, {3.793529326303412*^9, 
   3.793529336159178*^9}, {3.793529752701681*^9, 3.793529753185114*^9}, {
   3.793529799203206*^9, 3.7935299163981953`*^9}, {3.793530266700755*^9, 
   3.793530280587278*^9}, {3.793530881386142*^9, 3.793530927344369*^9}, {
   3.793538235163342*^9, 3.793538260139104*^9}, {3.793628653007725*^9, 
   3.7936286716887293`*^9}, {3.793631355447322*^9, 3.79363135877636*^9}, {
   3.79363511837593*^9, 3.793635121678879*^9}, {3.793640210320211*^9, 
   3.793640212976606*^9}, {3.793717624257094*^9, 3.7937176364463377`*^9}, {
   3.7937181586830263`*^9, 3.7937181600631847`*^9}, {3.79371824819411*^9, 
   3.7937182498865433`*^9}, {3.793719529331539*^9, 3.793719531371969*^9}, {
   3.7937216030483313`*^9, 3.793721603363948*^9}, {3.793721668993072*^9, 
   3.793721669040846*^9}, 3.793721753550395*^9, {3.793721806725835*^9, 
   3.793721840662491*^9}, {3.793722362116454*^9, 3.793722390707917*^9}, {
   3.793722820856447*^9, 3.793722828478895*^9}, {3.793723814865608*^9, 
   3.793723815033659*^9}, {3.793727331986631*^9, 3.793727333763685*^9}, {
   3.793728590541758*^9, 3.793728619998988*^9}, 3.793728739167693*^9, {
   3.7937297957055073`*^9, 3.7937298001508904`*^9}, {3.793800746382456*^9, 
   3.793800748703477*^9}, {3.793802803238756*^9, 3.793802807803392*^9}, {
   3.793803803399664*^9, 3.793803805199087*^9}, {3.793804387810821*^9, 
   3.7938043894573793`*^9}, {3.793804731306602*^9, 3.793804732769477*^9}, {
   3.794143114426158*^9, 3.794143146118546*^9}, {3.794147858328751*^9, 
   3.794147867347603*^9}, {3.794147922766865*^9, 3.794147924113537*^9}},
 CellLabel->
  "In[952]:=",ExpressionUUID->"c73a97f1-c4ac-409c-a8f1-c3c6b1d45354"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define model function:", "Subtitle",
 CellChangeTimes->{{3.794143066339645*^9, 
  3.794143069084725*^9}},ExpressionUUID->"9e70e588-eb8a-43d3-b82e-\
99cd3f899a76"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"runmodel", "[", "]"}], ":=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cuminf", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"nuval", "*", 
         RowBox[{"Eq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cumhosp", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cumcc", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaCval", "*", 
         RowBox[{"HCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cumm", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"0.5", "*", "xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"0.078", "*", "deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "relaxtime"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", " ", 
          RowBox[{"1", "-", "npifactorrelaxed"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"cuminf", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"cumhosp", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"cumcc", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"cumm", "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi", 
       ",", " ", "cuminf", ",", " ", "cumhosp", ",", " ", "cumcc", ",", " ", 
       "cumm"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.794143072067564*^9, 3.7941430737560873`*^9}, {
  3.794144610723529*^9, 3.794144644262239*^9}, {3.794147410694254*^9, 
  3.794147432654071*^9}, {3.7941545761916037`*^9, 3.7941546449452887`*^9}, {
  3.7941552429780807`*^9, 3.794155297968667*^9}, {3.794155358463624*^9, 
  3.7941553651629267`*^9}},
 CellLabel->
  "In[999]:=",ExpressionUUID->"355fd5ea-b022-4c67-a16e-8dd50237bcd8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Run a scenario to test:", "Subtitle",
 CellChangeTimes->{{3.79414309216047*^9, 
  3.794143094553767*^9}},ExpressionUUID->"f9b2b6c1-c48f-45ed-b422-\
19985b256573"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7941430967716913`*^9, 3.794143102279395*^9}, {
  3.794147398878829*^9, 3.794147399059188*^9}, {3.794147434420947*^9, 
  3.794147506530346*^9}},
 CellLabel->
  "In[973]:=",ExpressionUUID->"b7f8eae6-27e4-4dc9-9442-50a9d51159bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"CCq", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "CCthreshold", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7941437886534863`*^9, 3.794143830838982*^9}},
 CellLabel->
  "In[980]:=",ExpressionUUID->"ce57bf83-11a6-4e0d-b1fe-28ae86543ae0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxElnc41t8f/xEqI4UKLdl7ZXPe75e9ua3bzt4NlcyyE7L3Tkg2CVHeojQR
qSgVUiGpZGX3u3/X9ft9vvc/9/W4Xuc8z/P1POdc73Pc5ayZOw0VFdUzWiqq
//s/Ti/11lPtCUb1/34staM/tX3K8f/PDdSMvlw+zf9xuFiZMK1Pz388rfZ7
15r3m/+4wDAraNH763+8bOrVOO+99B+XvjE1/O1NC/+fiTHH821a+//jnTuX
grvyj/3H2NNBFq1H/+OAq3U3n//4Hy9E3/HyPsr9HzvRns48f/Z/jOgmfsTs
O/4fr9A/ya+y5PmPWT2bv/3w/h+LPy2Vkgj7H7tdDX/SVPE/fr1TaeH+3/9x
465avZd5vP9xn1d+5t76//H0s7hxs4f/46Px7hdHZv/HibuP3ZhQ4fuPK72Z
53hIFD7h7/up2QU9er4h7+7GB8lrMzYeT8bQmPBs5K0gPhCb4Rxmk92Lrce/
6/ueyAfss15x8tuS2IHZJwfFbvABXYD0k8eftTAZ/RaXMy18kFCpl54iZo0Z
V5fVNT7nA8eWrHgBGU/MmyF9deETH6gLfm3e5vHHDhRJjcwt8sEK9iro7vsI
rEdyoGVqNz9YlebyaLsnYOcens6cOMYPILInsO1GBnbUkunCqBw/tGrf3TCi
LcR6p6tN3xjwA4cn0dJhVoYFhehJvXTmhz9xfGtvpqswfuaZPc8C+eGGF78o
/GnEhq7H/uxO4gfJ7WdTvPUtWLgMf9/9Mn5wi2/3dpO9j4k9flTd0s4PiueM
L2c97sLeW7nENwzwA/8fK9+3dj1Y7CyVV9U3foixTrw7cPIZduLyde2yDX7Y
vhPn+mCgD5tgwfiL9gmA28cCxtsjg5iyXOhkKhKAwr3xyfQnh7Hpp5zdCeYC
MHvFRSzZ/z2Wadt2PcZbAK79qjlZ8PAj9it82T4oSwDOXzwyGEEziRWwZqqc
rxEAkz0Po7M2v2C6N2W4TnULwJGrGTH6rFNY2YuzI44/BSBjOtm6OnUWIzns
abXZIQgf3plsBK/NYdu/azPNOQXhAsnaVCrsN2a9f9ZUR0sQSDLFT2jPLGBM
Tm59EkWCMLL7853UoFWsfYGmRuiOIIh+fNShw72OeVy5Ec/zXBDI75KLjUY2
sK7qMe0Dy4IwJHjw4UX/f9hpdJl/L6MQBGf6DxbXUeFcg4doGY4LQe+rifNm
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
04ZxxoILYVOzNjzMHnjYk7t6jPE/unF/IQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$1311182#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{{}, {0.000089}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7941438122414618`*^9, 3.794143831075589*^9}, 
   3.7941442535004997`*^9, {3.794147459974352*^9, 3.794147514504736*^9}, 
   3.794154647789783*^9, 3.794154694243753*^9},
 CellLabel->
  "Out[980]=",ExpressionUUID->"9dd3c63d-fb79-4c01-9baa-e89a12f5c884"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cuminf", "[", "t", "]"}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "CCthreshold", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7941475997545652`*^9, 3.794147620446661*^9}},
 CellLabel->
  "In[981]:=",ExpressionUUID->"ce832def-0640-4355-a54e-e45dd74621c2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/w9R3Z5G
       "]]},
     Annotation[#, "Charting`Private`Tag$1311234#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{{}, {0.000089}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7941476004741287`*^9, 3.794147620786591*^9}, 
   3.7941546997490387`*^9},
 CellLabel->
  "Out[981]=",ExpressionUUID->"15333ad0-4b85-415b-a700-fc072c2802d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"npi", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "CCthreshold", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.79414752063418*^9, 3.794147527027906*^9}},
 CellLabel->
  "In[982]:=",ExpressionUUID->"efe35891-6b66-4397-9dac-012f512d9c48"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0nssFAAcB/BTRK6HZyusujvyiFPqxHEPJ4/qvE8u8pg8kqmYlJCWTpwS
TXFnNUoXIipUlMgmyoq81nkTaVNaOGYepc3v991+++2z33+/348UeMY9eA2B
QDj2r1b6wLo9naE2jUzC//xmzbidLP8dNs1a9f0ON+5kmDx71W/6/aNe2mmC
FRWnY+vEO8CydY3iIk8yOEz51tyfPl0wnRY3nMHYBd4QENRCvasPDhHkp5Kb
0XXF/fZbZtARjAQ9FaIBWKtVW16ZhG4KrB5eewB9boZfv8g1YItFK/nKMmK3
W40WoPuFTlUtC2iHnZzHuSWG4PJK87xTx43AXtuHlC4RdoOXktMiMwvQ7jWD
erky9MNJmrTA0RhcbX3EQd8X/Sk1oKIoEj3SdY5knIyeo6SlPxGv+geLXFt5
8nkDmssf5LycQIsNaRoD+6ng7/OpowoJpmDprM4ymbwXzP4TTWwQmIEjBomX
ldk08PLiO9ILgTk4U/tiw4mPB8AhQaqJKbNo69JCeinFAhyZmB5WRbWAe0jc
onPeWqJ7Kd7vmw6iVWUsWZsLOl5M5H0LRo8xu5/K4tCZrQqG7A60deD+vFRj
S5wLMtN1+tBjhb/iy27Q8f/uaNj4dVuB9yXRFTaSGODBoxE/Ih+xwP7M9vwg
Mxvwh/M+5qJYDthJOqbg0GsLvvwqOOmChR3YlOU6bpZgD579yUgJ6XMAW9lm
b6bsOgTOrp9q4wsPgx+8tuWojR8B7/ZbFvGoTuCPBrXGKhnO4O+icQlP6gKW
2iaFbrrpCuZ+Vt9WxnQDL5h4M7OG0RYkspx5lju45cuIWMTxAN/z8im0GUUv
nOV5SG7zwDm+a6Nc6J7g60olodU96A2OXfNDwqO4T+8qOWeqF1hzzVZJzAD6
Xrxp7chVPjixkl2qpn8MPHGl3XKpC51N0aFT47zBn/hj3VomPmBfbjG3uQdt
pK5Le33pODjp9I6acFNfsNbd1gr/DvR6YZxAM8YPfJVYOHVNzx/MCBB2MpvR
muHiZy5qAWCi5Mz8Mgv9F2b48tA=
       "]]},
     Annotation[#, "Charting`Private`Tag$1311285#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{{}, {0.000089}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7941475217108*^9, 3.794147527257716*^9}, 
   3.7941547005263233`*^9},
 CellLabel->
  "Out[982]=",ExpressionUUID->"a69d3620-1cef-4b83-9254-1006f3557df7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Run a bunch of scenarios and gather output:", "Subtitle",
 CellChangeTimes->{{3.794143103723467*^9, 
  3.7941431078508043`*^9}},ExpressionUUID->"53a90e1d-3063-4b11-a5b0-\
286804c8597f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"output", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"sol", "=", 
         RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"itot4", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", " ", "+", " ", "4"}], "]"}], "/.", "sol"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"itot8", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", " ", "+", " ", "8"}], "]"}], "/.", "sol"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"itot12", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", " ", "+", " ", "12"}], "]"}], "/.", "sol"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"itot", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", "tmax", "]"}], "/.", "sol"}], ")"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"output", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"output", ",", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npistart", " ", "-", " ", "importtime"}], ",", " ", 
              RowBox[{"npiend", "-", "npistart"}], ",", " ", "npifactor", ",",
               " ", "npifactorrelaxed", ",", " ", "\[IndentingNewLine]", 
              RowBox[{"Round", "[", 
               RowBox[{"itot4", "*", "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{"itot8", "*", "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{"itot12", "*", "10000"}], "]"}], ",", " ", 
              RowBox[{"Round", "[", 
               RowBox[{"itot", "*", "10000"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"pH", "+", "pC"}], ")"}], "*", "itot4", "*", 
                "10000"}], "]"}], ",", " ", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"pH", "+", "pC"}], ")"}], "*", "itot8", "*", 
                "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"pH", "+", "pC"}], ")"}], "*", "itot12", "*", 
                "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"pH", "+", "pC"}], ")"}], "*", "itot", "*", 
                "10000"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Round", "[", 
               RowBox[{"pC", "*", "itot4", "*", "10000"}], "]"}], ",", " ", 
              RowBox[{"Round", "[", 
               RowBox[{"pC", "*", "itot8", "*", "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{"pC", "*", "itot12", "*", "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{"pC", "*", "itot", "*", "10000"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Round", "[", 
               RowBox[{"cfr", "*", "itot4", "*", "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{"cfr", "*", "itot8", "*", "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{"cfr", "*", "itot12", "*", "10000"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{"cfr", "*", "itot", "*", "10000"}], "]"}]}], "}"}], 
            "}"}]}], "]"}]}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"npifactorrelaxed", ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0.2", ",", " ", "0.4"}], "}"}]}], "}"}]}], 
      "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"npiend", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"npistart", "+", "4"}], ",", " ", 
         RowBox[{"npistart", "+", "8"}], ",", " ", 
         RowBox[{"npistart", "+", "12"}]}], "}"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"baseline", ",", "1.4", ",", " ", "3.4", ",", " ", "0.2"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.794147072770232*^9, 3.794147126429528*^9}, {
  3.794147176124791*^9, 3.794147242628673*^9}, {3.79414728232052*^9, 
  3.794147331785016*^9}, {3.794147370692903*^9, 3.7941473893211107`*^9}, {
  3.794147739553791*^9, 3.794147841026614*^9}, {3.794147872413473*^9, 
  3.794147901769603*^9}, {3.79414794278673*^9, 3.794147973313159*^9}, {
  3.79414809131555*^9, 3.794148092583769*^9}, {3.794148122834202*^9, 
  3.794148168073741*^9}, {3.794148206086012*^9, 3.7941482704757977`*^9}, {
  3.794148433838249*^9, 3.794148493928947*^9}, {3.7941485694932413`*^9, 
  3.794148579275949*^9}, {3.794148672907576*^9, 3.794148677233933*^9}, {
  3.794154710571721*^9, 3.7941547287274933`*^9}, {3.7941547765005913`*^9, 
  3.794154779038026*^9}},ExpressionUUID->"f840911c-3b8b-4d37-ac26-\
d9d0951dc3b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<R0\>\"", ",", "\"\<I'vention start\\n(wks post est'ment)\>\"", 
        ",", "\"\<I'vention length\\n(wks)\>\"", ",", 
        "\"\<Initial reduction\\nin R0\>\"", ",", " ", 
        "\"\<Relaxed reduction\\nin R0 (after 15d)\>\"", ",", " ", 
        "\"\<I4\>\"", ",", "\"\<I8\>\"", ",", "\"\<I12\>\"", ",", 
        "\"\<Itot\>\"", ",", "\"\<H4\>\"", ",", "\"\<H8\>\"", ",", 
        "\"\<H12\>\"", ",", "\"\<Htot\>\"", ",", "\"\<C4\>\"", ",", 
        "\"\<C8\>\"", ",", "\"\<C12\>\"", ",", "\"\<Ctot\>\"", ",", 
        "\"\<M4\>\"", ",", "\"\<M8\>\"", ",", "\"\<M12\>\"", ",", 
        "\"\<Mtot\>\""}], "}"}], "}"}], ",", "output"}], "]"}], "//", 
   "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.794147903689942*^9, 3.7941479040055437`*^9}, {
   3.794148027720573*^9, 3.7941480289602327`*^9}, {3.794148280767308*^9, 
   3.794148413391255*^9}, {3.794148504152698*^9, 3.794148545204084*^9}, {
   3.79414859570487*^9, 3.794148627349409*^9}, {3.794148662091864*^9, 
   3.794148668364875*^9}, {3.794148726508313*^9, 3.794148729341531*^9}, 
   3.794149589730116*^9},
 CellLabel->
  "In[762]:=",ExpressionUUID->"da3e4e88-5a33-4938-8882-0bba686d54df"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Run a bunch of scenarios and gather output, in a more sensible form:\
\>", "Subtitle",
 CellChangeTimes->{{3.794143103723467*^9, 3.7941431078508043`*^9}, {
  3.794149597320745*^9, 
  3.7941496001314297`*^9}},ExpressionUUID->"7f6d5abb-2207-45b5-a326-\
b5e6a9ea60a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hosp", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"crit", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mort", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"npifactorrelaxed", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol00r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npifactorrelaxed", "=", "0.2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol02r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npifactorrelaxed", "=", "0.4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol04r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npifactorrelaxed", "=", "0.6"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol06r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"itot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"itot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"itot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"itot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"htot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"htot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"htot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"htot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ctot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ctot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ctot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ctot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"mtot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mtot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mtot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mtot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"inf", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"inf", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{"10000", "*", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "itot06r", ",", " ", "itot04r", ",", " ", "itot02r", ",", 
                  " ", "itot00r"}], "}"}], "\[Transpose]"}], "]"}]}], "]"}]}],
            "]"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hosp", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"hosp", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"10000", "*", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "htot06r", ",", " ", "htot04r", ",", " ", "htot02r", ",", 
                   " ", "htot00r"}], "}"}], "\[Transpose]"}], "]"}]}], ",", 
              "0.1"}], "]"}]}], "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crit", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"crit", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"10000", "*", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ctot06r", ",", " ", "ctot04r", ",", " ", "ctot02r", ",", 
                   " ", "ctot00r"}], "}"}], "\[Transpose]"}], "]"}]}], ",", 
              "0.01"}], "]"}]}], "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mort", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"mort", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"10000", "*", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "mtot06r", ",", " ", "mtot04r", ",", " ", "mtot02r", ",", 
                   " ", "mtot00r"}], "}"}], "\[Transpose]"}], "]"}]}], ",", 
              "0.01"}], "]"}]}], "]"}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"npiend", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"npistart", "+", "4"}], ",", " ", 
         RowBox[{"npistart", "+", "8"}], ",", " ", 
         RowBox[{"npistart", "+", "12"}]}], "}"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"baseline", ",", "1.4", ",", " ", "3.4", ",", " ", "0.2"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0D1IAgEAhuFDs0IQgqCESM6hqYuKpqwhySyOIIlokCBKqlOSMiiMggal
wSHISIK0NAxNSPsbDFTELAWpIHJIEBokCTKtcOgH6T6Hl2d/xZNzw1McgiAa
2GDoUPgckb1Jz0K3L5AucXOwXjRShOdS+gemRMvEFWsvNcqDJrmnCrr9ug5Y
mSJ7INUlkEGL3d8PM9TTIJzmeRTwT6gZh91ec9n4qVIF68Y4amgNR7Qw0Hm/
CAsPEhPMXwY34UG8dRduPTJWmOY3uuHEqqvsklpPRlkvEi0UVOSC7XCDqZbD
VMBHQ6O9oISztb8z8FNQ1EDmrmkeFgyyFUitJQ3QkbBZIHlNWmHb/l5Zp+vI
Dun1sAvavFofLC2o/FC/MxSA3yfKKNweyDtvWD8kyWPolhuz0EGnX2HNV/M7
jGWyRWgWq7kx/O7jV8B/9wfoBw==
  "],
 CellLabel->
  "In[1039]:=",ExpressionUUID->"69daacc6-b850-4531-8630-f7ac5da6f809"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
        "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
        ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
        "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
        ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
        "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
        ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
        "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
        "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "}"}], ",", 
     "inf"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.7941505859425163`*^9, 3.7941505860937634`*^9}, {
   3.7941509512397213`*^9, 3.7941509533300877`*^9}, {3.794151014040607*^9, 
   3.7941511161667223`*^9}, {3.794151160252921*^9, 3.794151178147462*^9}, 
   3.794155446025796*^9},
 CellLabel->
  "In[1049]:=",ExpressionUUID->"207f130f-0dfa-427f-80c1-83b653dba7a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
         "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
         ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
         "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
         ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
         "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
         ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
         "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
         "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "*)"}], 
      "}"}], ",", "hosp"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.794155452972054*^9, 3.7941554532386427`*^9}, {
  3.794155517650547*^9, 3.794155580081493*^9}, {3.794155618544218*^9, 
  3.794155647543392*^9}},
 CellLabel->
  "In[1060]:=",ExpressionUUID->"d41ddfb9-09a7-44f5-a5db-23895c757cc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
         "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
         ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
         "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
         ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
         "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
         ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
         "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
         "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "*)"}], 
      "}"}], ",", "crit"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.794155457270616*^9, 3.794155462047716*^9}, {
   3.794155536670794*^9, 3.7941555695823298`*^9}, {3.79415565241782*^9, 
   3.7941556536367683`*^9}, 3.794155684289892*^9},
 CellLabel->
  "In[1062]:=",ExpressionUUID->"98b1d7df-b31f-4ac5-a386-0559bcc1f1e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
         "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
         ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
         "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
         ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
         "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
         ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
         "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
         "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "*)"}], 
      "}"}], ",", "mort"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.794155460248571*^9, 3.7941554638996162`*^9}, 
   3.794155512999715*^9, {3.7941555708977833`*^9, 3.7941555760005713`*^9}, {
   3.794155689100359*^9, 3.794155690276033*^9}, 3.794155868216895*^9},
 CellLabel->
  "In[1064]:=",ExpressionUUID->"a86fa224-d13c-4be4-9414-bf0515416fa8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting R0 = 1.4:", "Subtitle",
 CellChangeTimes->{{3.794156090803885*^9, 3.7941560917658577`*^9}, {
  3.794156834506391*^9, 
  3.7941568366275263`*^9}},ExpressionUUID->"34b58635-6a7a-4de2-8aa1-\
e07ad2679f40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", "+", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseline", " ", "=", " ", "1.4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol06", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.4"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol04", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol02", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol00", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.794156106672036*^9, {3.794156141078863*^9, 3.794156173417129*^9}, {
   3.7941563630521793`*^9, 3.7941564001285667`*^9}, {3.7941564393207912`*^9, 
   3.794156439386325*^9}, 3.794157544649518*^9, 
   3.79415774267905*^9},ExpressionUUID->"6077a067-c04a-41d0-8a04-\
2dd515b36308"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prmax", " ", "=", " ", "1200"}], ";"}]], "Input",
 CellChangeTimes->{{3.794156277514061*^9, 3.794156278914998*^9}, {
   3.794156331056059*^9, 3.794156348490449*^9}, {3.7941568963547287`*^9, 
   3.794156896416*^9}, 3.794156952372532*^9},
 CellLabel->
  "In[1450]:=",ExpressionUUID->"9770c67e-c44a-4ed7-b260-0d20a22adf79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig14", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol06"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol06"}], "]"}]}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Black", ",", " ", "Red", ",", " ", "Blue", ",", " ", "Green", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Black", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Complete relaxation\>\"", ",", " ", "\"\<Major relaxation\>\"", 
       ",", "\"\<Minor relaxation\>\"", ",", " ", "\"\<No relaxation\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"npistart", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "5000"}], "}"}]}], "]"}], ",", 
       " ", "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"npiend", ",", "5000"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.794156672417858*^9, 3.794156750149516*^9}, {
  3.794156816678644*^9, 3.794156820239547*^9}, {3.794157010967602*^9, 
  3.7941570123636627`*^9}},
 CellLabel->
  "In[1451]:=",ExpressionUUID->"366c8fbe-61c9-4926-9be6-1bd43ee5f98d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
vvrH8jIjHs7W3Orrmoj/AY4Q1jg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1546846#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
5sGd
          "]]}, Annotation[#, "Charting`Private`Tag$1546846#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1546846#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF2Hk4lN//P3BbUfYlIrLvO2PfniPGNkjWZCnZRrYkpCwhpCyVJCFRWUNZ
UgmJlH0pUqgokZTeqbTQbz7X9ftm/pj7elz33Oc+53697tc5Z0S9Qnb50NHQ
0PhTv/53tPSZG2qbbzCk+f8fhh0Coa/4s43+z+qXc/Pr+K/+s1Xf2K0C/vp/
dvb+cf8sf8c/Tyqn7Ejnf/rPRVtsk9P43/7zcaY66ZP8y//ssvtKzdIXBvyf
mf8edzPbzv7Pknaf5h6e4vnnyH4do9xl/n/mq+ecoqUV/me3078d3vKuu9j7
Xc8jhXUrbLlz55TLuo0j9p7fUrtuzXzn69nKIv+8z+O6e9nUupMst128OL/u
65pZT9OW1/2RLdoqaLPoP0e0Wuuoaa77tMg3nub0dTdO7+gd0Bf751Hz41/S
zdb9vbqFl7xr3VpHdfY99lt3E7fy97az675jIiBya27dLyqcTUO/rvsXx/kA
pbV1606yN1Rwi//z3cMbLEsM1918felQdva6J1iULu66vO4/YQdaOCrWbWA0
y5Teuu6WsZcFJz6se8qA/+GOb+teK3Gao6WR+GfD0CG12C3r9hhlc9EXWXes
Pjnml9y6C4tPFjdprLuVqasrAut+HcywSLCSgIBBBze/vIMRzTMi11dHCUTW
8BZm9pUaiejFad3cKwG56+0ipU0PjXCl2S3kgARWd08XTMc+NdrL+Ou4YoQE
6nzlDM87vDGKD9IqXYiXwIVoectA7g9GRSPhveWnJJDpwOdUrfqfUZvOrS9+
ORLYWNpz7TDvitHry595pa5IoHTbQdboG2tGNBsV9d9WSmCr26vFgO90EAkM
2FfcKIFF0d13/d5tBHG4NHnvAwl8Lt2tf0SYGV7a7yq390rgk9HyrtQidiQU
ig1NjEqA1XPfrJMaF9oDCrbt/igB/udDd3gd+FA3f+CAx3cJNGyRiM1+zY+r
/rr39tNIovjawye3kgRxwnfMNZhHEn8tz+67xSgKcy/OvER9SfB0sh+t3yQN
nTev5lNJknhVO/CioEgGcnurdTJ2SuK3W29Gh5YcWDysxnO9JTHRv0nKT14R
qxP8soXBkriWkm8YdFIJn/bMRZVESaKTkUEodFQZA7tPbK0+LYmH1yUI7SKq
aHtu71+XI4kpsvtka60qap3FmpqKJOGo4PVORlcNZx1bnR/WS+JqhgJvr646
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
MoxeMEQTRPH/AJmeECY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1546846#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
8JDn+WmB3lM7huibebCxT/A190Y6pu+HJdo94sIuY9baFwJ0JOqG1ISkcOF2
5njFwU10DG/gkCk/ywV5xquCZjE66nK28F3fwQX9ySPJlxToUDv/si1pBRd8
WN/v5zak40HNejvfFxx4Jhe1itufjr8yAhEljuzQaNnQePkAHVRbqhmnCjvy
j2Ve4j1Ex2u+0tl4TnbcbqwT2BhCR43Wl93cr9cgKmCFgvApOkY/jPAyG62B
feEpO4UEOiKX6pYd0mXDd63jyeYVdAQ6nPqzzWoV9vSx735dSYe36J/xS0qr
8PHCjS1W1XTExGoujHKvwpuup7m2L+mgUWIubmhnRcGJuYpt7+kQnEh25NrH
imNVwX0eA3Q0JTFXnI1YCW6LQPlTHJbQ04yh+7SzIO0F5xotbkuwCb41KXjK
AgrtwdDYOkvIUY6/3JzGAmvpwXt7+S1hUth+1X0/C6JXuorqi1uiel9PU+ri
crBUm/MxaVmS97k7l9Lkl2NKW5TphIclmuZVqiozmHG2sOKzurclmLY03DWM
YQavnMuznz6WkD98MLM/iBmqAtdDdx2wRP1ioUukCTMOzLBP6oRZ4u2Xy+wa
w0wYKpoZmo+3hHDoptMULSZ0KTR9OFpuCadlm2bZPi0St4a5jy9/bgnZPNrT
/uJFwi3bQfLiC0vcLlrS/RW/SAyJt4ek1Vli6SH3yijTRWJK8POm+iZSX+Fm
047HCwQ324gXb78lWtmOPy1NnSdMBlgXHq61wpo7qgzBC7PE6jvmd6lcVihK
V+o2850l3uy9YF3FY4U+6qnjqfRZwqGbI711gxUaVOUsy9lniT0t600WRK0w
uTNGtCl+hgir2hJvrmGFgVr/aM60aSL/JiH+zdUKScqfntZ0ThJ/Qv+w7t1r
BbXgBvV1zycJjW2Zw937SHviJ5NO3ZkknnJyFrZ7W2F7RuLu6oBJou7kZ/3X
gVbITf2TV886SXxyO767INIKm1cu5j7SnSBWSj1NPvnQCmxrLXvrno8T5ssD
TizmW2GrYcfAx6xxIqZHzC200Ap71n4fZrs8TnAnRssElVrh9eFGRoX7OCG0
ekepV5UVzpuePRGwZpxQGZ5ptW6zgjvj87lPu8aIXXka3Jv+WqFCpyV7dP1v
4vGOGY4mJmu4mqbTEpl+Exwrn7CfXm6NVfzX1Z60jRKVLrqrhlZZQ/z2c68j
p0YJMTajpaJ11rixmRA+3/WLGHC3+2kpY43hY8csW5J/Ev4CjFfHHK3h0tWa
v0ZvmKirVahX2maNnbmiBX38w4TwwdGa3u3W2DVjmD48+YNoqg+sNNttjd/K
S7Tohz8IlcNHS3h9rKHvPTU8J/qDmH4XeTc33BpnGvhZA7iHiJNn0yO67luj
X216aoLrO7E2mNVi7wNr3LWazNo5MUAke/vxDORZw1hYNa+/fYAopNMyRous
wZIUyr3v1gAxwN1cs+y5NdiSLt34qzRA0G8yrZL5YI2yvXdNr27rJ/hKdsce
nrdGINveEb7nfURGVu3WuUVr5Kr/PZ14r4+gJMsJhzPZYKTUoZYa20eYH5/O
i1phA551PIMtu/qIY4ZxzSmcNjguaSR29G8v0fuugrdqiw128cflWxn3Eg8G
N6VwWNpARPORffn3L0RU6tk9n61tYNzqm+fU9IVwt/8p8dDOBq3fcimcZV8I
ofLyfKttNpgRpuj1Rn8houN21sW42eB6jtKHFZQvhLdG0hjbURu4VzhuojP1
EGJneM1Y79ngRQnP26+MLuIv9dja9ixSLyfz8nPGXUTnz77393JsoBPEmeq2
uYuI31a4y+SRDW6udfj9tOkTsSRrf+hsuQ2uOZ26Mar5iehqjru5/IMNIh5a
ZwtyfSRKI6f3fWi1wfuGdKGVI53EVe3dMhkdNuQ9xPak2MtOgn5Xscjgsw12
Z92dGT3ZSTwJaXwVMWSDbyHOTa0THUSCgnqc3YgNnhS7D5q+7yAO9t5wFB21
gbblp+yhvA5C2pLRUzlhA1+TH79LfTsIFuaWO/HTNnCeKxEaMO8gvhRr++yZ
s4Gi9O4MfekOotwnQ4myaIPhdz1nXq/sIK4Lr5lcWrJB6hjtxen+duL/AYMX
kj4=
          "]]}, Annotation[#, "Charting`Private`Tag$1546846#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k41N3//ylFki1ZQiH7PmIYyTxnbGMXQirJbpItSUmUpVBRqZsiisqS
JSFlyZrKThRpVSJCC5Hwe3+u6/e9b3+M63Fd55z36zxf65F0C7D1XMHCwnKN
+PnffzPP0e66sXJ9lv//x2awMfCdSAr1/3hrZmr6fZGcf9m8/WVphkjZv+zo
8bvmokjTv/xG7bTBOZEX/3LWBuu4BJFP//JJjvty8SK//mWnXTeKp7+z4f94
7fLJPSabeP5lmR2To42JAv/ykQ4KNfWXyL8sVMb3lpV1879c8dGgrVNP6l/u
Z5z8fs7kP54tqhW0sP2PtcMp+596/8eV69Vm6y7+xw8NN0qUjv7H1benD6Wk
bPmXh7hU02wz/+O/wQdqefP/4+3UEY5zj//j2pevM2K//sePOVpaQiH9L7/3
Z/umaS6N0TvZDqJ8m/RZ+mj8P3dK4+FLxQVVk2f6Etsite+5SsNu5+7qDZcX
9HGjek/AAWl8OPrqc2WgGNWV/c9JlVBpUH/7jQpv0qRGHdS+Mx4ljeKB3PUf
F4ypWb0hbXmJ0jg8y3OQtdyBWkcp/e59RRqLvx+SH6h7UN9nTgnK3pDGJq4t
vpuyA6ksq1X0PhVIo/JX0DDLm6NUCT/m/psV0mBLLFiTpRhNpfXciXOtlwZZ
QNFJyimR6qbzuWBTmzSc1M7tafp8kXrqulT3UL80OD+KjVz3S6PeZHOdvfpB
Gr0Pt98YqsiiNjAzRHdNSOMFr5/c1sRb1PtjBw64zErDRnpPiPT7fGqOj26V
O4sMIqMlDuQmlFBTvnCs9eWUQW2YvOCazWXUWK+Xzv4CMtBLjinZpF1JDf18
K//QJhkU7g2c6xuqpnp5hPwJk5eBR3bHS9Z19VTHYbrZCQ0ZxHGb7bT420hl
uPFdjdaTgYpbu7ohrYVK+fBu7IyxDE4nh8sOv39OVXQtopy3kQF3+6W4l+86
qKLvjsdfcibON/EqP3Ojm8rlYj6Q6kF8f4vRGxv2F9TFIRGF6/4yOBmX0r0i
u586uXs0LDtMBlGDc9/kQgeonbtihYvOymC3GGe9T8s7at0rO5/7V2TQMb92
7m72B2qJo1RlZZYMPHftc8XJYerFnY8dG8tkwLy099qLy1+o0S/O3XlaK4Pj
PmVyPO1j1BC7Pb/bn8qg0dEuiyY1QXXYMX/l1ZAM2u9syOO/NE016WoZeTMi
A7WopTrTr9+pOtZXyMPTMtjmxGdFsvlJFbHc2v+NTRanfWjXzprMUocYBzes
VJFF2gf21qx3f6ntLds8ObRlwekzmvv8zhK11pizfB1NFtHmCYmX9VmQaXjH
XninLCx+nmwyk1sBN3y4pBIhi6TzCQXx9NUY1d7J79Qui6Ie09a8aB4MVGxx
2/tSFk0BRQOi+3nxXOvHPbcPsuATmUjLXcGHgq1JOw7OyOIQS6SdnQU//NWe
JZ8Sl8MPc2o3aU4AM7LbeQoPyqFEJVeT49ZG6H+ktySEyaGNc6ArOkgUcRmM
SJ9oOag8C29Ko4pBUMB+akuaHIJK2tMd3ouDzHqg82qTHBR+L8pT0yQQ9jo1
6YyoPBSX1bNXs0vjb9IvHo9n8pjqTPngqKAEQ/M/LbQX8qg9POt2I10JZ1ez
RG1+Jw9nkcnZdh5liEesnR78JY9D//B8zZpRhj5TqmuHhAJ6k/gme2pUEWlo
k0w9ooA+i56O+Y0kPF3eyRA/pQDW05PFozYk8FbtZlk4q4Ds/AGyXxwJWSTv
wIqbCtiZOvxafJqEuk0nbFQ6FPDhR9twTo0GVswX8IrKKOKXVIln6XZNiLbT
f1LVFBHI91Z4wlsTmjcG+jwoikjRcU++eEETnqbs14osFSGiR7oqNqyJp2lu
MvRQYr+8wfvvJ7Tw4eA8u3eUIhqlyhN352jhDy35a2KCIuJUXLu3PNOC8tea
4r7rinhJt518zktGkq6Irm+LIgQ9tz3cnUpGLneJ2PluRRx4Vb7/eiUZdR+N
l0tfKyJi5+wRnVdk/EgIafo7RdiTJn4saIM2HF53WiULK8FIpffu5GltBBR7
kcqllJAsaCn56aY2zkQvrh9UVsLWlnWGajXaeKikNLCFpgS2GXf/liltiB2P
c3/gS/hldkfYKksdaNmIGw8dUsLJ0Ai+YjcdWEmXybOeUEJEQgvHvSM6iGz7
8M3sohKCJndeqcvUQWpWWFcA4cfnJ8b8O0t1UBLCcz/lNrHe87sipVkHH8W2
h719pAT7LIkjEqM6WJjudV7ZrIRVEp6DmXM6EGhmbpfvVIL5+pjMCA4KjA+m
rggeVkLr17g/jrIU7KOpfb7yTQkHHT95OWhSELbhSUvVbyUcG7y7XEGjIK/m
59lVXMoY4hH2z3amoOFCQoCioDJEOZ/dJHlRMOgpaWstoQzbZ32PZYMo+Emp
1AxRVEZoUPOv6HAKuLithdI0lXFUdnOQWSwFMh8/z9foK2MHF9Mj/DwF+hXH
hz4yiLi8MvdX6B8KAl3ybyjvVcZYvzA97TYF8Rq0mB3eypgfbWiMKqTg5upX
XqFBylC1HWIO3Kfg0aC/6bVwZfBcG8/OeUhBb9Eq5bpYZchYHHk9XEvBxKl0
7s9Jypj9tupEaiMFbI5bv6+5qoxB8rhOcwsF4krPe1VzlHHgxekRn1YKyMuu
FXZFyvD4uRgR10GBhWXdKaNKZTycmuUV6KbA/dpma+0GZRgcPxks3UvBsbET
ogptyjj8tqzt4QsKkrXfftnYr4zeN1bq/X0U3I7dXsb1XhnrjPb2hvdTUN2b
HrU0pgzeZdbthQT3SP61mP6pDK7Xgi1+BI8F7Bb5uKgM61tnlquJ/Sy1jz73
sqsg7hBbTBZxviDXxtJmPhXMpT16K0J8X9n56IkHoirILH1WqkTYR899ZZYn
o4IPZjPPXhH2O81qC11TU8HpPfzft7RREGD4z/BZigpudKb84HlGQdzF2eIT
Bio4y8F/JLOZgvT3O48HWqrg0rEORl89BaWq5Qw3RxVYHWTQymooeHpcYIP9
fhU4NBylUAm9Z4R7C7UPq6BZI3TKvZjwt7fGMYVIFUQc8RdYmU+BVPkFY9F4
FbzdfZ97Vw4FVjts3i2lq+CRgdx2zVQKPDKLC6Zvq2CwpuVh7QUKwr9xh30s
USHu5VjAmUhBbnw775MmFUT1iFO/H6eAtcGMfm5CBUEGQl36LhQI8+ZzR86q
YPrOTx5RBwpUXda8DmRRhQm3hFGbJQXOf1oO2Quo4sC9ifIKPQrKNIxuieqp
4uHcBpYxYQq8sqkc+Ymq4FWxaz/RpoO2GM2OJ4pqqN/97omQsg50eVpXXNBS
w3hxpKGBpA5y0/Zr74YauO0VJcIEdRBddD5raqcaxrzxaQUrsf7VaLDwSTX4
Vme/re7XRq5ShhDzpRoW86gvU2K1IVix1ULzoxqSi4MFusO1EYPnUUsTanD0
yNCTCdZGSf5CiCmrOjKDxueF9mkj8bH82zeC6iiuXTinpasN+tipktV0dbxX
6VMomyHjqGrH8wMm6oh5kSiX942MkkMin7ss1JGy+l569WcyNi0Vi1xzVIeU
A2cJtZ+Mef43p9QOquPmHT/1aqL+qTvJZ6QEqyPc0fFE/j0yvDIOPZg/oo6n
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

          "]]}, Annotation[#, "Charting`Private`Tag$1546846#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k8lO8X91VCElmStSwz1hn7zBhkPhj7vhQVQraZZEtSkZS0IIrK0kJa
JclSSqEiErJkK7QoS7sWS1HP/bxez/P9zR/3vN6v+9znus52nXMpBkS4BS3k
4eFJJh7/998uaLyzfqLKlOf//XgtZCJfSWez/j/rn8s5XSF94T+2b+srPyNd
+R97Bk7fPy7d8B8PaR+0SJd+/h8XrHBOOSL97j9OEqhQPSz98z/2Wl9449sk
L/4/L/2X5G29SuQ/Jrt+GX+UKvEf72hnsnJ+Sv/HKytFhxcsWP0f33pr0frM
ROk/7rVJmky3/h9PldZKOrj9jxm7mf7NIf/janHtqfrj/+M7bBmF8vH/8b1L
37ZlZyv/x4NCWrlu5/7Hc9FbapcX/4/XsEYF0uv+x7V9L88c+PA/rhNoaooF
6T9+Hc772cCehPHLRetkRVeZ8vSYif1YS8KdPo0/WtZPTBWMExk3/UhwX7vx
3ooTf0xReM87YgsJb3b2v6+OlGP58f9OosaSwJoOG5daZcDau5Vx+eNeEm4M
XBF/+8eKVdAd03o1lYTtUyJbF1StY9UzyydDTpIwP32HflsnkPX63FdJlUIS
Vgkpc1YVRbJ4+Kgm766RUP0zaoRnaCdLIYzrf/4WCbyp15YUaOxnmXVdTvF7
QAJdQsNLySuVFWD4/tqqVhK8tNO9G94fZ+07q9Q52EuC4Fu50bNhuazzvH5T
eW9I6L6zpnDwVgHrIfeM7PpPJDxfHqaqn3qRVTGxZYvvFAkuJO8Y0uti1oVQ
o5rNPGQk7lfYcuVIGSt7TGApR5CM2jg1ySWrK1kHgvs2hEuQYZKZXLaKUc2K
fX+xeNsqMq77RM70DN5jBQfG/I5TIyOwqL1vwbIHLM8Rc7s9emSkCNutdZh7
xLIJEM3bb0IGNaBNh23WxGK+eTVxyIqMg5m7VUZet7A0/EqZR13IEG7LSul7
1c6SfRV/OGsDod86uOpQYSdLyNd+ICeQWF/ZcsiF/zlrflBa/Ww4GUkp2Z0L
i3pZXzaOxxXFkbH3xcxn1dgB1rP1B6RK08jYKCf4ILTpFau+3z204iQZ7bNL
Z0qK3rDKPJWqqwvICFq/yQ9JI6zja+s8H1WSwc3yyX9+Yoy1/3n65eZaMuJD
K1VF2iZYMe7e023NZDzydC8wU/rEWuc6e7J/kIy2yyuuimV9Y1l3NI0OjZKh
vfdvve2HSZah80n6yDcyjL1EnXRdfrCkHfV7P/Oq4GCoWX6a9RRr0GbrikVU
FeS+4X9a8GqO1dZkHCTAUIFg6PiVlst/WbVWglXLzFSw3/5I6glTHpxjX/aQ
WqsChx9JDXaqCxGAN1nUBBVkHD1y7bA5H8YZa8W82lRQ2mX79Op+EQzcUg7w
6VNBQ0TpgKz/crTQvt8MeKMCUelPuVcWiuKafobr1l8q2MaT6O7uIIZw7SeZ
++RV8d2e1ak7I4FfKmtErm9VRRn1ioHARRmYvjVvOhKnilbBgY79UbJIOWOT
GLpfFdQnuxtyWXKQlPD4qpyriqiyttPrXsuDvmDLs7wGVahPz6uxchUQ9zIn
45CsGjT+6RTx8ZMwl/FTJPCJGr4+y37jqa4Jtv3vJrPnaqjdPhVQeFoTaXw8
e1e/UsMG6S9TbSIUyCcs/fbipxq2nRL5UPCLAlOuUoergjq6M0S/dN3XQiLb
JZO1Qx09Dl3tszK6aP631kZ+nzoWHPxyY9xFF8trNvL8SVNHUfEAPSxFFwW6
IZG3zqtjbc7IS/lvuqhftceF2q6ON99bRy7c18PC2WvLZcka+KlUFlS+xgCy
beY/WNoaiBQdlvoUYgCDwoGeQKYGsg03Zx4/ZoAgW/78UkcNSJvo5smNGKA5
N4BsHkt8r2bxenIPDW+2zvKH7NXAI6Wq1I0XaPhtlvkh9YgGUqh+ncpPaKB8
uH+j56wG+szdvrQspyPDSNqI06QBySDjOxtz6LgiXCZ3tFMDW/qr/M9W01H/
1upf+UsNJKyd2mHYT8f3IzENc1+J/eTK74pawcC6l8+cMqU0YUntLvlykIGI
G8G6VUqayJR0VHx3noFD++fFX1A0od+0jK19n4E7mpoDymaa4P21ObzpKwNy
8Smbb3OIuEy5xi12NATNRd5qcJsmkmITRG8EGMKJVKm2YI8mEo40CdzcYYjE
1jef7Y5rIurL2pP15wyRUxDXEUHEsWXPRPizckOUxYhUZF8i5IMmNZiNhngr
tyZu+K4mPAoUdiiMG+LPt+4Nixo1sVgh6MW5GUNINHLXqD3ThL148rkEASas
tuYsjB7RxNMPKb89VZjYZKb9/uRnTWz1fBe8zoCJuBWPm2qmNbHrRcm/W2ZM
XL3/I22xEAWDIlLhRRuYeHjsSISGJAWygk/O6wYz8SJI0c1ZgQK3Jz11KlFM
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
6a9//5xx4k3YvlMhYvg/FzFPiw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1546846#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
GuOm56tyNfD/AEFOyuQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1546846#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       Opacity[0.5], 
       RectangleBox[{12.142857142857142`, 0}, {14.285714285714285`, 5000}], 
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[{14.285714285714285`, 0}, {20.142857142857142`, 5000}]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 1200}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Complete relaxation\"", "\"Major relaxation\"", 
       "\"Minor relaxation\"", "\"No relaxation\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.794156686526167*^9, 3.794156750752102*^9}, 
   3.794156821046194*^9, 3.794156900425634*^9, {3.794156999810511*^9, 
   3.794157020583871*^9}, 3.794157097604418*^9, 3.794157523332419*^9, 
   3.794157570067727*^9},
 CellLabel->
  "Out[1452]=",ExpressionUUID->"b5826447-e1ea-4abe-9c8f-ff39615a6251"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/Desktop/fig14_4.png\>\"", ",", " ", "fig14"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.794156959068226*^9, 3.794156975525888*^9}, {
   3.794157091119615*^9, 3.794157091801433*^9}, {3.7941575188957243`*^9, 
   3.7941575191386223`*^9}, 3.794157564185605*^9, 
   3.794157745285049*^9},ExpressionUUID->"de896541-33a7-4e96-9053-\
a7cb64b47866"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting R0 = 2:", "Subtitle",
 CellChangeTimes->{{3.794156090803885*^9, 3.7941560917658577`*^9}, {
  3.794156834506391*^9, 
  3.794156844822997*^9}},ExpressionUUID->"a4748fa9-bfd0-4be4-b241-\
0c9bdd7d8fb1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", "+", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseline", " ", "=", " ", "2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol06", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.4"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol04", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol02", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol00", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.794156106672036*^9, {3.794156141078863*^9, 3.794156173417129*^9}, {
   3.7941563630521793`*^9, 3.7941564001285667`*^9}, {3.7941564393207912`*^9, 
   3.794156439386325*^9}, 3.7941568524303102`*^9, 3.794157549451598*^9, 
   3.79415774825128*^9},ExpressionUUID->"cec1c990-48cb-40cc-8c77-\
2d8d87c9e8ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prmax", " ", "=", " ", "1200"}], ";"}]], "Input",
 CellChangeTimes->{{3.794156277514061*^9, 3.794156278914998*^9}, {
   3.794156331056059*^9, 3.794156348490449*^9}, {3.7941568642880087`*^9, 
   3.79415686450574*^9}, 3.794156948631131*^9},
 CellLabel->
  "In[1469]:=",ExpressionUUID->"53984cae-3fb1-42fd-b9ac-1c712a671e25"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig20", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol06"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol06"}], "]"}]}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Black", ",", " ", "Red", ",", " ", "Blue", ",", " ", "Green", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Black", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Complete relaxation\>\"", ",", " ", "\"\<Major relaxation\>\"", 
       ",", "\"\<Minor relaxation\>\"", ",", " ", "\"\<No relaxation\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"npistart", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "5000"}], "}"}]}], "]"}], ",", 
       " ", "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"npiend", ",", "5000"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.794156672417858*^9, 3.794156750149516*^9}, {
  3.794156816678644*^9, 3.794156820239547*^9}, {3.794156858200831*^9, 
  3.794156858311244*^9}, {3.794157006044794*^9, 3.7941570072526073`*^9}},
 CellLabel->
  "In[1470]:=",ExpressionUUID->"7176af74-4137-4423-8952-cadf0bfc9540"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1548425#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
2p8=
          "]]}, Annotation[#, "Charting`Private`Tag$1548425#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13c8lW/YAHCrEpJRtrKziWPr3Jd1BmfYSXZCsrKi7BWVNFQSychKkpUo
q4zszAZaMpKyUvZ73s/nfX+df87n+znPue/ruu7ruZ/7EXXxNT/JQEdH58RI
R/e/38Ynp980zlRh6f7vw2Qg4PeRPxX9v1Wz0jIq+PP+s0n3SHkmf+V/Pur6
58V1/lf/eUzpgkEy/+B/vr+fmnCRf+I/RzNXHEriX/7PNseyH88vMMH/m3U7
2g5/YO9/ljT7Of3y0r7/fLZHC6Ut8/9n3krOcXr6g//Z7vK65QTPP+e4futs
lf9n+f3Pnl2y+Wf9YKeb+8v+WT3jaH6qksh/dnbIty8c/+c4Y8E7d2b+OV/9
6uDF5X/+wX7OxJtF9D8HN5C1VNT/+bLI733Pk/+5+otBV6+u2H8eJkQvJOP/
eaW0nodk/s8a57Wc293/uYZbaaXx+j8/MxQQKZ/+5/fFR438lv55jeOmp+LW
P2uP7a0q5hb/z7VBO4xzsf/8PH8+IDX1n0fZFO+YZ/3zhv/peo7ifz6CJpmT
G/65fuRDZvz3fx4/wv/S4Pc/b+VaT9PTSfxnrN8blYj9/+wwzG6jK/LPEbqk
8DXZf76Xk5RTo/bPDcxtbcHwz598mOYwJhLwvNeIV0jOEtEN6XEtWUmAj/aA
oWhPARLRidR44iQBTvt530w9e4kg+7md72kJyMbbW4REDyKnXWvRCsESMDdk
nKlj8xlFeWsUzEZJwAfnb8PPBb+j+wOBXUWXJOCBq3LEuNYiatQqX3C/JQGB
+FD5dYm/6FPWLx6pbAlQOHaSzqZlC9HtVNCdeCgBzR+uGn9lZgQRL0/nnGoJ
OKQT4lpFtwv0+gsSnJokYNN/l5A1jhVcNL89PNAlATmv4nFsw3sh5p7Ym9Fh
CRAwMFPUseaCZs9MwWM/JKCR0pyaeJUXKmZOn3ZYoeWTfKy1U04A8jy0607Q
ScKXsXBh1s9CEO82YuuzTxIqmxp/rhmLAsGFMz1WVxKI/k8yfycdAq3PH2cS
cZKAT/ickIaRAVmnUq0rppIQEHDvR+BnWWBzMHmX5ioJLqeKAmZ3KkLvsXi+
0suSwBITVs7fcxga31p4VNyShHWrrWb6MypQdlSspua+JFis6ZhfY1eF61YN
R19WSsL3q/FHDHQwYG22euvtqCRM0nV/FzmpDvi+tsmxSUngVDwYd3FKHTSp
t9S/zkuC8eJhHRN3DeAnqw7PMUlBfPrJnhZHTRgleO9nVJCCE2Eu1/O0taG7
Tecks4YUJP16q/HukTbU41iq9uhJAUXtN9PfgzqQZVhgyWclBQ98OMtS6HXB
BT7fUAiXgoURrs3qF0dgWsOKy6ZbCpgVX/pmpwH8ljqy95H3IZj9yN4/hQwB
+0W/7WIIzTey5bNjDSEhkxDpEXsIkgjCrbvaDYFnn+Uv8TuHQMnr3Ilf5kag
Tn+6N/3VIej8srCz4AwOIp77XQjpPQQM+UEThDoctJ4NRtbvD0GiutHT2h14
OPoz+jHn/CEYDTTecyATDyEf0lISBaXBO6Jt1mSYAI237uHdpKSBobrMd0SK
CMzmedsGh6XBtKG0yDSECHfaH/tu46TBMPH6K/4DxvAlturQmJk0jOIYxln9
jEEW1X2stZMGr2E+uoE6Y6itaqUG+0tDjeP25LyeCTCc6dplGS4NxMJLCQth
JmAs399wOFEaojpZbNfLTeD61MjZvTekIdDzhdyxCRP4kDOmNJcpDboKDzip
nCSQcPg61VEoDarVL9dEtEngxT+TVVghDdIedvIsjiSoHPx5NKFeGvZ1UJsN
okiwkbK81/W1NESn71nYeY8EhiZrbXqD0tCRVrY3oYYEl3fSRR38KA3LkVU6
870kGGzaobk5QxvPsH49cIIEwuGs8++XpSFctBPQCgncNDkLa7algT7y5+DZ
HWQoXeJxusUiA419JtE4LjKslArxBe6XgXhSflKPEBmwnmJ9ZiIywJLyeL+K
JBkSJKUTleRkQGXpT8h1OTL0fFKAPeoyID5PIexRJgNPhurf7yADks6sJg0q
ZHA4qlXWbiIDqsIf+FpVyZDPhTzyrWVA409jnRbNP7sNReKcZSBID0jKh8mg
nmT81tlLBuQpo18aFMgQaWh6FZ2VgWxfvrQtaTK0b1sRhGNkwJhaFsggTgaO
uuN065dl4CWOzWVckAw2wc41b2/LAFNV8uscbjLcP+zuV50jA66Xs92dWMgw
/cNLOvWRDBxuqPx7iI4MyoX+n87U0PJHGC2W3yRoPBBhqtAjAwd61YrsR0nA
/D6WmfWdDORVx6hN9pDA9GZS4/RXGbiSlGzxvJEEn1lvKuet0vaByFPtYTkk
YFh9yCEoKQskM98nbrT1FOzWX0JKstBvqPWwmEICTPa7IVctWUg/F1l04wgJ
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1548425#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
mwJbtNgxtC6KumCtfsShnIu2QPi3m8pRHFzP+/TCs8IWBWU9XhkOzljDrQx6
2myL5NVVUkcmmbjo5J9bM2oLW0H4MrocQNFWsCYTtuDZcXK04bwDaua/f3tn
aiYf1em4mm0OaH3mvbiOxw6TVvA2/EvHT+/VxxsE7RC7vOLQmBod1iEukffl
7NAh+ZcumkRDk5uojJOCHdx/BLBl19LgYvr4xgMlO+w/o2CWoUuD/zTzx0N1
O4hnzeH58tgOB+MdAlsM7XAjYTnJXGiH1gxrjza6HSxeC76qu26D1ft+/1ru
ZIfbgmRN0CEbfFx7K/kZ0w5yl23W7Jvp85/KFk+eu9jBM0h37x1hG0hfNaa/
9LQDj4BQ560tgH+DNqUjaOZ8dvzU/bCZ53C/jFh3qh1Gq+fEGxtYICWrpykz
3Q5zRop72gfMYcQpi1qROTP+fQ9brcgcO66xh2rz7MD9SWE8VjLHt/ADj89c
soOGluet2TPfLV9mdx91rbfDttfpadXmJuDeuEYTuGuHwztU+w7/NYbS5qjp
miY7JPCJfRq6awy/R1JbtVvs4LXrtlKYmzE6TzKZc1/ZIUTGwYceTsGLZaXz
bn+zA332MpHW14YIfbqvbuewHQIvmx5yu2AIiVhGhOYPO0S9t1y4erchXLs/
9Z4et8OFY327OyUN0XJJ8n4IHw1SicJepWsMcNc8Ml5dmgbLnH3130b1UL7C
gS+FRkO0RLzxtsVaSGBWxsk60PBwKLe07rkmvOw0BM470RC6/Gdp5UlNzDIS
Evnf7+JFyeqLEsQ04Sz+RPKVBw3Nag9Z0RIa6G1115TdRkPM2XMXsozVUH2/
6dK5YBqO994vDJxWxfFaMz2dEBp2PV20u6FBFZQSGYr1bho+D72UlXBTRXRi
F9U3emb+itf02XtVIOO8wfXcKRoUlwQ5q3xQwjf7l8+002iYFjt+Y3GJEmqp
ju7lGTSc7lCyiYlSwgYdzTX3cmjYIOf8oGqZEq4LDwb0FtHwPTvoYPp6RbCa
w8K1a2go2L78rNYcBUQ5xuWUddMwWFvL56i2FG0+m7z0+2iY4LhGZ76XhXIY
U/pSPw26C6/kn8mQxcO8Bclnh2kwElY8kywmi4VTWfEnJ2fy287qt+ZfgguX
K7Ztn28PnpLtTLV50phsSNccELPHg4bf1VseSYH9JrJno4Q9hrvGrGyTpPB9
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
pHc0FnxpUhftloWRfVHGQnc4LBjcXTOUZhNKRi0VePavZ0GMuv5iQW4Iibte
02W8iYWCj/s63wSFkIVaXre/BbIQdXL64FFqCDGSOb3HezsLb/QTOb4dO8j2
ceFfVntZuOtw5+uJZTtIX9l431QSC5tKf9yuCQ0mHTqtzyJusXDVf9eUSHAg
yelfsI/vDgu/9XfLLNAMJP5FK1SP1c3Ee3zF71tfNpM+5ZfhufdYiBEa5Qqs
3UxGl3QtbWplYddZu1dYvYksEBzYuPALCx97RULuB24gz5t0FmT3sJCnOH0p
WW8DSYsLrlL7ysIXohj37ed6Isf7Q9hyiIVUi22x9Oj1RHt8otRvgoWUhrU/
1+YGEHr33OkrImzINjYcrh/1J/POOZ03E2PjaGnA7usN/uSR3xHnenE2lr5M
fyN1wp+s6Jyf92IxGyXvFu+10PEnvs8X0acV2Piyp9H3YqAf2VuvlORkwsZ0
kE3o1ZG1pCSbKH/2YUP0dmbb5gpP8mPPj7l+fmzsbFv85e5mT2KyqrC/cx0b
NdanBK4t9STVoqLXX25iY/Osb7/0Dq4m9w502TSHsHEmevOJcF8P8tZ/39pr
8Wx8qvWdM6jhTuSIgZ3eITaO2Yhfnv9lJfFd8kX10pGZ868tNTyVu5J0P2MN
nk9iI4aRxnggtZIM02T3pWewsTovrCNWxI3MUavOOHCFje1OZ2p+zF5OnPiC
9/8uYePc/enHxvdcydF3iv57rrOh/FT0yPV4V7Ig7bBGaOXM+IDciFUCrsQt
1FpkpIoNp4/314c/cCGpLt+Ht91mo/3J+PaHh12I7DzPyo31bLx417hqTMSF
rP0ikvm5kY0hlYWfPuVxSH5dXZRfExvaz5X4d+twiNoeDYc1j9jIOduXF73S
mQS6d2q+esxGUWOO3MQIm1wyPDF/5dOZegibiYqnsIlh//gL53Y2DomIstT7
WCSs6dLN5ldsFDax01QyWaTyrG+W41s25l0I8mh0Y5HJqIXRdzvZeHRlx1F+
CRahet0PsH3PRuVbd0p3O5McMIt0vPORjX5dOZfNuUxSv1Bf2+oLG2EXmt4d
C2aS2SOfRG/2sKHvuOLTChqTOLac/mH8lQ3NvBue1XJMcriI+fLaABvhjMom
j2kGaYn7W6U3xMaPWQc6694wyHLrjTEaP2eub14A31g6g3hfNVmw9A8bpadi
zL4pMEiF5/j8Vh5ndJ568jORj0Hmz6kSjuVzhvDg0y2K3U6k1osq0CfgDBSM
HpK84kSkBP7OzhRyhtccaYPwZCey43otH2e+MwJqhk8+iHAiioK0v2USzghx
zp6X5ehE9pTP/r1R0hk1HF7Ti7pO5Jlv06SMtDO4kmEsSQknwr3BGD0g54y8
n8f1+F46kg5/4Z9GCs6YEDL+za1wJMbzH490Kzmjqbf/2roUR9Id4PqNpeGM
ye9H2k2ZjsRaTKL/r5Yz1sqH0XSUHcnp6ue913SdYSoRnBE15UAcxT0+S1Gc
EeV06o/FeQdSfMfn7WdrZ+RfkGsS6aGTIJmtDyLdnLGtwmpHqYM9uXdXp0lv
lTO8V8dteytmT5btGGr8uNoZe59csy56TSOtTSG1jmudMSeLsffiVhoxDIu4
sTDQGbwBd6yupNmRsSfx5y9FOSPdYsWozDxbciAuL7qj2Bm1n3evVUuyJiK7
5zL8Ljsj42JV4X0ba5KxaZt491VnPFmyZc6NH1RynWl+dqjMGdHhSYfiPKik
e8HTxll3nOGXzzYzUrUizGweAY1nzthz81T90ufm5FXihtbLL5xRIql9q/mI
OQmIfpRm+MoZQUvl2oftzMn+gDQNq05nTBUkfSsuNyMlmvpMTo8zDmuJWann
mBLJG2uPh005Y9Fk5Mfko8bk7IW77pO/nbF7kK49xDIm+hlay6J4OHA76pnb
L2JMnPaNXU2YzcEp2ptDbScoJNIu8ekZUQ5eq2b+yMszIvOMf6XLi3Mg3yOh
4LLRiKSqrvE/v5CDXpdH+8p0jMjVeWo/rkhzIJ63x6H4liH5+KRmYb0SB2HX
dS4nfzIgwXXKnXRVDp4ToW6rqwZk+trh883qHNwKk19RuteALEp1N3mhw4Gx
zzbWnMUGxNFrcFWvKQcH80ZYxav0yXO2m/w2Cw7okwOVoxr6xI9U9Y5YccAz
oXOLPqlH9ijGR0zZcOA79fkSh6VHLvcuPTOfxUHUF46C8xxdkpAV59vlzMHD
pY92XCnRIQHLv6lcceVA7JlGVYi3DpG9dauEvYqD827VwbQabXI4cc29o/4c
2PK8rt1/RItsMkkfEYzg4MTsh8VRizUIrZ/nxpu9HIgs3vbW/L46WZa7KbJ4
PwfzTpZyPoerk/Z5ZnMZXA7uRJT1ar1RI/ad7bKHEjkIFqhS2pmlShS5Cx3n
Fswc/xg7ytRVJn/MIkVeXuDgwIv7jnwflcjrb5/aCi5ycFxgTphhqhJJWnXd
m17KQefnP5DhUSJ/NZfvjLvFwd6gWYPTbxTIm3c3zVbe4eClp8Iq32QFUpGi
8Ee5noPy7+vWR7EUSNCf4YTGJg5+vulzF6+TJx1PE7P5nnFgLaRQPLJpGamM
H1v37AUHDsceeLF75EiK5VqNs684WEUVGy7cKEeY53XLbLs4kE4+G5sVtJRU
hbc8iO7jQI1f/FvA6SUkVcc40XWAA0r3W8OTakvIjo+ZbgpDM/O3ZAzZV8kQ
ddbWd7U/OZi/SCmd2yNN+Hmfn0sa4+CYVswWgxhp8r7cMtB3kgPHa7wHLiyT
JrcCz+rp/+ZgCXfrg8k7UuT0MqFff/9ywBt5zMJ8nRT5H6PSu14=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1548425#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
9B9p5rH47//W/w85AJT5
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1548425#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
N84dv7WwXnLlrQaKOhkSfl6/6KEjxvf+5B7uVSX0i2zcyi8dsVd8vdoOXWXS
kxHcUdrpCJHUyVM3PyiRoKTWMzo9jlhdXtB/O1OJ7As6o2za74gMy0wLxYm1
pFxFi84cdsSA41sdl/uKRPz2xvSYv47Y+JXfMD9JnuRea/D4888Ra2JiFQyJ
PNE6p7o6gY2JGN2e37/+yRG7+Omy1MVMxIYfyxRLkCNxVhnPzwsyEXRzp+vR
TFnCo//rrIwIE+drnhqZe8mSU4rrA/LFmEg223XQaY0sKeNZ+/O6JBMcVQK5
N2+vIR/ba8Tq5BaasW3FV1SnZEjEI/l+G0Um+n4aXLn0RIbMVhzKb1FiwkJt
f0bhRRmy7JSHQac6E9v7hPRGGDKE5vPNc8SQCRVqed49p9WkdGTleQEGEz/T
Jy74FUqT1Oz9fm8dmThWxChRs5MmQS5jCtedmTjq8urokxEpIn3/frmDJxOv
4uX2F6+VIocy1jceCWDi+t2e6NR8SRJicHaCdw8TO7O8ezeXihPqV7bbr2OZ
yK93sj3qJE5W54TEFe1jotbbZ5/35DLSxWPEZZ/ChOBI+GJZ82XEur9LOi2D
CU22rIL+N6JENkWMxnWVCfexs/eb6cJkzihuafc1JriLq6er5oVI79jAi6vF
TIzndv6QqxQimZ43N9jcWNAfVz9UJi9Ewvil5MRvMaE0PhT38oEgoT1ijQxW
MVHcWLm2XF+QzKu47Nh/nwmhgyu+CmoJkNfv7hi5P2TicX7oo+aKpaTqxJo5
+TommoVzBDyMl5Jtc99T65uYmDHTTFvnwk/sb3o5nnjKxB9dq+jFg3xEIaRW
NKiNCepAufNELB/pe55xkeMlE096lm6crOIl1QemA192MvHa7TbDYj0vOWGy
UTm3h4nqXxrXjDl5CT1f45blWyayhf/JnQniIYrep/aIfGBiR93SRXrSPGSR
4Jz5xwEmvJ9mbfPu5iZ3d7c9SfrMxP619ypNnLjJKXX9DOdRJvTyZJ2Hl3KT
yI8X3NaMM2H3gawKbOUiSoywd7WTTLBbiP9soHMRTvZXeZnTTLBVHXEo4uci
7ytNQv3+LMQ3Uzdh3bMl5H5orqbWPyZsd2/RfpG5hJxezfdrfn5BXuLoUlG3
JeT/AIGPFM0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1548425#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k0Ve8X/01FiDKVqcwhUxkzPW9c18W9LmWKSEgqJEMjyUUhITSJIirJ
HJIKyVQoERIaVIYmaVCi/PzW+v0+3/PPWa919vs8732evc6zt6z3no3bOdjY
2GQ42dj+791m+/jThokqU7b/d3FZSAS/Es8g/5+1L53Luime/x/bdvZXZItX
/scuvr/upYk3/cfDmsctToo/+49zRJnHEsXf/cfRPDfXJIj/+I9dN+eWfp3i
wv9nvvnoLVarBP9jRYcv4w9OiPzH+x9vIOd+iP/HKyqXv2RnX/0fV49YdDwx
lvuP+2jRUyet/sfTJXVi9I3/Y/3DG7a17fgf1whrTjek/Y9vUyRkKsb/x3ev
fg3NyJD/j4f4Nc5vvPQ/ngvZXbes8H9sQkZ5Ttb/j+v6B7PjPvyP63laW/dB
4T9+HcT1WcdWAQGSXD3efKtM2XrNhL47KYCyOcZvJx6ayhhF6Zd7KSBGws8p
N23WFLl3t+zZrYBvmSENOnuliBf3n2j1fQroiO7nL1ytQ44G6l/7eFQBGNmt
/fwfleT0hHVcP6GAsfmJTw63nUnDhoqpHWcU0LqfunuNni95fWlSTClXAX9L
Z3QtrwcTtsXqxu9uKKBUx1lVYvwgkQnYte1ytQIG5XcybunEELPua8e87ivg
eEhV5sudJ4i3wfsbqzoUIONkopL9PY2wLso9HepTgPcS3V2z0efJZS6v6cw3
CjBafEWlriWHNO7Kltz8SQHVdK8I98tXyM2J3bs9pxWw1WdGL4HtBsn3N7zj
w6aIMk43jUc5ZSRjjIdvJ68i/KP9Pg8aV5I4v363IBFFGH852VDmWUP2vb9S
GLpKEa1HREf2L7tH/HzD/hxQVkR1wscBB437xOWtuc2R9Yo4mDvwul+pidC8
l2fGGCuC5tDczre/lWx482oinqqI5EvO2boK7UTVq2RDsr0i0l/fI6raT4jk
q4iEdDdFpOJdZf6zp4Tf03bgnK8iuJV+TSZaPiN/h8RVLgYpQplVM6v7pY98
cR8/kHdAEbZWdIWdXQPkyea4lSVJihj13jkZJf+aNDzf5H/zjCIeuXbbvPvy
hpS5yNXU5ChiUV9gYtDAW5LmVO/yoFIR5jmtjwyWjpOYZyevtdUpYqijRY7b
5QMJ27TlV2ebIkqX9CvMNHwizg4zZ54PKeJtKrvjqz9fiVVX6+jwqCKecn+S
2eT1jRgwz+i9/aoIAxmOk996vxNxhnbfZy4lOAmk+yRMTZMhWqAop7oSHCu2
/WSO/yWdrUbbefSVICfza8eOznlSR+WtWmqmhN5NS6W43rDhEuWa40onJeQH
fjav/sQBb7xJV49UgqiW+r1TntzYVF/6dv1xJXhQRpkxJ3lAMT2ibXBKCSVx
DK7KB0ugaCzZY35FCVzT3nuSLPkxru8k5NqphHKml/+Zx8swUC3v7dGvhKMa
BRQx1nI80v1W7v1GCWklr7O/GgjhhnaKQ+BPJajKf+TNKBNGkObDVJb0GiiG
W7i1t4jhp5KJYHHgGujTJJUtEqRhOmLemnhgDTrHeMPqWatwLJsW5R+zBo4H
8otvR62GmIjjpPz5NbAuiBvlbZSBHvvuJ5lNa0DvsOXkHJTDgcFzKfGSyvhQ
Ljjo7rkGDWcuWvkpKYMxJxrtNb0GPBvz5y3WKeNEVdkn0VRlnG8r3TNPVQbL
QSf2bJsKaqtamPtClHFohd3+OYYa5lJ+CPo+VIZMdvy/gG4tUGz/tJo9U8Zn
xpL5r6rrkLSY7ejqV8qgaa1z5oldB+lIvq8vfigjRj5doEN/PUx3yXU5yKig
IHvYLyNfG1EU+1SyXwVCaiqWpol64Ji5sUxSURUVd8J9lpkbQ7LT/DvRVMVE
alb/gQxj6OQO9PpuUIV57+XbfqPG2G7NfaGEoQorh6Rr9fEmaDvvrWi+TxUR
vhddRlpMkWIobrizVRUha1m+19OAAoEyqeSnqlBSVzfjuQU0jFDnKwZVoU27
IMA3CHxLDGuam1SF36L6w79kzeA8+MQudeVa7K+rOWxzwwxSEcd8bu1cC9rx
nAmBG+bQtZemDoWuxfV3Ik91HprDTqFSmf3IWiTKuBpOjZojquPNZ5u0tQiQ
D4GarAVGpEwOvKxdi8/+XDfyUy0w+7XHjbN5La51VDntv2EBkeZdJspP1qLp
2an+l80WoAae4wh5uxbb0yX3B8xY4Pq970mL+NWw4cXwD5Y7BY2nEveoiqmh
2Vkn5m8IBS+2y25kyqgh0tby+tJECvgFmCvO66jhsOKVK5PVFAR7Fuaqeajh
9qdPT+7zWSJhvVmsww41jN+Mrv262hKXFz/327dXDStGbVtuaVuip2SRWkOc
Gp74rX8s6GYJvXmv6k0lakjUSKJP51qCzmhgWdaooer8ueBLFZbwubCaqd+o
BjN906SJRkuk6r8ck+hTg8giJe7tI5aY2OMuPvJXDe75trelpalgq6t938Ot
jhdMY8FvqlSI8UtUNC9XR3NSwd4QAyrMC57bXFdUR/Bbg81HNlKR9dopIpih
jqavDbnfWVRUaFTRvF3UkfNpuHxzMhVtESKijtvU8dpRUPTQeSp+ruwp1g9X
h8TybuOpEirsHOxf/ctSx9zb8txPfVT4Xiq98fWqOm6mOU24vqbi8GeBAyNl
6mhM3KyePEFFQULnspYmdfgulnvlNksFe6ON+clP6vA/z9hSLGWFlcsKBaKm
1dGd+yQ0TcEKGp5LBoPZNHDSxGaTnZoV3P60hjqKaMBQ/Nk5eyMrVK63vCJp
rIGlI8XV112s4JdHeApPaEDo3q7Wb4lWiJi6+OzCaQ0UvMyT/ZFqhXTyL+fk
pYV4NXriyBkrNAze3bD3pgbs05fST1y2griI4W6DQQ08fiIfpXrbCh2xOo9b
VDUhUyC26cg7KxgKtnOc0tVEZsL3avLBCgXnt+m7QxPk+I7RuUkrxJQk50w6
aeLaPqmdQbML8c/HQ1ZGa0LzWU2flRANBWuzV+zq10QKf6kJCzSIVWvTdUY0
UWFzNsOHSkMsHh3990kT81zp1+l0GsoKZ8Os2bWgyOtibeBKw4l65ZfDYlqI
LHU8GxNMg/kEq2yxuRZqyvi4rfJoOKjx+NFuKy3UZp85/eL6gj5U/H0XXQuH
fOZtIspoWPWvVPyCixa+xLfwf7xHw4zQMEszUAur3ZZYRAwsxBvrO7me08L8
GmPRTGFrrE79OHP9ixYebNwwmpBhjbptUdcrvmuB6XL189ksa3hqC2++81sL
o1i7uirfGll9hjUdHOswbp7KL11ljZXSifsmxdZh5NT+0Nw+awgVKn/XIeuQ
LnXFOEzKBouatn+qT1mHq/ulQscqbPDx16uXvVrrYSjRwinGTUf1jpRGG731
OH1JpzVAmI6j/aZX643WI0Knk6trNR1it7IDr1PX4/esju0dAzrM97nPRWxZ
j8l41e2yu+nI/NEnrhC/HjvOPJwT7KaDNtXpGPJqPYQWaqrgGgP5H+48EkjW
hmbNwP2S3UwEnWXK70rXRrcCj/+vg0zoU94ebj6nDe9ll5iW8Uw8yuZVj8jT
xnnD7Ulf85mYst+cMlGjjXlrfn/WSyZMb01vanqrDa7wZRFQsQePb2LR6glt
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
zD6WcD2wFmMzpCPFh+9i8xUWSTcc+3HLmA4X0ecuv0NYRK4itmcPoWN2ZkS2
EiyC3PrUVxQ6RuxMpRqGo0lklC5fPZMOSke/zB/paDJtJMt2ZDsdhRaq5aNB
USTuZt1LXX863k4OKLIkoojI2i33Pu+iQyc06bpT6xGiLXH2kEcwHWZCHnkV
CkdI8G/+n8aH6dgt+vx0+pcIMlH5e2I2lY5zqlKfL5UdIkPqXT0H79Jhddhw
5avSfeTSx+WRnPV07HhUvJh1YB/xvr5J6eR9OjSzVjEyzPaRCYX+AzktdJgT
s1y53nAyLflSurWLjn/71M8ocoST5byfdoi8p0Nl2o+jMjSUPGtVX35xjI7n
XxffE6WEknNxe2rXfKCjpf+t6weRULKK/Tu/0SQdOY3CJR9vhRC13zPl22bo
SOOjP7bjDCHUUe65kqUM5I0mvBYpDSZL8q2vGCxjwEhzi7/zsWDSse2EXaMQ
A0X7pbfOeASTTcMCub0rGFjKE3jeRyCYeD0Tpc7JMrDW7igrbSyIHG6UT7XW
Y6D3UNor4UsBpOwiUXjnyQBPwQn3M+H+5Puh79zbtjGgYjl1SF3fn+i5XPs4
7MPAh1MiYxIzO8gdQcGb/f4M0G2XWPyN3EFajr40aw9hYMfNly5sSX5k0Dty
a8UxBoz5e/04an3JKrLOQjOBgdiLnc3x0b7ES/K9UtEJBuQUXMf2W/uS0R76
lyupDPSLnxM8/cKHfKVIRZ7PZGCz0i/zj+w+ZPGaO5lHSxjICu+8usRvG7Hm
3HPkbxkDXPrZl6/qbCNJr+S8D91kwEazp6+OcxtZfi5RJayGgaDe0bjteV5E
aolbzY5GBoSGGs67Pt1K1n/83WvXx4AM995XFis9SHhr0e325wys2mLVPtO8
hdTkeWXTBhlYeTVNuD1sCzHZ0uZr/pqBKcOQH2297oTWefa77gcGzB3vpodc
cSMepXrLpf8xEHjj5lpWpCupdvst0MVmBw2Vz9eKDFyJwOJa/hhOO6SfnvSy
/+lCGraY8Ezw2MG95e9GwVAXIsdLma8UtkN8Mw9N5YgzGfV1+ExXsUMSGbky
dNqRBEkEPIxwtIPPEcfm1jZ70tKs3qrpYgf5acGy/Sftyeq9k00jm+2QZtyl
HrLRnnS1hjTQttrB7ph8S2Utk6wPP3hLZJcdRJV/hrBNMsivJ8euFEXZ4dqW
dwfbWTbE/jAtbyvLDlkWjwcEJWxIgRJvrlCcHR6ud94eV2FN3CJPZh1ItEOR
xRW2tWM0clc1I51y2g6sj5wb93pZkaNxudFDhXa4oPimOOQChSzdz22zrdgO
qe21L24zKSTTP1BotNQOsrQ7PGmLKOSm7Ya8yUo7LOlliovusyAwubQ77JYd
tAJDnz3RsiAdGot0Zm7b4f3HITOjz+ZkdPnTJo56OzCKct5Z7DYnIZz6J4/f
t8PqfYnfvqqZk/kfWU78TQvfQ2/AJ+irGVn53H9U9KEd2K43yf6JMCO2F9l4
VHrsEN5WNLK+GOR5il9Xce8C3zz7FkdAfKM7zq1/bofYSsVCTweQI77nVIyH
7ZCxLCOke5aQMlUtW+aYHUYYfNMytaZE7NbW5PBZO9xwbnRmLjEmeQXNzn/+
2mEisX9FX6kR0cpcuzqKjYmWpKamJicjYh35qzR+ERP8L3Lil+QYkgiLlKcX
BJngqquzPKK5gYw8qRNplGcivD2YLZqiR/bcVximKjHhorqTXWpMl8xVJF5p
V2ZCeEAhfjhBl4iecdbrVWfi8eJtnZxdOoS25YvLuD4TES20JlUvbVI8Ln1B
gM5E3XT1Y7tMLRKfHef10o6Jvbt35HMbaRHfjZ8VSxyY2FA7EFx/W5NI3b1b
xnBhQq7KsW0rTYMkpri3JHkzcdKnIhnH1hI/yoMTW7YzkbxIT5w6rErMZ1Qd
1PyZmFVbb5Gur0pmvP8Mtgcy8d5hdnHCtDLx1zs/xXuQCfEXeVasXCVC+ch2
68VhJq4m17X6iimR1Tn+EYVHmGB3lOE9l6JI+pYYcNvEMvHPSWZHeIoCqai7
1CF+nIk9uiGPtokpkORQ7rSJBCYkdodEy1+WJ5bDfVIJKUy8WfX+8I02OSKT
ZjrimsZEM+HjqfSRI3PUq9eUTzPhNkc9KMYlR57PLg38fZaJtUrfvn+/Lksq
y8LXt2UycTHZLyvQSZakbh/+dTabCSnuf2fyF8uS3RKW93bkMCG7TYin9p4M
oT4pYunnMTET+Ff4ySEZIhcrQuO+ysT0v5WvuExlyD+DiKX9BUycfV93MoJb
hgx8ftt99cZCvqOn4ktKVpPKy7bn9pUwseN4zIY/rqtJqstND2r5wn5F9sY+
5l5NAvgl5cUqmdA46/m5o3YVod1njb+vXshnNLLkzd5VZF51Y2jcXSbag2fX
zH+UJi9e3TZwqmfiwZMVLq9LpEl1huw/hUYm8oqpHfHh0iTNOuHBj6YFvdRY
4zsiTYL+fY1vamUiSNN13+ul0sTmpqtdxiMm3v36Lev/Sooo+jcI+3YyERWv
zO5fKUXYpJUHtLuYCP5uyexIkiJDT1MucvYw8dOmzCraX4rUHPvl09PLhFdu
i2KolRTJMNqqkveciR884wrJKlIk+GvLl5BBJv6khx6tE5Aitlc0Ks1fMtHk
2Bb6dVqSKLmdOSj0hokED0vDZSOShEPwn+nIWyYSG6wFebskycsH27kqRpkQ
TdXReNQgSWoPdD6Mnljw89K327hSkpxR101x+LSw//c26NsVSpK9I1mOspNM
3ITQuQ+XJQn9LJfE1NRCPR9kaP3LliTK9IBXDT+YOHzQxij8giThYn+Wn/rr
/9af/w+jBX5dZbTL6w8TfyUWnzVdiL+7K09T6y8TZa9ZnjtzJcnZ1Xw/5+eZ
2H7L5FjBNUnyfwBgK9rW
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1548425#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k41c8b921FG4W0qRCyU86xM2/LOcd+yJYW2SsVZU0ly9FCC0UlkbWy
FYmohGQryRbKVqmErKUkyXOe63qe7+/8c67XNffMvO973jOfGXFXn20eXBwc
HEbcHBz/99/UY7ClcqhYj+P//XgM1x5+vyae/H9WTUlIerAm8z82a+wsTF5T
9B87uE8/vbym+j/uVT5jeGHNm/84dSXzdPSaz/9xON+DzVFrpv7j7Y5p+ROT
PPj/vGQ+fBdjg8B/LGU9Nvj8nPB/HPRakyRMrfmPVxWt6OPk3PgfP+w3fNWk
I/EfdxiHT15g/I9/3SsXMd/2P1Y/rulSv/d/XCqk/Kvy8v/4kdFascLB/3HZ
7Qm/+PhN/3HPUqXr21L+x399D5Qvz/kf65IBvgsV/+Pyzu7kU8P/4wq+urpA
SP7HH7x5Rilmkji4jqfNdckGPY52fcEfdpIwcmR57scLPTHtUPX7zpJgrfW0
S7s8q4e0sl0+ByTxPdG3knJElDjz/glXDJTEq/DOpTkbKSTskPqdb2GSQP8B
1bf/6CS1zf9V9jlJfJ0fGrF+ZE8qNQsn916VRF0Q/cBmNXfyIWVcRDpNEnP5
M1Ra9mHCsVBR53OuJPIp9nJrB4OJ2EEvl/SHkujetN+ihMIi+q13Tjs/k8QZ
3+LEvv3niKvGl9wNryQhZqcrm/zjMom4KdHS0yEJ10VUr9nw6ySdx/lX4kdJ
aC+8JVtem0qqvJLXOY5I4qG584md6bfIg6EDB5x+SWKP24xaFEcuydyn9cSN
QwoF3DuUXqYWkPivfEv2L5bCvnDP0W6dInLKs3OHt7AUdMYuVBY4lZLAL7dy
/DZIoe7kyv6g5U+Jp7v/n6MyUngY9e2dtdIz4vDJwPTkVikEp7370CldTYxd
VySydKRgbF3TsCSojmh+fD90li6Fiyn2yVTJBiLnfE/zopUU4j48JXKqTWTd
+xNRcTukEIvPRZlvWshSJ7N3Ce5S4JWeHo+mvSFzPWtkb3pLQSaidJY61kHG
dg4ezTgqBTOGueT+5nekyfHU6nvnpTDgun88dNMHUvnWZt+Dq1J4ub3V9PPY
R1LgIFFamiqFBR2Hor3ffSKX7SocnhdJwSC17qXGskHCenPhTn25FHpe1Urw
OgwTf5td0431Ushf1Ck5UzlC7K1nrr7tkcKnWE7b938mCKO5bqB3QAotvCNi
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
9SwqdOueMyD/B6yq/v0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1548425#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       Opacity[0.5], 
       RectangleBox[{12.142857142857142`, 0}, {14.285714285714285`, 5000}], 
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[{14.285714285714285`, 0}, {20.142857142857142`, 5000}]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 1200}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Complete relaxation\"", "\"Major relaxation\"", 
       "\"Minor relaxation\"", "\"No relaxation\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.794156686526167*^9, 3.794156750752102*^9}, 
   3.794156821046194*^9, {3.794156858997643*^9, 3.7941568661139507`*^9}, {
   3.794157000749041*^9, 3.7941570211408873`*^9}, 3.794157098341044*^9, 
   3.794157570846714*^9},
 CellLabel->
  "Out[1471]=",ExpressionUUID->"5d978949-5489-4527-960d-9e39f92a199c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/Desktop/fig20_4.png\>\"", ",", " ", "fig20"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.794156982796707*^9, 3.794156984540175*^9}, {
   3.794157087820444*^9, 3.794157088157761*^9}, {3.7941575107207537`*^9, 
   3.79415751142692*^9}, 3.794157561132143*^9, 
   3.794157750827306*^9},ExpressionUUID->"4a1538e0-7cb0-473e-8ae1-\
63970aa1a942"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting R0 = 2.4:", "Subtitle",
 CellChangeTimes->{{3.794156090803885*^9, 3.7941560917658577`*^9}, {
  3.794156834506391*^9, 
  3.794156847638949*^9}},ExpressionUUID->"4611a5e5-72ba-49b9-a97e-\
fa81a28cb294"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", "+", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseline", " ", "=", " ", "2.4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol06", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.4"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol04", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol02", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol00", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.794156106672036*^9, {3.794156141078863*^9, 3.794156173417129*^9}, {
   3.7941563630521793`*^9, 3.7941564001285667`*^9}, {3.7941564393207912`*^9, 
   3.794156439386325*^9}, 3.794156908471367*^9, 3.7941575538284397`*^9, 
   3.794157752984179*^9},ExpressionUUID->"be27365c-4d3e-4301-b38c-\
933cf9fefc5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prmax", " ", "=", " ", "1200"}], ";"}]], "Input",
 CellChangeTimes->{{3.794156277514061*^9, 3.794156278914998*^9}, {
  3.794156331056059*^9, 3.794156348490449*^9}, {3.794156915596548*^9, 
  3.7941569205773573`*^9}},
 CellLabel->
  "In[1488]:=",ExpressionUUID->"3186ae79-0397-47be-a7d8-7ba19e48fb32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig24", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol06"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol06"}], "]"}]}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Black", ",", " ", "Red", ",", " ", "Blue", ",", " ", "Green", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Black", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Complete relaxation\>\"", ",", " ", "\"\<Major relaxation\>\"", 
       ",", "\"\<Minor relaxation\>\"", ",", " ", "\"\<No relaxation\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"npistart", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "5000"}], "}"}]}], "]"}], ",", 
       " ", "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"npiend", ",", "5000"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.794156672417858*^9, 3.794156750149516*^9}, {
  3.794156816678644*^9, 3.794156820239547*^9}, {3.79415691200869*^9, 
  3.794156928506096*^9}},
 CellLabel->
  "In[1489]:=",ExpressionUUID->"29d0676a-06cb-494d-b0b1-a247cb6f66cc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
tFMpXRNhzHVz+89nQupK3NrsjZqYTn2S5dqeidE1Gly8dpp4NNYQs3g8E3fS
ej9FOWniw7wXPcHcLFj544qPpyb7BPXdgUOUhZUfvrI++GiC6aoWJynNQp/l
qbBNAZrI2jbR3URhIVJpzsAgUhPun9DbR2PB5OQV8etRmljtEtBJ1rPAz+fG
LRvPbt/e3KZgw8LZz/fq+TM0saPkYmuxGwuBx22kfbPY619UYiXkxYIOo39/
ba4meuavlhXyZYFjIrxFolATelvXj57ezUJ9wSLlA2fY8XsCdB6GsZBtUZj4
9oImosxLTvruZcH9l3qXxlVNlFW1jJyJYkH+bK12xk1NmLE2L/eLZWHC1iVz
+I4mFB/fn1+dwELl7JdBRpUmbJ2jS4sPs5BQGoOiJ5oodZSbWJbCgrWTcN6f
Z5qQf6RVJ5jGzse8CxOOLzVRrhe3Kj+dnY/rBhZlzZoYse76VZ7BwiW3V8VL
3mliRe2P01syWQhbtP3Pzi5NuOZf2cpim3b7p31NvyZ6Wz7vt2ebxyvlsviw
JhoCjxqcY/+/SXDt/P1jmoBv8mAiO37+gxtubZOa8K4rr/uRysIOX9MK9WlN
NC6NVfqRzILKinf86XOaeCU/dzyBPf+pJ/4+Q9xU5BSSi2fZ63scxFFtwkvF
Gs+APw7s9aeJZa88xU+Fl+c1xTx2fhzr1wX/FqLCO0O5OZCdP/GIe88dRKmQ
aRU48pad3yFpG6kba6lIP1A118zOf9nrvn2LZaiouXuz3Yu9Pweiwpt9FKiw
Xb1YL5W9f2aKiyhPVKjQfeh5eb07C+/i1Tv36lGx3pb/yCFbForVarVaaVRo
SNxsX2TOgn+nc4Yag4q38Xcn5ens/daJIYPWVKgd3digrcbe736hXGMmFXtf
7T0tv46FLFbJeIELFdUNTQfuiLEg9/nlaaYXFQ6WQp8reFkYP+b5+9ouKn6n
Xau2mctEpclPO77d7PmW66hHDGXCqkBs3uO9VGzVMjtcVJmJMFt/b9VMKlo/
rf14zjETtNm/VSnZVFwK2igwY5CJhaVZKwbyqJC0u/jpskQmTnDfe5Z/lgq3
WaFahaEMPKrgVVpUScW7Qom83t0Z4Bcr+frxIxVaIl9DBrzSAcf4zv5hKvS9
jN+XmaQjJNOjoW+MCt8rajyiUulo41xZ0jNFxe3ksnv3O9NQOJDk/mGxFoo/
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
hA==
          "]], 
         LineBox[CompressedData["
1:eJwtUg9QzXkQf1KX8u9K3KRMQn9xdVI47K3ElPLbOOSKk1QSHSLlcp1c5UU8
ugr9IaXk6e/r9VLv9+2/SJr8S4+UytQVUh3Nm95R927mdmZnZ2d39vPZ/ayp
z8HNfhoCgcBN7f/F0qpuzdEoDgX/28no65GvxBzq6qTb2/Umw9RQ7Q278zhs
l6gGOk+nQnJAkH5vAYfjU4THVpldhWLXFZmDUg4H6mOcY26lQ6/e4zqNSg7N
jtVOqWSZ4HpVMMnqKYcpFuYfT0feAoXI/1FeC4fKSY7rSm3F4Bv58PISBYca
cuOiV+1iiPC9bLWqncOSodAMvSW5UGht60p/ccjZ3TzlWZMPs0p3nQ/5h8PC
F6rQaTVFkJlzd5vqC4ezWhf2N+pIwDZ5ocnvAkKv0WmCBHcJuPymLBBqEcZ7
zdVybpPAibWixynTCVu8O0s9e4pBx37kylx9wq9oRobQTApJ5l4+WQaEG6t2
j933lUKBjsXHfENC07boj1GdUuhurjComU/4Ne9lpNVUAgerF7SvNyfMj2vr
6tKSwWfJmaxGS8JE6OxVrJbBzKRtDi2LCZ1HcuMNb8vAeccHj75lhP5hdbwg
vBTy+uakTHMjvDsvWIbDd0CYFu3dwRHuMV4TbmFaBr6bB8zyNxE6LGuKnuhe
BsY8X7jRg3Bfs1iRLi6DMyKv+jgfwqo/dgYl/VgO/k61Z3f4qesnlR4bw8vB
cdR606IAwqOpgbs1M8ph1EfV1hhEyL4LXB32vhwCHK4M6x4nXNFYqJcWIgen
d4LSl+GENfzI218T5WCSHnBCHEH4vNGG3yOVw3Od5dobogh1HfWKvQblIKm4
9tDwNGFezvj5oMk8nD+iHd8fS6i36HCzyJyHde3PjWNFhPrC/W91PXmYGw/d
2+PV9/BeGe4fzMPn9dk3LRMJfbYYt7fG8iAtDFlyP5nQXnTt5AQZDxf82pWX
0ghjWoRh/AMe9s9ex/amE1Y46OXHd/AwL8rAWTubcI3LOUiayGBs+YmprTmE
hqp7VG/A4MXAmyfZtwnH6mwmf2PGQJrhevlYPmG1VV9j7FIGFzyKd64vUuub
YzBgspbBgSlG82dJCZWVioaX7gycq0/19cgIvwx5MPlOBuPWm49E84R82syt
I0cZvHxdtnxrJaGGYUqB++8MZAmmYwtqCFNz951rFTKId4mt/VRHSIobLmcv
MvhlbEhYd4+wzejQD0FXGGwo3s4lPCA0UH5oiEhnYBZQNcO3iVDW7+RUnc1A
MMfyhd0jwrgjiToOuQxePRZdnfiU0M9AM6SjkMGdGOWepy2EE9ykXXIpg4SV
u6wyFYTWyQ3i5lIGh4bqPwS3EWZF7F1oVM7ANetbqWOHWu/jRRXX5AzMPZOO
63cRSnQaK3/mGWhMH4PuN4TPClpjf1LnHbV+mpJewr3vVKEX1f3lYU0Nkf2E
S1dt79FWz0tabC/a9J5QMG/G4go13uHu1C2mg4RJxiQuUfNxu6Q5e3iYsPy2
zZ1BNV9LtwOvqz4R2pGiKEi9j+aEZzcuKAkfxBz42/Ymg86SlYHeKvV/PJne
8v11Bnxgpo3tF8Lgoh5pXDKDSyaTR8bHCWfe0Buw+JPBvyqlRVo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1550005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxFm3k41F/0x20hZE/WsmcnjN3cYwxmBmUZS7ZsqWzZspRK9i0kCilLylpU
KkuWREq2bKEICSEiS0r85vc8v9+3+Wee1/O5n3vOed9zzz33j4+I61mLkzRU
VFRAS0X1v/+kk3Pvm789xVL9349On9/vM18G+n9WycvKfcJX9B8bd314fJuv
+j+2cd9sSOdr/Y/HFOP0r/IN/Mf5+4/FJvJN/8dXGJ8cTuBb+49tjxdU/lih
g/9n5t0rDkYH2f5jCfOluVdJ3P9xSLcmylrj+48PVHOMU1Mf+o8dkv+Qp3n+
caH713ev5f6x3P7a2iTbf4wLds7cX/WP1XJt7mcoCv/HLk73HUvG/3E0SSA7
+9s/vq+WNpC49o8XWc8b+zCJ/MfBTaaaymr/OFl4nfvF1X/8bEq/s0dH9D8e
IlxZuWr0jzceNvKYWPxj9QuaLm9O/eMaLsWN5vR/XIvnF348949Hy2wM/H7+
49/smZ4KO/9Ya4ztaRmX2H9cd24P6S72H7+4/yMwI+Mff2JRyLbI+8fbAV6N
7GX/WBfNMF5t+seNHz7ejpn/x+O6fK/01//xzl3rOWoq8f8Y6/de+dL+f+w0
xGqrI/yPL+mYXPwt84/vFCYU1mD+cRNje3sw/OMJX7rvqsbi0MH2g/egLBlR
Depx/rQShwWFhALn7mIkrH1Z/ZGzOESvuDNF1L1CUPDC4ayXONxuM+PcGzWA
nBl+X5EPFof33uLiN+0mUYSPevFChDh8Pv9nQU5kHuX3B3WWJokD9029KTxa
Rc2aj1dO3RCHr6UDLdcVfqGJvGUeyQJxuPrefkx7cAdR0cvrTJeLQ6GCVviR
/bQg7O3pUvhMHEi1xRdXOBlAr6841vmlOPjq3lqzcGYGV42v5Qc7xaHe5O/k
+BYbRN4Rff9pSBxuNBjNG/pyQovnbYHji+JAPNOJE6g9AE++eXk5bYhDdujT
ETMnfig6rVXvRiUBxTbvvosdEoIYjw92vtwScDbJbc04VAQIrhw5UToS4OIx
q/Jy4jBoTn7+Fm8oAcrx5YfGsqRBxvmhZoqZBCj8dHTLIMsCi5PxSJa7BLg7
TTFjcxWg53gM78NkCVjwyqytxitD87Dl6Sc3JIDrHXPJqzVlqLIRranJl4CA
h4JzTvkqkG7VZPOqWgK6235aLiyogrX51o3hTxJwN4PrypCTOnwi+OynlZcE
+RM1b3bWtaGrXfsko7okVLePC9LG6kCjIdPTfXqS0H7fVYiaRxfy8MVkXitJ
QKZvrySoYcEVJq/LX5SEF+K/lAewAHPqVpy2XZIQqLqZ/fkODkaeibk6fpCE
UWXyiOgSDjowq49cJyVhapTGAofVh3KVVHOfdUmgHQxe05rUB1/Ft2mRQoeh
9JX+fnYVA1iX1GV74HMYivUXEH4fAbBTuPbE0MOU9VgmBgcTIPY24fLpqMOw
VRd5HyYJwMNNXhbLPgyNfaTel/VEUKP26slppegcdk/pVIwxhH7MSo0XkIL4
Ks+y+oBj0HzjjpGHpBQ47D3NfHnrGDBaFO3qH5GCofHNMGU9M8h+U3l211AK
QugaHzh2mcFU1NPDY+ZScOoTedSQyxxkUP3nOgcpmNRKm35PNoe6p6+PBQdI
QYaid0LSO3Og8e9kIF+UAqpx+RhVagsgyfU1HYmXgqyapU4HFQtIn/0QwnZd
Cs70R2I0XS3gY+GY4vfbUvCnYc5q+6oFiDt9me0okQL3LfaY/mcW4M33La/k
iRRcfeFeufDJArZT19jc30qB8ZPvX66IWALe+He73oAURH9n+U4CS0imp4o4
9FkKpsnrIosOljDwco/G328U/118GGJDLEHoIvOP0TUpaKuza1VPswQPDY6S
ml0pGPnid1So2BIe/uRxvsEkDR0new5ZvLAErKdor7mwNCgmb57bN2UJsRJS
8Yqy0mBGvyfz1aoldE/Iwz41aTildfCLJA0ZeHJVfs2DNCxVyQUR2cngZKNZ
9cZYGlT6Iux1hchwnxOdvm8tDVH0XhXc0mRY6sILR7tIQx62x2tShQxqCaRh
F29paAwdEXqiS4bLeLM0FCINm8e4NG4akuHNrhVBKFIaine1XG8dJQN7vT3V
n2RpkH/Fiu+yIoNtsEvN8E1pmB00idFyIEP+kVN+zwqlwTZT0++HCxnmFr2l
Mh5Ig2mK/YNfHmRQKgmY8K+RhtVxs3V7LzKEuoVmHXslDe3F6vJiZ8nQfPCS
mXy3NGikiunYBJCBcTSKkXlEGjRvH/9DdY4MZpkJzXNfKPaSVJBUCBmyzFJD
Xy9Jw3hqzvWBUDJMMmcqFW1JQ9NYSPS+82SQac+Zu0InA5NMbhKjFA6IzM8/
wSYDK3ubNOACGep079vq8suA4ZRouAGFabbK2QUkZGAmQvjhMmW8QBfuJ1KU
gSx1B1cLCqsWjAy6a8pAsI3tJd8wMpic86tJ0JeBlBeXAowo9k8SGW49NJUB
j8YrVRPBZLgkdOdivw3leTVXmS7F/xsrqs6/XGQAo65V4xJIhsq2dzghbxn4
vC+q5Zg/Re9sVwlcsAyY6f1IZaLoMemzxXAqQgY+OkTNZniT4bde2nxSogz8
CYtPXjlDBrn5hsrBOxRul/0r404Gg0Zy+u8SGai6zrfFTNHfKX0h6NATGfCS
zlpqdyRDqhaf1pl2GZCYYqwZtiZDCWuVYMp7GRDbMfuoZEnRf8pw9/FHGehy
PzPneYwMq4lBrdvLMqC5f2g30YgM1h97jqbxyoLmvm3GQjUyCIbHuj0/IwvX
cp3ZhDnIgDETMvwUKAsCnU5dUixkOCpeLUV9SRbO1txQEmeg5Ffn5HdSuiy8
+Lutub5tCVOCuqHjdbLQIq5wlH3OEkobfibvYZEDRvLmeiplP7RcSzwrwyMH
qsl3tv8+s4TRkyIWx4TlYOf+7JWTjyyBhfXYgWxVOXjc+WW/6H1LSlxftxqw
cmDFibkekk/ZT8/CP00R5KBZAnOhPccS/JzKCuQc5aC+ttjdJtUSEpT1os1P
yYG8TlffzQRLKKQf9gj2p9g/bxXTH2UJdaO+xFsX5OBFcf8TpkuW0P9wj1xz
jBzQO1qG6YZawmJkLuvXVDnQzbKY8wqwBDoblZW9OXKgND+q9MCHsv9lO/oV
iuQg6KgFQ7C3JajtOj+zfCgHrRabCyW+lmBi2hxpUCMHHKcVhVYDLcHt1qFj
6i1yYKSrmy4Vbgnnv10SkO6kxJdalScWZwlp6uOz/ENywPSYJ7UhwxLux+hW
s0zIQcHR+sb3RZbwoj83YuebHMwPZk6g55bQJ7Jt8uOnHCjMHc389s4Svp21
55v6KweltSODVZT6QtVY97WfQR4GfffUXfhjCTws/I/bOOSBfsbf7ggPGXAl
w6RSCXmQ+sgsu2tG2e8b6gduKcrD8fn2z4t+ZDiLv/klWVMeTA4aifmlkyF3
wircz1QevNfHC1ZGyPBY4SnB1UYeOifDWXt3Kfkdzr2f7CIPvaX9nbSHrWCd
t/+B+jl5+LyrHqoWZgVHzc0+7+TKg9KS/HKmrDW451WW/7gvD61TTxPG7Kzh
wnfW0Kkqin8vTt44nGQNJQld7K9b5cGa4fz9wiVroG4h4a4uysPFTn3+6GYb
4GUvY728QZlPkX9IYtMGFJz2fvSjUoB0rdZPtxRswe53eyCZWwHYpAOD1/Ns
oVrZ4J6AjgLULy+zUCUfB4+7iLEsSQFUEqZb3ePsoTNatfu1jCKwRho0d1I7
gxbbO5prGEVwPyEcPSPrDCXZLur2oAiTdIo1p6ydIephSv6ylSK4GCedLaig
jB+eC+C9ogj7hOpEthxdoET29gHPD4qU88Ne/fKAK/A8UzFRnVKEBY4fn5X3
uEE0dETsLCrC6Z1Ubks1N6gq+xNEpFaCdJGe6tFsN0hqkhof41GCoOxBFw4P
d8B9i6yixynBUvabCR8uDwhT6O7wMlICA2xEGY+xB1QF8n3tNVGCYsmy2iNR
HnBwp5Lvlo0S7HzTeNW05gFbnGORij5KwP8mw01/7BRU6ahb2WZRxvsObgi1
noFDaQtbpUtKsD/gtOPuNx9odLlc+vinEtgHjupclfUFJxWu4/W/lKAgh6Ez
wscXcoe0ajppjkBgjyRr1qov8AolBi/zHIE0jhLrZio/4CyT+qmKjkBmsYri
H15/2NN6crEp9QgMcVY82e8TCAubn8cHlZQhX/Mc0Ts5FIrm6ztYU1RAo+0O
1/LOFfC9eUzM87oKiKlv0HZwRoI6/suFtiwV+LohrH1RMhI6bjPJh99VAfM5
qt+nTSNhxex46rcaFTA2dTqomx0J2Ocblq1fVGD0WLPhfqkoYHRPrDj0TQVu
Jws5sWhGQR/7wT0XllSgeucYSzcxCk56Gjw7sqUCkY+aPz/wjIJkoQzePFZV
qP7aXvW2NAqsOw77/+ZSBVHJ/JDdmig4FFL/1opPFcx4r1VstUfB496p8yzi
qvDrK85F42sUhF8M7j8lrQpcM0G/6daiwFCGSe6VgiqQRoNyhmijYSTqyFiY
pirILhkSNSSjoVCpDTOIVYVSFiJdgUY0eI/ZpijhVQEXwF/00jgaqNQj0OxR
VUjzltycDYwGyfnuArK7KpzuF15T7IiGIDNvD8VUVehJ1tW0jI4B7N/dxsQM
VVjf9zxWLDcGGMquH5jJVoU1XYWwX09iIIe2/k1ukSqAywe+G19i4OWzvbJM
dapQFJcs+0svFliFipenp1Xh0bx91NxGLIB11NiXb6rw3nZkYA9zHASknng3
taQKl9if+EwfjIMhat7iiV+q0Ci/T/ujQRzcmYl3+sSCAbHhJ32eaXHQe+ik
yUcODGgKtmgeLYwDmuN6WqM8GJju7/WYeBIHHu+29g8LY2BYU61+71AcKFR5
dvWrYuBk48e7WJ54cP5mWN+niQG9csVeD4l4SBcVK32PxcBn2G+lpBoPGxkf
o3sIGOib/lJdYBYPUt3PA7pNMeA3KLHHyCke7BgynLssMMB2pcYr3iseGsNM
dN45YOCHBsut0eh4+PFYSqbDBQOVcjRa39LiQXSRjvetBwYkHzlFpebGQ6xT
w8/XfhhI9qljynscDzU3syfbzmFg636DD31DPMz3nutpPY+B0c9PP1C3x4Op
vkJ5SzSFhVcrHo3Ew6VwpuyXCRg4e807xX0qHqqezsQ2p2Aga6HlbMl8PEwt
tQQ1XcfA0sq1tvDVeOCWynNtzMIAMXts3+RWPBi6XDBruI2B3+SS1wNUCRCa
Y4N9UYgBi6w1HxuGBPjEws5fV4GBsIZ7KQxcCcBquMhQ+wgD2++eE1V5EwAu
v1l//gwD3tr0Z5cEEyCgpujLs3oM6Mdm12FEEqBoJeL902YMrEien9srkQBD
Mo5N1W0YGKJ6W+0plUDZP5oPnnRgQHZmcNFGNgG0bu+/9bgHAyf2HI58L58A
3kMr8Y8GMLB6vJ1S9hLgDlt3cNUIBhw+v8w9cyQBegll7pXjGDh0TYQ1XjkB
aCJjLR5+ofjfiXuqrJIAqvWu8GAOA4p5z3LPUNhjDatQ8R0D2XoPl+QonCUv
IFi+SlnvJ1zD4ZT3Ozw295ZtYsBoozfmOGX+7bz+zZJtDIjs7RV/RbGvMFL5
tZhaDX47FE/VUvxz5kzuv0+vBtVSLLRYiv/pxqdf3mNWg6xI2eljlPhao/GV
RexqsNLQ+HVZPAE2GoRv392vBswKl08dpOgjtbmdWMivBjKSkm8/UvSzUxoJ
LTikBiNh1l5SFH2Tzzz1yBdXA4NitzY6iv7z8CCeWUYN/sypx/1kSQAj3ntl
wYpqMHl2Jf0EPUXv5dzOSVU1KN4SzSfuxgNNe8aSiZYaUONPeDzepOT7nWT2
GqQG8w8283KWKfl6LlpZzEANLiT/PEw7Gw9h4kHBW8fUIC1xftp2IB6G/nhl
uVupQUuC7R+jjnhQ7Xer67FTg/431aL1TZT8vmK5c++kGpiKPM87UhoPHp+V
Yy0uqMFFluOvLwXHQ+szmZKGCDXgaKh+VXGakv8poh1SsWpwM/Xw5Cm7eBjT
4WTdTVODNzQ/HyXqxAM5ZyWz/L4aXMII+xf/iYPH/t+e81SowT6iQ5jbfByw
ESdHrjxSA1sG16jnw3HQsdkrZPtCDXKtb5+Qr44DPauqe3R9amBZyQrnPSj1
Qq6k/ewHNQh3wzEJW8TBNm3+t9FPavD5/PLqGd04qHmcKv9olqJvBDHhByel
PrCffer4Vw3ohVxyNmpjQfCdfNszKXWI+qmib7MVAxtQPn36sjrAzXyyPDEa
XhQt3AqJVgfGObu1YIVoiGSUs4xNUIc6XtyjO1zRwNpb8fLudXX4FtHWdHUs
CiRPPLwzXqwOgyPpVax+lPp/8ZEtuZcyv4l6+eO0SHha+7wTiWhA4i+u+idv
IuC80K+oo5Ia4CY0eOBARQTAFQ1tR1kNuPWDIHAxNQI6CbWl5zEakLy48ols
HQHTH+pinxI1YP1TStONN5eBe6MBZAM0QED/NVaM7hIEKbdW87zSgF+nE0cs
M86Dh6pw/rU3GpDP+8DC2u482KqFJ7F0a8DLaxU2GcLnQVtL1ZVmRAO2bQ2D
2h+EAQ2uiG1pSQO6Yumopd+FQqp5tGcbvyYYi+R2v+IMgTI/vHBQgCY0ztc1
NYwGQm5APvNyiCbYfvi5PlcaCFeDtjfOXNQEpSPz4x5hgeAXWt11Il4TzjHH
t9nzBYJ6hPgF4zuakM070KnkGACtqXRDoh2aoHj3Aa5izQ8+P2xNei+iBRc7
mOq/t3lD73e6ReXDWjBZoVVcfN4bmuUMTDLktEC+g9eHSskb8svaWGzUtQD1
rLYk53qB6/3XVz+ZaMH0mzcDNBc9Yeb2m9TZEC2oTpbzm7A7DUOfGH8QLmqB
SsiZAEO+09AuQDQri9SC0Qf2r/SGT1H6tbfsPle1IH5qMWzd5hR4ZnZcWy3U
gr6C/FUdJw/4ntx5/W+XFjzRTsrPjXGH8Xcsa079WkCnp+W5beIO3Uym5OZh
LXj+gbwwze0OD+O7uKO+aIHRleByk/tu4Bfdncm4pQWXe+U0TvS4wtqF3ptc
4tpwlTebs1PTBf54DtySPq8N8cvOZkz9DkBWc7ymcFkb3vyuXGGLdYAK6plY
lWhtkDD8Itqn6QBOWZv+uinakF1lmhx71x5etvETzAu1obJf5n7cZTuIE3ZZ
C+2gzF962qfc1hYmFr59u9hDeX/1xoMeHlvQeB7wOXJAGz5JhqxmD9rAvGl0
R/K4NqzoT9ELWNmA6YXi/PxVbVCn/zNQYm8NXEPfTd7w6wB9l5/PmxgyeBcE
47oO6YDQwVv85aZkaPXeVe8T14EfvYv+Byn3hWBaDrFPCjrAPOss8bjEEkaU
VLeWcTqgTTxw1GvAAvKSzt874KUDNMmt/JwG5iCrx7DjUa8DnjVpJ5b2mFL6
2/LDw806EC77OPHSQxNQ5TYzJ77Wodzb/m4w25qAzmxWkex7HTBNcMZxPzSG
o1dljH/M6IB+duzZ9JMkCBgxzQrj1AWG9pkeFioCbOBWX84f0IX+e3cP6z03
ggsVNxbshXQh5HnpceOzRhB9+TMWK6ULPegS6/CkIdyQ8P9Kg9WFyQlh3vRe
A6j1z1BOPqMLiuek0b0+fcB+1HD466sLcSYpZQo39KEFPxbjG6QLvXPzzV52
+tBxQHLE7LIu+D9c7vg1jYNPDc8v78/UhQvTLnWHaXBAxfSx806zLqhPSS+A
PUB04OUNtte6kO8sckxUGmDvmJjwlXcU/8NoGlSWEXBWeQe6DekCdSeVUKIc
AnHrHT6pRV2gMrDAvajWBaNCkVOPDmBBhYNV0+uXFqhmsUq+FsTCjNXw6aUy
LRBO+TM9KoKF9RE5JxMnLfgdNuhKJ4eF4Lho7tR2TXhgnuBkA1g4Z/duevmu
BnBRr1j9PY2FpKcbD9Qj1YBqc4yb0xcLzeqCXfZ6arC42NEvGYgFE1leMQ3K
ufl6uMjc7CIWou0EkjmiKH1Fla3p3WtY2LuPn5Wd0md+PtGMJ9ZhwXOfSFLO
a2XotHpA69SEBeWVIbxTmjLUGOe0BLRiYdKzvviFnTKkqwdBbjcWsj7ELONW
joABm5TO8hQWUmXSLAgSR6C8MVUlkxkB+6Kb/t1jipBVHb5ayo7g6rKuDs26
AkSXnXnUuB+B0lTJovstBXC6oa84dwiBqsmJFukFeeDw3ZTRVkVgK+Xzy/WG
HIQInRCddECQ5d/hrM8nA65mStafXBDcZsZXcPRIw9Eo6sQPHgiEaXMVHsVI
g+S3uytdfgjcft8as1uXgoHquea6aAQ2r0PY+ccPg5JJwImMCgSYwEl+z34J
ELysfz31EYKSKU5GQqYEMDzmbk98hiCZXod30EYCxg88V7jSjEDw5yvD9XFx
SP7y56/PAII+tYFgoXUxmDsfk2u0jQAvarCWgERh3lr2dAEVQPEiW0A8syg4
/+CiOUQLkDdsY8A/LALGYl8x/IwAqWwnaVYCREA0Ie42OydAp/QxT91KYegl
d3r/lQA4UpX0VDTyIBguVdNfkAJgYcq4KiB7EF7E3c7/JQPAOSvcyzwoBMV1
vgM/FQE+dtpDu6wQXBLm0JnXBIh8euKS3bQAyC1aMX8wBbD7qNP18DIf1JBN
mhLNAALTCqdeKPGBfgMuEGsJEGDOM944xQt2KYof79kCDN96vppO5IUEpb3l
QW4As0PdUTKiB2Am6AWJMwzA1XzmT842NwSMPd5puwCgNWHcn1HPDX8NSh+H
XQKgimovsbnADdwHbvBPRgE0ea/+VPjLBfq1Z+crUwDmH1ZlTO3lgvy/oomm
RQCHthlXLA04QM6DD0tdDKDY//dpOxsHPO9mW60uBTjXvfRlYpQduvO2jwtW
AoRN6jJsB7DDX70h6YVaSnyZdTE4Kzawi014G98DcM+d7RqLNwvMLF2+qNNH
OcZZWjymuFjA3yb4yI8BgGrXiaA3L5ghXsot22YU4G+zIqmWgxmedeickfwK
MCbCZTTavhe42H4wtv4GYLep3wp3ZYC+hsQ44l/K+CS3qZcHGSDdW4K+ZxeA
a/Sxf8dHeuDssKMdpdODmpYsjJAthWPa/i6z6gF/Ort32vE9wP4nZ1VATA+i
C5RqFi7SQm8pxr9AQg8StDgWAgxoIc22d1lSSg/Ctjolb++jBbZne74fkdeD
d+SZyr48GmD195s1UteDxcdWkinvqIFl1uBToLEeTCn3MX/GUkFn5oTdlqke
nGPXq3jNRgXJ+Asjl8z0oEhNxMmnZRcxF1YNJVjpwR5/CUZL5l3E5CjwPu+E
HpgUvqu3L/2LGPt/tL0L1INEpqiLs1x/0JsrSXjzYD34/vWQi2vbbxSvJPlq
KFQPaI4mJb0M+Y0YUuybJy/qwXZkfazo5y1ET3xdtxmnB4xGe/sP1/xCdE23
KsVy9eCLTLkxw7UNNKqDJ3y+owciGx23DpM2UGXd4kROgR7gboZ8lKTbQHbP
dDk5i/VAWIaJ5/n5dfTowecgqsd6IIHl/dHrv4accsW0xtr1YOBhCfWNmFWk
yt/Zl9WhB0L3r8ycNF5Fe7OCvMhdlPifSNgscqyi6uttue/69ADc2ke4ClYQ
c9Kp3doxPSA7aVuntP9ANWHlrTd+6oFWv/frVo8llLJp6WixoQeHUuuJ2gxL
yO3c9vq+LT0onzR1GC/5jlj9TQ/H7OjB68xb33OWF9HJ08sJgXtxQJM5cSgl
cQFx2qgcMzuEg1fh6NLRn3NobuDjLLMoDspMygbmiuZQg0V0RLs4DvyvFu09
bzOHTh8dfISVwYFil41PUNMsajQI4ZbH4KBWU+6hX84M8lKtH9lrjIMe2j0/
ac9Po+bewYoaUxwoDJ/WHtKaRvt9flw+ZYaDLcFpOa/tL6jpnoRkmxUOCmde
tvRd+YK4DqQFRDjj4MkgW7xD5hSq33Jn3jyHA+vhYIuYsQnEfuPy+L1QHBCs
87+HlU6gk8o5j8gXcLBqNpLMFjyB2Lx6bB5H4EB2qfDrfo4J5PZJs8gnCQeZ
BM/2h7njiLmJVXc6HwfFmknGB958RM720uzX7+LgLS1ViGPAR/R0U/+L3n0c
+KoycVUIfUQnlMIS8spxwOfdXEsOGUVPCr4M2j3DwUnJC7/Oq40g++ga3/fv
cJQ6Rbl5TQ6hKuF+vYhuip53fiDWW0NoT8N3bsX3OGB63XrQyGoIVa6L1icP
4SBNU1FbvXMQ0Z66ykCYxEHno46pvlcDqJzomt+4gYOs98xJDMN9SFVOBIu2
KHot3/7ZWNCHGlknPjb9wUF/zJwVl3cf6u13PPCSSh/Mm48PJdH0oTXH4ymv
mPQhliHVJ0HtPcIGmIW/OagPDVxju0cCelA7mY2fKKIPu2pqfUkHepCZevfz
t2L60Mad/XSuoRu5bhv/7JDSh/i6pN2Cfd0oLtbIs0tZH6repvd213Si3hys
bZ+hPsh1Z82vaneg4xf/rlsQ9SHw/ElF+x9v0dSJF9f7jfWBvvN8W969t2hN
XKtnwEwfGvlSMdWcbxFfJcbwA6WviWNTu9+20Y5cX8mpfvLVh9yBZVmq6Ta0
cG/hvYO/PjBQyZ7fKGpDQfFlZ8cC9eGUf1t6oUcbijOVKh8P1Ycnfcte3Iut
qOKDmOhkpD4UEaleSO2+QusL/OwzlD4qYVC3xQ3fgjJuz7bnZuvDixnhMyeZ
W5DKserLlrn6UNh4xom3/yXyf2y63FxAme9EHHW8+0v0PTSi+1aFPqjSeAwT
U5vR1z0zyeYt+pBz70tZxp5GFP38MZ6xTR+G5EqKeosbkNiZy9uN7frgbVj1
/YhxA3Lp5PWW69KHSjf3dOvMF2gs3diYYZgST4WJVLtaPRo89Ghvw3d9MHM8
cBtTXoOC3l98GfiDou/ohqCYUw3iiiKFyfzUB+KdwPxdjhpkPvNl7uYvfXhu
6/vpQvhz1FXB8yaAFg8h2MRjOg7PUJtmeKwUHx6Yv5+2f4avRu4LBOxnATx8
Pbixx2dPNaK9vX8j8yAetPheOyy8foL0qCpP0orjYaLdRhNj8gQ1vJ7Ejyvg
IUbLxPfpicfoqaURbQYeD+cdEmrbiqtQvHFNjKARHvo6aOnlQ6qQg7404z0i
Hv6UcYmIGlUhGhXmfc+O4mHr0dai8/tKdJSzh2fYFg8J4mdY/d0forleaxlB
H4r9kz4st+rLUf2b9oqis3h4zqOc/NWzHKU0ayjKB+BhzdPTQESgHKlW8ati
Q/AQIEt453KpDF1JHdd1voKHTDv1jRfHShH/UQ/zokw8zEelxxwXKEbfDT70
y2XhIcJ15qDj8H3UrEuwfpqDB6Vznm6iN+4jD3kZ+9d5eJj9mYDmue6jJyxL
7nOleMi+MnhJk/ceMnl3LlSuEQ9S6rzLh3F30aFXM7+rm/Hw4qLm2xNMd9Fq
nc1F3Vd4OLd4L0OrvxBll2lGHn2DB/zujNl7j0I0k/A3ya8PDyMStdmmmQXo
MiEmr3oGD9I9PLj+ffmoz+m0g9I3PLDLG7WHNech8XPGfBULeNhLW6Vt7JGH
Ogo4rt/9gYfXKYVWg9V3EPef27Hpv/EgtlOwyO54G5U8eObjx2oA93ipJQ4M
56Dfr7JlFtkNwEDr2nFCUg4yHQ2fPcVlAOx510ZIKAet0uu7nOA1AA+hxit1
pdlIx7mHfFTUALRtWz7SxmehXs45bTk1A3ATs9/RPH0DiUq/+1WsYQARf2/w
eR2+gc6hh0/FtA1gp+3hTcJsJuL3DlIUAAMg7zON3D2didzbqMSYSAZwcwLO
CwZloF8hfExzjgZwoliOSChOR6SU7dduzgZwq8DK1sQvHd0u+hz12dUAHqQp
d09ppiPc+3t/h04ZwCGS64dX3ddQsozySpu/Acyxs72E3TQkMkYavhtjAM4m
Ob9X1lJQYot2pVW8ASCme0ca0lLQarFcLEOSAXhtFy28kk9BLQGsql5pBpT6
rEAX7nUVuTP2pSrfMoAcqn0JJ9aTUInKcaOXVQaw1U2njdFLQOx8pIOBTwzg
wMVvnHXL8ShsR2td/JkBXIzNYz2WF49IbwXvxtcbwAhXSl0xdTxacJrYOfaa
4t/KyBeG/likkHjq2fhHA5iKtQwRK4lGN87aXk0bN4BlkR2BkFPRaJdMdMdN
GoBU7RPGgcPRqPeQLOf9GQOoxh+lLSmPQv5Pl3x8VgzgXOm98IqmSFQ9cU5i
m94QFM7RXWjnvYIEX3tsP9hrCMtMbErhcxEoptym/wSLITTrOpmr1EYg62DN
K684DGGwYedaoGME2mT++ylR0BAsqsVrW2wuIy316Aw+ZUNgtFj9ezs3HA25
8qndVjWEibz+SEnjcBSY8vCDsLohvBOUzlH6fQFVfB3ml9IxhMzuaItvxy+g
gxnyBWqGhkDUNCl7J3we0awMPbC0MwRX8XGL+r4QdEfQ+9gHB4q9yY2cd8kh
SJtAvWJ3whB4W6eZ3xqFoKA8WVVXd0MI/N1WUtQcjGZMI+r8fA0BO2/Okdp4
Dr0rk26/GmkIOPxnlXdTgej0UONpjhhDENasyLQpC0R0NGSmzDhD8LnGkR8e
EIiwxy+Z5iYbAj7X93UYXSCqYujvL7thCOydb3lfKgSgDPfwifYyQ9h1f31l
5ZYfUkrjiDR+YAgn2R/dn/HyQ13198V6Kg1B7s5Eo6OOH6Lneu8xVG0I/A3V
r+40nEWhLyW+TzcaQu6033SEpS9yONizRd1vCPFuL+XwlV6IlS/gaf2gIdwP
JRHB1gu95Nrvf27YEI60F/QQabyQ5F77ubkxQ9jHUc8Xc9wTLf+cGeqZMwQ/
m6y7udxnUOTbnSe3dwyBjqfTt7bGA6m2Fpy1oTaC6eOe07L+Hmi2ES/LQWcE
HZEbty/KeCCT6sTC6L1GwBM9/Kkx7yTan8dzzYvbCEzwrxJqMtxRSZCCr6aM
EcxdYlTdvueK7M6+l/4pZwT7a/rkrb1c0T7PoK8VikawfZRfyeWIKwo4Uecg
jDEC8g2Ro4lNLkibZGjMAEbwNZH9h9S0M+o+5CQ1aGUEldxhMvG3nFAEP/V0
iq0RuB14+t1I2wmp7C/KI9gbwZGwdFPxT44oi2me54WzEZTaHfmiLOKIXNfP
7bnrZQQhGbsni2vs0XrH1Sm/K0bQ0nTNOULwOPrEPHh6O8oI9srHrtzos0Ut
JoLLlJ4CPOR5bF0SbFFad9mfO0lGMDbDeJ9jywbJ9LVzd2UawbiupsHEhDVy
GqE2ki6j2L/QlobpIyM8P7GrusIIbHgDLyRcJyNZ+zRLqDQCV8IL7WtWZPTr
00Fnm2ojiHER0X3x0RKlT2iHxTQaQUGImn7EDwv0evZc+WSfESiqJDs0a5uj
CqmGIz6DRiBA9TPfnNEcXT9DV/PrgxEsnVivuzFohpwX0lvZxijvD3ee1Qkw
Q7+XKsd0Z43gmf3V2oVTx5Dixje2nD9G8Dgq/Ma1MhPEo37khsQOxd8DY/5d
1iZoOyRU8BEVAf4sMT3tpzVBHVv00m/2EOClZ3cAcjZG7n/FcBtsBHDOWHt3
XZSEsuicgizECbD5sGFNscsI7bgdwLyXJEAPtkbnXJwRcn/Vu35MmgBHwlfY
L+KMkFKkfoipAgFu7h5yGqgzRG92pc4TNAiwJOWTVFBtgDZ//7yMNSFA3543
R5516iMHuwfQcJQA53wf6Ipf10cttR7UOuYESI5+P0i200cpoSORmtYEcKwd
LPs7j0OSG40xqs4EiDHonvXZj0PWKwlJMkEECDtvGmcfDeiFmb5JaTABLi7a
HOQmAxKt2maRCiMAV3X/YTVxQEu+Z1MkLhHgexxW3CcJoZhF8jXheAIc72KJ
NxfAourZQzd5cinPfaW17rlqI67xp4U0rQQ4v8+NEJqqhlJYLl58/poAvg/P
P3HUV0NM2nhb77cEWKB3A+1fGEST1bdvqJsAo+P3msbdMWjVfDm0dIQA0Rjx
xACCKuptkzpmtkyA2lXy71UZZWSytiy9Z5UAK/nzng3fjqA3os/p6tYIwHF1
fYC79AhqumxQJ/abACKHvDI9pY+gh5quEpt0ROCSGWx/pKSEkh/c+nObnwjC
z4lfHZ/IIcZPrkMWQkQo7BVcv4aTQ9FMMo8YhImweXJ083OfLLpwqsbDX4II
WnT7h95uyCBPkcH3eCUinGSNXx8wlkaETNaSBQMivGVf/PVKRhK1vhqMzCcQ
wf99/1TKOwkEq7mOVsZE8ChuqjrrI4HUj8lyNZkR4ZYar2xgtTil/hAupdsT
wc727+/IY2Joz8UrZE1/Ilg6C3C8rxVG1SuLW02BRND4+GWflL8wcvewzTMM
JoIBlfBbf2lh1HpMcd7yAhGU1H8Y1WseQtGiY5d9Y4jwpzKdW+mgEFK9SZBY
j6PYe1egwpIriKaZqzsuJBLhTEx5YLeAIMKvJ+5PSCWCfWhNyR4RAUT3RqP8
bjYR3Mb+iOvh+FC1TpGZTC4RpLzFEs16eJH7I7aNqjtEeDFlW23oxItac2ag
8S4RpOU2S2evHEBRPhlDww+IMPsIb7vzeT9Sntq9cKKKCCzUh8QNw/ejKWsv
kZnHRLh4hf/4Of79CAc475/PiRBff8ks0YEb0XD9oGZtIcJOJnqStsmJHsfZ
F2e0EsF41YOe5y4n5X7z2kSgnQgP37Z4RJlxopavt29KdRIhNkWkgOcRB4qs
MZbXHyKC+mqjlkgCO1KWf973dpgI30q6MN/02dFUgWio2UciWImLT2VTsSNc
0laL4wQRiILuel67rIjaqdg2dJ4Ia04ys4+k96GqPs6dnUUihAoY+75vYEHO
RpfuxiwTIWZNJP+VFQtqVrJaSl8jgrvhnhLha8zI717zdb5NItC7C/QmqTIj
YX45zfwtItDM/Tbs+MiEImhpox/sEOGut3TbSwwTUgr1lValJgE/Z+TBC3N7
0cTiSHcdLQlSTj33ZMzbi9JcDIL06Engjrr7zhzfi2Coiu8NIwkYvN9dzjuw
F/0gCTYdZSbB56YnOaUjjCi/Kc59cB+J0u8lm8TnMSKqUqfKKU4S1I0f4mtV
Y0SvFz/45u0nQeqJDqlTdIwoWclcwYGXBNs9rrGJQwzIIqjjO68ACVbJgh4K
DxjQgRr9B4NCJPDjktm2iGdAn/688E4XJoG9UlP4r1MMqBCpyR0TI8HtXlbB
QyYM6HRU5QKzJAmU+UxY21UZkEK7VPkbKRJsdnudZRVhQGtMhZ4xsiQgCX8L
L2JiQHVHBWRwCiTI+RFt6fyDHkWkZ3zbUSJBlKP1gH0fPTIY2ldar0KCh9FB
E1VV9IiJP+50qBoJSqI2bMOS6FGvI5UURpOiR+jPgz2u9Mjh6+r9h1gShD6v
O5DIQE/pj709vPRI0Kr7hEVscA+a8/4qIYUnwaJiVH9V3h4UuPahqIBIAtfu
PfaccnuQhoa5u5MJCWaezozxLdGhnQsdYgLHSJB3+c+ziw/oUCJtQ2EGmQRB
SkI/XorTITMjNVdzG8r8FracQ59oEU9SpQirHQkGusTYHqbTokLOwvy4EyS4
g38jyPGLBtWKxN0570mCgwHdkqEV1OjSSSondR8S3LrJ9eKyFTXCl4YJrZ0l
QRZNoSr/XyrUq+Sd63OOBF8PbVqeJVChOWSe4xxBgpozXANjRX+xPE4CNwxv
kOCYK3dvb8Ym9lNBhhVtNgkuiwWeufx+A1v4dd/+5lskOCdGWExl3cDK+1Bl
aBaQYKxz3/N7iWtYfPjXa3IVJHDC8twxTVvBBuRUXuVsIQHz2EHMo7+z2Ofb
OXEtrRT/0sMiWmtnsNtOsVcC2knAh/GT7wn/io0TczzX10nRo6gx0oLvC7Yz
hnA2socEL8UceVJ/TmI551TOKPeR4NpP8SnS0AQ2t4LJMf0DCW4MXlhJ9RnD
TrJuWONGKfkeV+6Y4/kRK+k/abb6iQR2dwmzjy+MYKswNXiLKRK4THzdFRob
xK7fvIul+UqC7JOBJ38pDGC1fqdoPJ6l6CuYkPnjZh+2rfGkHOd3EtD39NBl
uPdgmUTMJVuWKevRFC7r0dGJNYvSEQ5YpeyPu2f1rrt3YDO/HuYXXScB8TNG
6K7qG+yoERd33yZlPYccMoV0XmMPle3si/xNgqbv/hGJ4a1Yd5Z5BuW/JNCM
p3nqv9mCLfUdpJ7aJYE8U+5e+4cvsUu9zX+u0RhD9od35O7CZqyKSsW63h5j
WC3Bjt6vaMKGZt5cXmEwhvS3RhbTGY3Yxs3IbwVMxrAy3NXoTt2IpbXz/WK+
zxhKC8JrpdcbsIQXx8eo2Y1BJK1IdZuzEZty0ODDI05jaDzdlCq9pxHbH6H0
3mW/MUgnZi/3djZgeb8IvOPgNQY+y91QDq8GrKMBQ9tLfmMwEG0wY5p8gS0s
Xm30FzIGE+u8W6OKL7Cze8drRISNYdg04FKBbT1Wzvvt4/eixpB8iubgJYc6
rH93dcUVCWPQohHMS9WpxT5Tyr9/RMoYToUnSa5vPcdupyflT8oYg7mq0EhX
5jOs3npwzjV5Y7iTcPujBsdTbKyNa4aekjFEjw5bWPk8wXbWmqasKBsDTcwt
N1z5I6z1JfFIcw1jOPq29+3+wnLsrQm2cGptY5B/wIMlBhdjJ3B/zj3SNYZp
rW7mAwfuYj0Z+s5w6FPsXZ9/sp5yHVt5psHtpYExvOc+/gzjG4WdCuU8akEw
/u/7iP8BjQGJmA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1550005#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF2nk0lF/8B3BSEYWopFSyhWwx2blvYzBjX0ZUSLJkX7JWQtZBtCgSLSoq
FZUkhMrSRiHSoiyFQqmUyPKb3zm/37f5Y+a85j7P8/ncz3PvM/eeM+vdAm09
5nFwcPxhv/3vp6nHUGvd59v6HP/3mm+4KuiDaBb5f6udycm7JXrhP5s1v7qZ
L1r2nx3cJ+4dFa3/z93KyYaHRF/+57PLrZJSRT/+5zieWxtYouP/2XHruZKx
7/Px/+abi3MyWSvwn6Vtvg49TFv2nyNatEjOuOh/Filb+p6Tc91/dkr/y/y4
4p8L3D89bVT4Z4Xld++mOf4zNdz1+PLSf1bPcyjMUhb/zztdCp0vvf/nBNPV
J09+/udC9cMvU8f/eYR/r5k/7/r/HF5roaWq/s/p4r+WVR/65/I+w2fPdSX+
cyc97vshk3/+fb1mhbntP2vs09r5yOufK4SVf9cd/ee7tFXiN4f++c0VB6Og
n/88JXjcR2n2n7W7BW5fEZb8z5VhC0zP6/9zdeHYnqysf363WOmk7Zl/ng7x
rRG88s96ZIDnUO0/17x6m5/45Z/f64k+NPz1z7Pntwxxckj9Z/2gVtUDy//Z
pZPfUVf8nw/omkdPyf/z6QJWQcXmf67laWoKxz/3BMwfpZhJ4YnA2Mq1G5mE
o8NA6Ke9FIaVWOdcW4qIuE6Mxg1XKSR8d+eNrXxIcK7aKdBXCvkN1kKL4l8S
V+6pOMVwKbT6SUllb+slsf4aRcOxUviw9++wwvov5Gx76LPLaVJYlm3QRyM/
SJ3Wze9eJ6Tw6fLLB8eU/pCeM99WyJyTwqHW7d06HbOEY6Gi7sdiKRQoae/f
tJwL4n4+OwvKpWB6tyj6uxA3DNqKklzvSyFA79S4rSsf3DQ/Fa99JoUq85ne
95MCOHhaovVdpxRO3DP5YhwghAc++au3jkiB4f2MuvquCG599vV1+S2Fk5G3
X1u7rMKF3dpVuzikUeTwdFRy3Roker7aFrBMGoFpu8bNIteD7rY0N15XGjs9
B9Xu92yAVu+HzynG0lBNKV7XnSMHedfrWhnW0lD66bwri7kRi13MXue4S8Pd
pY9PP08Jz7cmrryeLo1h3+N3y2iqqOuy233rhDSEn/JdejiuilIHiYqKs9II
uS425HJWDUftax0elkmjpeGn3fAwBVtsJk90vZPG+SzhuE4XDbyj+y/nUpSB
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
fHf/Zwqa0w/FJO7Zg5DMHU/7vlIgo6hYE3xhDzo5Vxb1/KHg6hP1tGvcoTg9
kOLybvFm+AZwnQhuD4VSqU9zO2Uzbs96n/I4EA4LQ6XiBwmbsUV4tHlk+V6k
e9/2PCuljqdWd2tnx2PxBddS+OTVkd0bOVAmEgeTlRevhCur477rXksv7TjM
a8r6aq6tjj7n0/MrY+IQJRUaPmmljtcOSbc+LjoIzw+qSbb71HG7IFHg1qp4
1JfLX7oXq45Iz/DVdrrxkMiQeCKbpI66ojVZrc7x6NYV4p87rI6sb1adO8/G
g5n7/XhxoTp0dX+2ZUsmwMC+9OL8NnUMaz7eckw8EacVLjUFvlKHb0dNsixJ
xDTX2c9v3qmDbh5+f59zIipuZireGFSH3jrxjcyTiVASDLztPKOOzOJdQ1lL
kpA+6Pnq0TwNbLBKF+2TS8KXGpdJNR4NBP7tsuo2SsJFf0s9XmENNPL1SHXu
T4LYU8WGclkNHKYZiOQNJGFvgfTgeiUN/KphCkpxJONV1JpFh9Q0cEF1wV9T
0WQclV1isUtfAzwiR08GmCZjUdLISwGmBtSXdVe9LUqGp/PH33u3aqCz4YOh
fE0y6invVg6w90n0wAFR3pfJiO1/6lTtrQGrYy/9ImaT8RvFH3fHaKAuXsC1
2yIF1ReGT0UkaIAlVHjLekcKDvIo2CWxNBDtdjFqa1AK+F9cvX/+mAaqd0wu
3XAkBS/VRiNv5mhg49s7NZ/PpiA3W1Hlfr4GuH+n5eiVpkBmx/XT74s0YLDR
bfvx5hSMPPhqP3pVA5PYkpv9NgU3ZZSXTN/QwNyUceGGzynQ/1qyT7RaA5dt
57WOzmNhS/QNR+YLDTy+oaM0rcKCWO93gV0dGng7R13moMNCH021KfgNO36S
kIq2EQsBi29tzvyoAYlbK9pPOLBACfo5kv9ZAyeP2xABVxam2tUuXP2qgUrV
ddeX7GYh6VSZ0JM/GpgVeKJ0KpwF87nxx10zGthfZXJPLpoFoV2b4wbnaUKN
WSGrF89CV2OY5m9uTZwZvafckcLCafnyb/OXaMLg1NTh74dYcM/4XSgspIns
IEG+o0dZkP+h7iIhoolp0y3O5SdYGLOPWL5JTBOnbr33dMll4fbdO8/Iek30
PlZSSc1nYe+aP/GWMprIzdhTr3WWBcRp6jhv1MTReW+U/AtYWPgp8oeviiay
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
Hpb7j8V4WVOxxaDNLTVzHmovSss02FOh8/ZizEexeRAWORwS60pFjUe+fDvh
RNWkO99EGBVdkq7eMYw5Ingi5v3FSCo8ilb9MRiaJR6quTeY+6jwCRC5rJoy
SwR8nzvcjGW3i688nPl0hux6p3XBP42KG+XFZs93TBO+Wn69j2epYH3TEAms
miSu2+UEj52noveJ0eUg30lye8Kw36CQiqm6ylYfsUmyQyWKdaaYioP+R111
4/6QW+f6O7aVU/GHpvf6j/0E2Z5QEdD6lIrxlvstSXK/SKl4u0FsCxV3bdNO
3B0cJwvujS5TbqXi+iuVI3cLx0nJL4mq9E52vCzP5SIbxgmX1yFuei8Vulfe
Lp+36ScpZridrflNRX99mWCE13dCUVivTyapWFr1mzpJ+U5q+Hve1v6lYrWS
GZOf6zt50e4scp/DEJui/pz9cnaMjDtvzXjIa4hexmxEdOM3oh9ivf/RWkP8
aFqf9opzlDQxBVYx1htiePVMa9m1EWKt0XLnsaQh/r5210vYNkLcps1+PpE1
xM7hCvnR8mGSnGTi06xqiITEvUeK934hL3L1HduMDRHLq5L/dOMQ2Ro988uW
YQi7U4l2lz4Nkr4d1cfazQyxfL3EY+uzg2RcSvv5S2tDMG5o7vorMkhESzYb
v9pmCF//lT6hggPE7aEC5V2AIbaaeMwOS34kwxeHW52CDdE53+tH4Od+Eppy
JbB7jyEeGKnZ55f0k2QL2eL3kYbIbG7aOqrXT66+kpToPcjOx0GWc5NbH/k1
vEpw4IQhlnnMe1vV1EOy8geb8k4aYnNtrsXI0R6iZlUWY5dnCMW8sUsPXHpI
8E2Lb3XnDGFee069dOwDGY2MbTl11RATjZp733u8J58WDKTbPDCET1UYKy/l
LUm4c5PG02AIwrk2fWrTWyLpHTNd02SIKsnlv3zevSE7n630U2g2xN5QS4Mw
yhvSfdTMjLuLXb/og+XPx7pIx7obi+6NsutzilO4PLuThLZG398zxs5fJljk
unUnEY43jZL/aYhX90yikng7ic1A/1D2H0O4HPbQao7tIM1XVzwK4aLBzGj+
Z/eIl6RBa3+SrCgNPT9af1imthH3Ybr+h9U0MEhx+pxVG+HKX/77+FoaWHWq
zu4r2ogBR4kHlxQN6+50f6FdbCX3Gntp75VocItnXpZ7+oLctjPhyqLRsDPC
2zTLt4WkmFUkipnQEHDPoHalUAtxMpTjucig4WCcZVjh3WYyT41vSbklDeGy
Zd3tfM3EUuj5ii5HGiYPl5qKVj8lQy+2yIv506B1Lf1kEuMxqXrUdPVCIA12
o2vPb5p7RDLqNJUVQ2io14sQuXP7EaGUrqLoR9DQte7Pd2PpRyQu872eaxwN
o967rVT5m8gqS0+bC8dp8NmjqK+xoIGMGr1qV8ihYU5+eb9vUz2p06NvuZ1L
Q+l3+s8tqfXEU1F+e+MZGuzfzD00FqontxZ/dR+6TEPBlI87U/4hMX8aFqlQ
Q4Oi8CE536j7ZN3DgamyOhpGxP2tlhrfJz8qHaL1HtLwKaD9pKXwfXLyitZB
y0c0zOh2SCeX1JEB1kxaUBsNK/bqVUd015IYeuKZsgEajOvPmxQvuUfaXHY7
qXymYXFuuej43WoiFWYmenWYBmH7JwcVvarJk3NLj50fo+F1xLShZ30VWfY3
P+noFA1MAettZaxKculauX8QvxGK91/3idOrIFMPT8qPCBrBMbbx54mJO8Ti
zf5BL2EjHJQI/uZ38w75sdBw546VRqimHtDfJn+H6Lo+Z1pKGMH9R4SOtmQ5
eSE0pKOgboSe6pm8WY0yIiH39E+RphEkrhrK587cImHk+m1JHSM0Li3Q7X54
i6zyC1VeDSNk49LYVttbxL2BQ5LX1AgTvcmqGyNukj8RorxDzkbI9Y3IVO0u
JaYZ0427XI2QVaWZEn+1lORf+BD/wc0IBYOcZp77Swm19eJMp5cRRmYGxHrX
lJJ0edXvDcFGqPBa93z+8+tkfbdp1/lEI2zf1LojZsNVkvpAp8Q+xQj7L3G/
lHxRTH4UKSRxpxlB/vJK6w9RxeRBCD/F97ARuudu/Eh+cYW487Rlqp4ywo2l
KwdEUi+TS2pbTe6XGsGF6nbph1wRERQ1XbvnlhGeze1urestJFGz2r+kyo1Q
Jf/ZwjG3kJg+FjufUsXuv9qSgxz8hWTYpWfWqtEI1E+NesfnLhClVK/y92+N
wAoLqdu96Dw5Eeh46PB7I0gJZ35a3FJA5pgMd2qvEfwLwke9jxWQF+s2ChUO
sOu/OSfRULyABN/+6u//3Qj9iXW/ZajnSFlPmPT0QmM82J9vFEs/Q8QaPaev
LTJGrZt7r/PAaZJY7NC+Y7ExlAqSF+1JPE22hGvFPVxqjF+Zj/dsbsonE3wz
71LFjFH4MrmvzDGPaGskZImqGuNisF1VYOlJ0ukmqp5PMUZC2Ou/vh4nyZ6M
66/ENYyxceVnLqPVJ8nVT12rZHWN8TTqTm4cK4eszVI8p25sjPU+h9XaArPJ
vO+d1+y2GUNnr0u/+c7j5LSYn9UrJ2N4v8CJFonjRIfO+X3bDmMkhQoH8X3K
IqFnNlLc3I1Byr3vXvPNIgMWsZVBAezjU6dStsQdI0+vyDUdOmiMAy2l5vRn
R8juzprdSxPZ/Xvxmh6Sc4TMn8fkPZ5sDFXnPd/UPI4Q/a0HLPLSjbFKtssp
jOMIKeVub79ywhi2oymnb+odJlnu+3uarhiDc3HXjZSCQ0Tl8NKDZteMkeqZ
4ctrfog0VxVKPi8xxpLxK3NZv9PJQuFWz84yYwSnUR7fsUwnkfelRz/WGCPn
wzbX17xpxGnt80nOdmM8qos+XlGSQvhFQ25XdRhDJlFVy9wthdwXXh4c1mUM
7usO898sTyEyi7YPDXUb49ozek57TDL59nOg8/mQMaSOr/F56pJEDj6evZU/
a4wWIXNrNaMEQqk/F+jAaQKtWgGTfQsSyGANbePS+Sa4YJZ7cF9jPDEvSy1I
WGSCu+e3WmWZxpPlZ1Yc8V1mgtOXun7c2naQXApVCtCSN0Hl7/PJbTmxZFtg
q9xPBRPc2S6++PSuWLLEJ/TTVWUTRO9aqL9COZaE7Kh0Et9sgo1FqQo8h2OI
jqmxGTd7nykxJSimxnWAtKxzke2wN8F5l4/pJyT3kdhVnB8zHE0gf/rOmbpn
e4na8gtn6NtNENO3JHAufC/J4f2yotrVBH3eJauvtEQRt19hC877mqCIszJb
JzWS/HpyqC8ojt2/J6yQDKVw8o6vY/d0PLu92E6vYjiMPDAX+8ZeU8BwOqkm
+3IYOdxy5e/pNBP0rMoZ8d4QRuTbmpY1HzfBp7NeqpPyocTlNaeJ3BUTRB4x
OatkF0JoqxjNZVdNcORT9nb31SFk4/bDdigxAVNox3X6x2Dy591aV4cyE6Ta
ZSgsjwwmR3t0ohJrTDDHKcKXVBREGgfDinvbTFAwwZu3gh5Arsre2+TfYYLx
k1dNokb8yTHv+RV/XpngRNfasskj/sR1+Gi9QLcJ1g2M/jTs8SNTX0u69QZN
8MEpnj+T5UuUf38WyP1rguyj45eT+bzJCo1NJ6RnTeDzvuHSl9rdZDoiUuwG
Bx2PbphObQzbTZ5MLpR7tIAOm8uDd7X6vIj7jCT1twAdUxvOpwk3epKc+S6h
tlJ07OXkprfediezu0Q2t8rQ8Vb71ZFbke7E/eGLX1ZydByJ4mlx0HUnKgcN
IyyU6FjXkSX8rmEXeTQnu5euSQf3pYRDh3rdyMTUzxh9czquderxu2ntJE7b
ruGeJR37Mr7YqnPvJA/uenLq2tChmSDsdqHDlWREvj6otYWOgYmeDsNQVyLz
uyaR4krHUWO1U8eCdpAt31lp8qF0xJrM5sfcdCLV1obml8PpOPU4Qpx7hxOR
KJ1eLBtFh5iW+FDwYifyNSAwQ/oAHef386l1e28niSPMI+IpdNDLimQOKG0j
ZYPrslfk0bH61grxI28dyCqT1w7HT9Px8PlungNZDiS28OjKZefo2JBSuFHG
0oGYeyzIXVpIh/SzjxKXHm4hH/u+5C0upePXWb+XIXfsifD72wXz6ulYfOCy
oeQDO5KxODr6TiMdNLr+soY4O8KrQ3P0e8zO7zWnsiHVjszLaVvS2ULHuOVy
w5cNtuSHzbfIy6/pIGn+nxivbMiLBlkr6290+Bv3C8VLWhPz8W9yC37QIfjn
0eL2XivySOLO/MpxOu6MyaY4HrAitTFGlZJTdOxJ5dQ9VG1Jrmu5SU/MZ2DW
ZXlOvoUFSb926m/+KgaoiefOa6eaEp53bp22a9jtkQYcOZtMSQKv/A1ucQY2
H657+7eLQfZ5VXgGSzPQOR5zZHQDg/is72ilqTCQsmE2aUWTCaEf5780bMRA
6b1nS30FjMiC6DimVjADbZzXn8z/QEjZ95HJ2j0M3Ofh8nG3IsTd0/GMcTgD
loLtHjz39Um9lfIXu30MgKOBj3pJjyRIdMcEJDKwPWIF2Z+sQyjZdOlfyQw8
yvEem52nQz7ylT3Zl8pAfsSkskCsNqH9Sl3OymSg1qz0x/QBLTL/kWbx+ZMM
vNx5tmzJEQ1SpnvBWj6PgR0H5xbMiGoQ9xsCv0tPM/BBzFnk4QV1Up87gJrz
DEzmjwv9qd1M4v2zOruuMVD3sfLUAn4KUe2b27ejlIHxIbXVxYVqpG+L7/qB
mwzESvqnBxmoESqofj/vMLB1FWd3TLQqmSc8xsn/gIGFkh3upYKbyM3k7UVZ
9QxMfA07a1+lwt7fNJqvbmLg57WcuV27VciDT/nZss8YuNLIOnj/mDIJ2bZI
r6SFgeoj0T0PppWIxPPQvs2tDATPqd/54KNEDlaYKRp2MmAbU81xe4siUVW8
0/a4i4HGQO/FR18qkL5zEpHWbxnwrs1/0O6gQKhpkw+cexh4puni2hKwkfyY
c9/9sY+BdjztKZ63kRSEvlji+4mBE+5xehp58oTTpcgx8gsD86pT753tkSOl
bUKzsyMMfGuuiTqfJkdcTQ6cT/zGwCffS+E7dORInYr916PjDCQcGHv/+oQs
ieXiSrg2y4BYG1/uAa0NhOOyS0mfkCnKJKMSXXWkSOPIq4Azy03Roev6l6tF
kqSr2Cg5rTTF6PFBqyM7JIlIheG1jjWmWHnmjkRljARRapItfiRrCi3FOOvI
cnHi9OlH4XV9U6zbX16ctnYVe/3o5+lrYIoXS1SuflMTJUN+n6RlaaaY6Pza
VcxYSfaMv7pwjmGKEb2ZtubwFSSV615BFtMUP/Iv8om/EyJ31yef3utjChW3
ZmrECDc54MHhouFvinT16xbc9IWEdjlqzXigKeyHJDKtL88nL1T88vzDTPHK
wHTU+gAnGSI2ua6xpmjIp6rf+PVb/3r8k61r4k3RJb+rhmvVuH5ok6Hom0RT
rOgvO9Jq+V1/zlI9xy7NFMzVvUubugb1V7isPmF8whQnHCxFZk3q9B3Fpq7c
zTH97//J/wPW25a1
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1550005#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxEm3c81f/7/+09M4rIFkKy53le9nGmTVZCS2RUkqysrJAQIqOFJDIyMkKI
lBEhVJIUWaHI+J3P7fb7vjv/nNv99ny+rut6Pp7P53Vdr9u5HTE3H8sTNFRU
VEfoqKj+9407Mdvf8r0aQ/X/P3SGgr4fBdLQ/7FKXmZOpcC9/xjf+/5prkDV
f2zn8bsxVaD9P544fM3wusC7/zifjxwTLzD9H19lqjwYJ7D6H9sfLXiytEwH
/8esu1edTA9w/sdSFguzbQm8//GlN1ooc1XgP95bxT1JTS3yHzsl/rWe5v/H
hR5fezrk/7E8X11dgv0/NghwTecr/8fqOXYP0g6L/sfHXR44F03+4yjc/qys
7//4gXrKu/jVfzzPEYT3ZhH7jwOaiVrK6v84UXSN9/n1f1wzZfj6ra74fzyM
vbp83fQfr5c18RMs/7HGFa3jXaf+cS3P4fWW1H9cZyQo+nT2H4+V2Bn7/vrH
m1zpnoo7/1h7grO6hEfiP66/SI+7i/nHzx8snU9L+8fjbIpZlnn/eMv/bBNX
yT/WQzNM15v/cdP7D7nRP/7xpJ5Am+HaP965aztLTSX5H2N8+5VD+f6xyzCH
va7oPw7VJYRsyv3jO4VxhbVq/7iZqbMzAP7xp3N0P1XxktDNubTvwCFrRDWk
v+eXjSTMKcYVuL55iER1wjQqXCUhatmDJby+DUHBcyefs5KQ+9J8D3PkO+TK
uHlVIUAS+r0kJW85fEbh3hoP58Il4WPQ3zl5sR8of/DC6+IESeC9pT9lhFZQ
i9bT5VMZkvC1+F3rTcU/6FPeIr90gSRc73ec0BnaQVQMCrrTjyShUFE7+Agf
LYh6eR4vrJEEXN3DkOU9jKA/8DDG9YUknNO7vWrpygpuml8fHXgtCQ2E7c+T
G5wQcUe8f3xYEjIaTX+YnNsDrZ65+4/OS4LZmdcG++v2QuX3s2dd1iUhK7B6
1NxFEO6d1m5wp5KCh3Y9PyVEhCH65HuHc7xS4JPgvooPFAOsG3d2pK4UHD/5
TeXFp4Og9fnj91gTKVCOfSQykSkLcq5lWknmUqD4y9k9zfoQsLngRzM9pMDD
ZYoVk6MIb49G7ytLlIK5s+l1VUbK0DJidboyQwp4eliL2laVodxOvLY2Xwr8
y4RmXfJVINWm2a6tSgrevPxlNTenCrYWGxkj41JwN43n6rCLBoxjvfloFaRB
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
h2P8tSHgbHnqFFcizOR2JX+7pA2JokkmL/kTYXicaQkbog2M07lJu/sToXO/
mXlJhDbcthI0uSGaCLUOceWssdpAxY7BBkkmQlHWKy7v69rw47Ghb/3BRMgc
YfZ7k6oNvnmTWRZyiRC3F9d/OFMbntGp9yD5RAiyjT9yI1cb8rplLKMVEsEz
vfvGSqE2FL3ERoorJoLDO5YVqyLKfnQfrNxLYTwP3rL6sTYoP7ZTP0GZr2uZ
8JS/UhsqDTyPs1Lsyd/o2RNYqw3ux5ZjWSj+hPpYz482aoNV2hNad0o8bJyE
Qe02bZgUyHDho8S7RUxUyenSBjoTjIs4ZT0/E1/f3O7Vhg3G5lfxlPVO9rCt
ugxqwzrp8GkyRY83LETrlhFtOMzygMqPoleT2fUqsUltGJXRdlhiToSy2F7e
yC/aIJ9No/uGJhHudLJfnJ7VhjFOT39Wyn4kM5CGjBe0QYvalr6Ysl++UW/S
mTa0IcM6c435UwK4tnGsn9nRhpeLamVvKftvQUO27aHVgcYtm8ub3QmgHP6W
P4lDB3wmH21HViaAeDPnpUUeHXDIYhH6+iABeHbI780FdOBVt4Z5eVYCrF7p
u8UjqQNXvfTYE0ISYLqe688FWR0I9mjKyz2XAEMb5vbDijpgIX3UUfRYAtRc
6t+XpaUDD84qHA/GJEDg+YGsA2QdYGewMHm+Hg+nn+7ZDLPWgUdu/NdCvsTD
0WVLh89HKfF8GA58/jYetH0GBe956AC+Tjez/kE8/PV8d1s2SAfIUtkx86R4
sFZ3vqEYpgNrJlhrV614KKWeiVGJ0oGsQbFNH4l4cMn87aeXpAMgwKN/Zj0O
XrwUxFoU6kBFTxJauRUH10SPrwZ264B7ztChie5Y+DT3/XvIWx048rEoc+RJ
LGg+8/8Y8U4H+OxMlRPSYuEHMao7cVIHLlw9OC/kHAvEKw/z81d0oEB297bE
3DXgGf5J6BLUBZW3Ha5GWzHgVRBg0CuiC00GmO3IiRho99rVGJDUhQGhN5cz
mmIggJZbYlxRF0KOfOrRDo+BUSXVjUUDXbD1Fmh8Qh0DeQlB9/ee1YXc+aPd
lTtRcEifcedkgy5klOfS185FQHnJo4MjLbog09lkHNsZAaq85hZmHbqgfXhg
x+FuBOh+y7x3qF8XhECpjN0xAkjX5fBLM7rwO+hsa1/3VfAfJWZe3qMHjlew
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
LDGnImRXieAq5sT5Q5MROT9R5xbeIcLl8PwymZeMqMbhD0cfFQmEZt4OSXxn
RBwM9WyRtCSgO13Gy8nGhFqc9Ji+M5EgZ6Uww5LEhPYx7dLnsJKAj5ekedmb
CflVttCSOUjwMHKgTD6BCYmzGO1W8ZCgJPTG++EXTCiomn77FD8JtsSPz96m
5LNB185NQQESiJuqJsQvMyF5trg/vftJEHHJZjGOgRlFPcOthx8gwTXgNLoq
wIzG3dhWVcRIUKRYWmsnx4zUON4sz0iQwO5NQPCqJjNKqktezJImwfajuiaM
MTOa8bD4SZAlAbN1c5kwmRlhuHjmdg+RYMFy4EqgLTO61fBu9qkiCfar6dmo
OzKjpZMZMyeOkGA3BueJcWZG2D320/tUScAwZPTjkhMzym8UmOpRJ8G9RwF0
3fbMaOP0h4+hWiQwuiU3u9+SGVny5k4c0SWBveSjdmssMyppdvkwjSHBlYvD
mF4dyvvKWdHRW/okoJql9f6kyIwc+aeGcUYkyLyYZTkrxozYvE8MlJuRQNE5
R6iHkRmdE/R6FWxNgqwG58ykASbU8VKh87AdCdI9ZM5ttDMhEb/F9qmjJBg5
kF1q8IwJ9XX6t2CPkeCkwR7dE7eZkPLFy894PUlgeLfiRs5xJhQvqlPd6UWC
46rcWaWWTOhLz9bTIB+KXq9t66MMmVCaeHjZpwskGE1WkYiQZEK/38bcLw0j
wdu65CD3L4zI/Ar27rEIElRNX9E7OcCIiqRZCvZEU/Rnv94j+IIROYRczwmM
J8HAQKNYUi4jei6XdtMonRJ/YnUh2ZIRhUcXXB0vIQFt8aejvZT8zH6JEXf8
MQkmvul+VbzJgLJPe++ZeUICbu6AIqkQBlSJ17q7WEUCv8yrHa/IDGiGu7+d
ppkEi5Ucy6WL9MifVuP6//430RDq3hM4TI92V3Ns2NpJkCqS3dj5nB7tGzk9
w/eKBN5Hn4x+vUaP8HeomGQHSVA7Ex/+ZS89Gkk+2fd4iARwe7c4dpMOeVx9
nak8QoJibseeO+N0KNQjU1Z3ggT1dV1fefPoULmcEp78jQRnlFKYvwvRIf5n
x5Iu/iUBR/jR62qbNOhu0UvbzW0SDIpF2YwN0CCl7EMiYVRkmHbKG+opoUFm
Ib+fxNKTYYS35GeCPQ0KNkzuv81JhtftYuz6j6jR1Nsm3lYJynzqMeHHlH7O
54XkhIk0GbJ52WgNf+1itp7G3++RIYOdr0TKKKV/5MuwVR9SIIOJKqcfbf8O
Buu0YDerQYZbwjZRKx7bmMezwrc5CGS4u3n2XtjIJiY2N9p1kkSGU7iHOmrR
mxgPy59SZRZkcCe3nG5T2cQIPX9eTrQjw1x26h77jA1MfLJjR6IbGdgkfsTM
+v7BnDRqS3A6QYa9TMZPZg/9wRhsyFnInyZD1NeEuDuzvzEbbpsferzJIPto
+rPAqd+Y0+pZyyyXydCCX6UdurSOMZqjejZ2hQxJk59ymWAdI5J/OrgklAwf
Szvp3zKvY4aZNRlxUWQA4YRemsI1zNOmvNcC18jAY372winfNUzSecbU73Fk
GP9IoFTNNYzxxLBQXDIZPmvsF0mcXsWIpmKm7FPJ8CmFlXW8dhWzZfLgoUw6
GfCn6T7fTlrFVJVfVO7KJgN/Ff/oUcwqRjyKF8v4gAy4ksUP1mW/MDuawezv
i8hQ/9lms/j6L8zozy8DDx6RoWFs4ADh3C9Mil2ls0kFGbqV9zGdVPmF8WLb
L8FfRYY74tM8Q3t/YbAvIma/1pDhylpvZdj2CmZXzvJ89HMyLJygwQS8XsGM
fazTtGkmg1GauU9d9QqmJk1sR7KVDOKdba3S+SuYVLO4ttV2Mqx1THyoS1jB
nNtZim3vJIOwk6jLucAVDK7SnpTWTYZtEvtPdHIFI3W6hcejlwybp6Tl5WxW
MOP9yXdoB8nQqDCN1VBfwdTG/HYfHCID9myit4XMCiZN55js3REy+Cyd6vPf
v4LxXepY8P9AhozoP7y3OFcw+PuKVQaTZJD41TxZR7eCkXbIuLznMxl8qaF/
eHMZQ8O5g5n6QtE3cDP5+/IyZrLtBN3TGTLlvPs1/fy+jKkP7H119TsZytql
qD5OLWMyFNSSLebJ0Ceb/ad2fBnjN5VjLbZIhjwB8/8XZQCa/0t31/E+TJcE
GvHxT0B8XMmbFdPxPihMbN/A9E9AwLqHjY/P8T4EAdSkkPdPQNP8DMTgzPE+
4LU7amD6T0AX69riBMvxPrxqoy8w/U9A7U1zjffJ8T6XHwv1//9PQLTtV2e0
yfE+5KEdHw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1550005#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFmnlUTf/3/8uYRIRSoTRJmru3uft63rGU5lJCpREhDVJCg+auShLRYMiU
aFAZSyglNBKSCo00ICQavve31u/jff44Zz3Wa5999n6e/Xqd117rrHbztfGc
wcfHZ8M7/b+rqWd/U+VAKY3v/x+zmBJ7O8XTyP9YK+dU5k3x3H9s9uJ1cZZ4
yT928BgrTxWv+sfv1WKZR8Vf/uOzyyxjEsS7/3GEwM018eI//rHjpnMFX7/N
wv94/nTEFuNVwv9Y3nq4/3Hi0n+8v16PnPoh/o/FShZ38PNL/eOyj8znDYYy
/7jVJOLbUeP/+NeNCtENNv+xTqjetlrv//j2ErVflan/8R2WhHRx/398/9LX
gLQ02X/cLqSaYZPzH0/4+1QsyvuPjUivwNEH/3HF63dZ0Z//4wcCNTVBkPvH
XXtmDVHM5LDjwl/n1LmraHyv6CKj9nIwOpz3y+FJLU3aIEynyFUOef0sVif9
Lw3n7m/x9ZHDvdybzhdtVxDXuX8iVILk8EfxSt0HcQoJ361z+Uu4HCrD9MW8
/3LI2ZbA51cT5RDsLxr++/ZGUqlX/M07XQ5n/3b1tWl7kK6cEVGFc3Kozn+z
LSt/L+Gbo2LYfU0OqkcGy2yHQ4j0rp3bzpfJ4cCH6iRhgyOE3nw5xvWhHHQy
bo5u25dI3HR7rq16LochGk2qeCKVRGbLNLW3yiFcL9pgVUoGOT/L9dfpD3KQ
kXQupTWdJY92ZkluGpTDx+UnSXPRRXJzwMfH+ZccQrLlRlaJXiO52/XvufPJ
Y6RWNim9oJCk9QnM3yEoD9rJWXmvrUpItNdrpz1L5SFfLRUuFXKbBPVczAtY
JY+e7BOCwlrlxMsj8E+wojwK1mgFlrIeEodPDNPDmvKI5V/fHsqsIiZui08f
MZSHltgmK9aZGqL3oXMgjiOP9Wf3Pzxu/Ywoud7QS7KSB2vw9mwLnwYi2Xkw
/riTPB4amrUsH2siQs5mb095yEMy+/vcI74vyWS7+NrsPTz79lmOY9KvyfDm
/uALwfLYV5y5Y+uCNtKwKXr5Da48Bq0Wfb9k0UUq39huv5kuj0ZDs6H61R9J
oYPM7dtn5WH/++CU0rJukmr/wOFxiTxOdrkPMJz7yZGXRy/XVsgjQN5r1sOS
zyTQdsvYi1p55MeMXPysPEQ2Wo+nv2mXx8fyNnom/Rsxbqzpfd8rD4c3ps/b
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
NvcNE6s+JnzL7qghr6SK5pUPMbFv+sGFvPBqEth06GHAVyb8vB9s3qhXTZYc
MQ1RGmXCuMyD9u17FbHu/dR/8jcTl10frOjdXkVe5IvW+s9kQdM6fre3y2NS
rXcwRlGcBbMBkY5zAQ+JxxcTWqckCwpLpjVS9B6SmVnLfp1YxcLOKMFlFL6H
hM5X4DlTjgWHE1mrk5IrSfmTD6wOVRZ8uvy9nu16QEptjWemsVi4vKS0oMH0
Pokzux29wpgF8lWv6t73e2QLc63AxfUsvLDzKqo8c4/M0Jq/oMyChWT7tfdm
f7tLLEQaRN848vwnRYgsvnKH9DduVFqxm4VzedX8Taxb5F5tTX6uLwvt1y1n
HZ4oI0mVumoq/iycLrXcN6e0jFAKJSi0/SyU+8mbnFYsIxHJHUauESzo/bLS
cRMvJRIWXta5J1hgh0/cvbvqJhliv25RPsVC/5vq2tqPxaTSyGRj6WkW1m74
lHnycjHxUlHa/CSHhXrq/andWsXkptCwR/9VFnZNWO+/a1tENjzbF6xcwcLW
lW+d/XYUEKnHvX9KKnn7QIVXNl5zC8j3uw6HjB6zkDEdI5By6QbJyNOLtKhl
oTvaMmZP/3XSGz+ZuLeZhRM3zbY3heSTMJPonJJeFnz5C/L/1l8lzc7bt6gP
sBBsmf4xNewqkdtnJp7/hec/O01insZVUndu8fELX1mIdqk7EJ5+hSz9mxWT
+ofnTy8k67fPZXLletnuvQvZoF5V9bxBv0j+PM5QGlzERoqD0lsNvovEvO1g
n/cSNtiC4iuiHuSS73OY21yWszFzhfGreOQSQ9cGOwsZNpxM1kU+M7tAGkX6
DZS12WBE0dRvRp0jMmuf/b6sy0a4mO+rZotzZB+5USprwEaskp97mvg5IrEr
UE0SbMj4buP7XniWeFTzyQqasmGT5rvx2Isc8nu/uGD/Vjbyrq76kv02k5gm
TTxxd2VjzY3HAeLhmSQrt/NIpxsbfCbXjYvWZBJG08XJVm82Ao57vVE6cIZw
lTS/VfuxceuzZMOndafJ6vemby5Es9F7tTvb+cFJkvDIoMA+jo37cG957XuS
fL+sHDM3kQ2Duid1zqtPkkf+Cyk+KWwYfdVVjIpNJx4CzcmaZ9joW1NwucDl
BLmitcn4YSEbT1mLBM4bHCeLxE1XBdzk5f9nV0fnn1QSMqX/U66MjUfJOcLd
d1OJ6dMVF+Lu8fKTk8hRMUolX5y7piyfsPFm2L9ByvQYUU3wLut4x4bCCLd6
x7xkku7reDSlgw0Jta516tlJZNpuvQfjAxt3jliybClJpFFqncilXjZO+EQm
FngcJX6lw7t3f2PDkaoXUPkqkZR07ZOfmMMBu/DzZeZ4HFnxxGvi+jwO3I2m
1V5diCPR1xxaXIQ4oHaq7XxsGUc2BulFPF7Mgd+2nh+l12LJ2PzJ9oQVHGjs
UzmZERBD9HWi0sQ1OTipqTMzQiSKtLqJa2dROBBYW99z49kREpB047W0DgeH
7jXrfYs6QvJ73kgoGnLQduHw+vKxSLIqTeWcNoeDWMHXSXc6IsiMb63XbZ04
MB3Y1Ta0PYw8y1tbczSSg4Ensvnmq/eT7a0V2xdHc7BV+01i3PkgMmuGneCJ
WA68XsyJOioXRGibDptncjlYbRnTPW/dPlI4t6UlL52DvSXjgZsYASTN42BX
TR4HMSuXpQcb+RL1lMWRZtc5yP/8Oejz1j3kxb1Lsg0FPP8/bSuOhe8mc5Y0
ebWWcHAm3Lj+ynMfEvxQfqi7gnd/csKiJRHbyZZVDeP8LRz8Oa+x4Kq7G1ko
7l967xUHTdtXtnRkbiMPlyzz2/eGd7/8mUM+b12JwrzN/f3vORCbTi4MueNM
RkZ7Wxv6efqKJy+3kNxEzg/Hp8Z/4eD+U075r2oHYjegbMEc5iDKZlGiRPBG
crvDv7pslIP+rgZr/VFbEvl06mbWFAcSzCO3bJItCKXqnK8DvzGqY49p/Ni2
gfRVsNYtnmWMBouccgW2KdlQknA+ap4xblld9hGiccjUDRVnmpAxbMJPGSnY
sUjh1Ubx3wuNkb1if0R2KIMsyxE95rPUGGECrw6NTBmR2ow7G+TFjNESN9h4
+LY+OZC2RaBT3Bifyu7WeKbrkI7482E2Usa49mWj66tKDZISxTYQkjHGx1vy
VRtXqBJmWP+vajljdJ54lNQ3Yy25Eqi6R0/JGIyv7O9vd0sRJ9+mtaPKxkjJ
jir6PV+MLNgZ2JOvZgxTpfGJkykLSaWH2DkvTd643RLN9yZ8xN/l7hZpqjE4
2qGLSqTaaAvP0xw/8vh//+P8HyTzYuE=
          "]], 
         LineBox[CompressedData["
1:eJwtUA001WcYv/+3W9xaLJVNH5OURKF2KqL3fWYlkf8zbaV1FRPNlD4mkxO1
io1qXcnckMpETb5ClHElUqKQSApFyfdXSi65+++cPec85zm/85zn+X3oue3Z
4EFEIpG90P9Nq4/KuAVyHkT/16/BcUeeJ/Fw9mbElbqsajrZT83uhxQepJyL
+z2ulkZ7emu1pvFQoitdlmlbRzPtLeJ7s3hQ/6etUlb8nLZOqSomBTzcNV90
9FBuM7U/L1JfWM3DugGYkNXYQetkOypTanhY9XeGj11tJ3U/Un52aR0PbiS/
SVLWRQ+5n11o1cBDw/GYMI3kHppuZGaPb3jIuMHSVxn0U+0cl1O+IzyMwz0h
cUGDNP7KnU3Kjzx0LO5KdOoYpGbRxrqHRQgKi+tjOfw7ui5wKC1kPEL5w6v3
Aqa+pwFfy6piNBGS05LKrP4YopJl76LmaCFMylbP9WobopEGUreEaQgzn2Qo
HKw/0DTJgrepOgg6rjv9zQc+0OYKxbTb+gihfPfNEmsl3VM4r8HGAKGiw9i1
6IySjmYcTygzRIiSZQ8fblHS6ZGbltcsRvBrN/Wlh0eorXOPU9sKhO8vLD3z
/vIoTWmbHaOxHuHF9F/kxwrGaEhssGsjj9Bt8irWQqyi7hu656c6Iii7TD8L
WKuis/Ly0h2cED4UxvWllKrocZm05KQbwojUeUrgNhHbsbrohLMHwsq+Hsd5
B0XMetjIcZEngnXhki06chEbdlM+K/NGKHjYFtJXLmKey6P6J/ojvD3BVXmb
cWx1pyin/iBCpFJ5K3Ytx3QvegYkHUJw+LR1gv42jtVKzNXsghCw9Zp0SSjH
MhQXynV+RzDm9Pm8WI6d8lELbw9F+PZA4taL1zi2pqF2VqgMIcFsfIzfE47N
CafNm8MRtpfvTd7VzrFRm8TLhn8ixPpr/qVQciwr3XfpvWiE8/kTuMCZhIV5
NAzJYwV/qb0OnUaE7ZyxJv/HiwhDOxbZ5FoQNjdomq1aIsJYU6EqcCNhY+YB
k59cEfhGki7tdyPsaXfLo8SrCFpn1PMqdgv/nDK32lxDCO74SpITTNiuT2bq
a2ch6I1PnbsmjDDbwqNtr7MRMr9J87WMJkxltMEnOA+h1zRc5p5MWH3TTfON
BQgmX4hXRmURlh2hNzbvNkL4gPFrizzCwteFFg0WI/xUX3V0bRFhu8f6Qorv
IgwThbiolDC7zM18xH2EU1E3nFMqCJvveWuq+wMEn7LQALUawkSzDZ9+WYkw
cGd446OnhD2vkp0fV42wJbuyXqORsBu/DW2vrhH2pbWj+S8Ji7B0WRhfhyAx
eZzy4hVhe/tKen5+hvBG83ST3xvC7BNMsqwbEWrP1RwLaifMYEukv9ZLwS/x
OqnWSRjRHKPNLQife2t3cl2ENRZ5iDNahTwnxp/eL+DcAw9Kj7QjGEjq9rkK
OHLxMpljF0JNRGBgiXC/r/ncd3q9gr5n0sTLHYStl4tn9PcjqCSWjWKBz3D9
rqZbgwgT+RbtplbCxNzjS2FDCPcfz7JeIeh9cd3Sy1WJcKIszVFD8JPnFW9q
9hFB7uK+wqOBMLnupHcqFYKFgry2EvL4F3yVLpA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1550005#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFmnk8Vd8X900lEiVDZJ4zz9d493Lde10uMkZCZk3IFEpmlzJUkiKUlDJl
yFQhY2SeQmWuUBlSIWPPfV6v5/n+zh/nvN6vvfbaa33WPmevP46wi4+FOx0N
Dc076u3/Po3c5/sbvlViaf7fxaDPe3GSJxX9f1Z5cC/zBc/j/5jcPVKexVPx
H9u4rdel8LT8x+MKcfpJPEP/8UPO45TrPF/+48h9LySv8fz5j21P5pT8XGGA
/8/7/0XaGwiw/cfi5kvzzQkc/3FQjya694fnP+auODRBSyv4H1fN6Hf16oj8
x8OkyJUkg//x2vN6LmOL/zHmiqZzu+f/uOawwlpDyv/4JZ5XqHz+f1yb99M/
NVX0Px5jkU+3ePA/3vY7X3+w4H+si2b3Jb35H9ePfMqK/f4/frOvre0SiP3H
U94Mi6pkMTibu+WYwiiApXmvx/7bWgx0wwrWbN62Y4W0wzFlTmJQMI/HT+pt
YSGn1t7nvBi8fvzC8YklH3Ji3IyUuyQGm1LPOqZ5VFGEF+bpjwgxaAjX4vbc
IqKHgwFd+QliEOzHFfG35gRq0Cxf8UwTg4dbU3Mf1d3Q1INlLokcMWgtGnXO
KrqIaPbK6XwpFAP56IUqy6UQJHThnPOjKjG4PN2azKYdjfQGnlKcGsUAk/7i
t3NgAnLR+Foo0CUGi1isYPl2CorKFukfGxaDCM1YbYGb6egRg9NaxrQYiBx1
rMT2P0RN57KOnlwQg5kjd9FA2RP04tv5845rYhCSLbYswFWIHp/Reu1KIw7L
7aLJaSWlKHVu3/6zzOKAvctQMGJWgWI9Ruy8OcRBvFUwQjCkBl36+qTAX0Ac
vmbfYWZTqUMebgGbwVLiUCKpElCJb0Q2n3FGYcriEEdrOHZFvwWRXA5lROuI
gwr3STP8/TakOT35LZ4oDoYPgxpvm3ciaafnmslm4oBfqNljer4XHZ0MvXbb
ThwadciDR9b7EYsj+cM9N3E4mv2LMdpnCO2M8RzL9qbajzHYrguNoKVT88G5
weIQWJ551uHAR9R7MvbI80RxWDA7+CvPdAo1jFqeeZEmDn065MUe4RlUaiNS
U/NQHKz/hu5Kc35BKdZvbJorxOHulOs3nOM8ih5KetpeLw7+4h4MjRXfUYCl
/Xp3uzgUUZaffJddRCfMN9JGx8Rhpu6jXqbeCjLoa5sdnxUHm1Gjro+lv5DG
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
A37xoU0=
          "]]}, Annotation[#, "Charting`Private`Tag$1550005#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF2nk0lO8bP3CiQqIkWxtCki27sdxvYzBjixCpELJFZAmlEEZSslUUStrI
HtImSUiylgihspXQRiL9/M75/T7f+eOZ8zrPPdd1X/czz8x1n/OIOfvuPLCE
hYXl3OLh/74bHxhtqx4r12X5fy92fRG/fuFU8v+tfCUt467w9f9s8uptaaZw
2X+2dZ15nCxc+5/7FGL1zwq//s9X1+5gnhb+9J8jOe5uiRP++Z/tdmcXTX1j
x//3in+Re4028v5nScuJ0Wfx/P85uFmTpP0U/s+CZavfs7Ju+s8VH/SbWrTF
/3MnPfLbWaP/ebqwSsB05/+sfkxzf4P7/1y5RmG6Ovl/vk8TES0d/Z8f3ZwK
SE3d/J97ueXTd175n+f9D1atyvufdcgwx9kn/3PV257MmM//8xOO+vojkPjP
A4fYv6qYSMAzZ84heflGXZY3enw/bCSgcyJv2rauQVdUK1y9xEkCeaM0Wr/e
nC6yH+31PSiBh9fvOtywWk+clv+JlDsigT/StxsHhVVIhI/6rS8REqgOpwi6
zxmSqx2BTbnxEgjxF4j4XbmLVGuWfnO/IIGrcwMj79RcycCVSQGpbAk8z+/a
n5nvR1iWyWl/uiMB+ajxCquJUCLq7bX/WoUEjg4+T+DViiJ67beYTk8loJ5+
98f+oHjirDF0Z2OTBL7q6m4qnU8mJ7PE23o7JRChGaO1MTGdXGN3mr40KAHx
dQ7lum1XSY1X5rrd4xL4IHSRtJfcIHfHDh50mJZAaJbE5EaBO+S6B+WhC4sk
Jhs2J1woKiapIxwrPLkkoXuRPe+tRRmJcXtrf4hfEpLPN0VsCq0kR4Zu5AVs
lMRQ1nkuXuXHxM018E+ItCSKtigHltOeEtuPVOMTSpKIZWX0HtOvJXTn1Zei
tCWhLLjbgna5nmgO9o+dMpQE42rw0xTLl0TGqVAzwUIStPHKpeYHW8i6/rC4
FHtJPNU26RCaaSPcDibdaa6SWJf1fXmU72vyt1d4a9ahxfG97HYzom/JxJ7R
kJwQSQSVZnjuW/mOtOyOESo8I4lxi1Xfb5oPkOouK4+7FyTRqm3ytVnsAym2
Fa+svCoJm99hCzJrP5Fkmye2z8okcXHAZYzqMEqiXp+91VAliQBJN/anZZ9J
oNXemVcNkshnTt74LPuV7LKcvdDVK4kPj9/pZeh9I0at9cN9w5Kw7TJuelf8
nWjsuKD2cUoSYoJ29423/yTCZsqdX9ml8Fq6fdmnAzOkl+6zlk1OCpQ/X/V2
Zy2QV/VaBzjUpTDj/WXkpQkLqgy5ylfqScHQeU/OUktWXKHdshaykUKPHPdh
tSA2OGMwRe64FNSWCPttkOCA1ZOij0qxUqBvao4RPMAJmu4JZY0kKTgso22O
LeSCpPa6DuoNKZiPvQ4os1+JUXUbPrtXUhiw6R0djl+N7orNzvveSqFP+dij
BTM+NKp+L3EelMJ89ftYKv8a3FE+Z+nzSwqhAq/jzQr4cUjhReLJDVvQzRxX
8F8thF9SOrwFPltw8odJI2fOJuh+oNafDtkCNbF/yQaOomBm0sM9orYgmtfX
+sykKAT4rSc3p2/B0cCBsUpBcaixHmy5VLsFc7zHamaZEjjxyC82pGUL9sa7
llltlURd8BGy690WxEjwyto0L67zRGTR6qktELrqM3RAdAtCetLOnVonDVhT
Vh4Y2orqC1lGblLS+GHk3H49UwYcO6//098uDVpYn0C13TakNxT5/jOUhmRz
68ubb2XxoLxuxxF/aUSJqnf8/q2A+XM/eV1fSONZWshEmIsyaCZ/6vVeSyNw
rtfyQKcyzixjidjUL40hhxLhaGMVbDi+Yurdz8Xxg6/Y1dRUoesl3mopuhW7
c0serRRRRzjNIpEEb4WHdIf71HItLJm9s2qdpAxUN473BCfqYd0r6g+iIAND
haOh+U16UMnufuOqKYMDmZWOVRxUHGAsv1xoJgOZshnvgxFUNKQ7S1KPyOCm
jDlXrI8+zlGEKZ71MuBneflrhbYBbvMUr09ok4F+fgt/QqABqj8Y/ivtkcH7
K7s+P843wPfTgbXzkzI4yHN7bMN6Q+zqaTFPFNqGoVsCajenDbE+jOlyz3Mb
GlitHzmn06FqscGwN2Abyv4FfR5+SYe5RJk064lt+CPvbPfvLx3hTYNfjZO3
4VBPhfuYEwMf1uuEvH+wDTvejczGiRkj9/GPM0u5ZfHHWm7E56wJapJO+8oI
yCIz5dKvgUoTvDsgtnOHqCxcVI6L9n80ATfPDsF0FVmYr/k6dUzDFH4Oedmy
+2RR+if4nlqvKdT+OVVYFcqC46PyQuVKc5iaVZ80qJSFsuKIosx2c7hc3rRD
vUYWjqE2lvLW5khUfz8i0imLplV7P/xMM8eY7x7hD39lsVXmVkHBhh3IGLAJ
8zOTw4nCzOQxLguw1hhTz47L4fLo9nObP1tAaFUeT/i0HEaVi8f2z1hA3oGz
x49FHj9u1IinsFvC/k99gDW/PF73vDjesdESZUoGN9Zpy2Mtf2TYxE5LuOUQ
jrx4edAU6oRSH1iiKVqluU5GAU+Vg3MvJuwEhfflkiRVBQz3by4LyNyJ2+n7
1fdAAQ82nfZ2zd+JqMKEq5M2CrCIL2KJbVwc3zXqLxSpAM6vHIVDy61we1um
oNdbBQjW3BJJj7WCQIWyqcoHBVSVXShZnWaFaDRGLIwrwPF0x8jt21YozpsL
ZLAq4r24eZ9KoxXin0i/7xNQhOA/z/3NPNagjp0sXkZVxMfcuBjbLGuEyjc3
HjRSxOxy9czhYmsUBwgPtZoqwj/Avjj9mTU2LhQJX7ZVhHyj1bD3mDVm+fpO
Kvgo4p7pHe0mNRsUa6vb2KUpYk3U9sHkLhtsSvwymzuhiKfrDp+f0rBF1f7w
3NIfinh8qvZlkbktHJTX7H74WxE2ewQ+JbraIqOTUtm0ZDsknM4+rEy0hdCG
00cmBbaj0i7VJvOzLfjypH+okO0wKtipX3bdDktrD4w/Obcd7+5sHnyw3R5f
Zvrfv1FUQu3pE9935u1Dhfu5GmM1JbxmYadENu5DxFvdm0+0lGC1dry49fM+
CNzL9Mk1VELKC+LVvs0B1CN75sP2KuGmXHDlniIHXPrZKSxxSgkhPKn/7B85
gv7tlbV/vxIGbx7XMJt2wvXPDxt5EpQR1KI3Em7qgkMXd2z2SlHGjgc8W6Id
XaBO+3jseZoyJI5z/E70d0FjJpdcWI4yTu/JrXiW5oJvFrvPjVUqw16xmBk3
5ALde9NWtR+VoVd3lS8owhXdUdv7QjVVsN8uCBUPDuCa4nPVN7oq8H6+oZbZ
fADefXYJijQVxP4UnXX8cAAs6hFkxFwFrYe+7lLhcoPU5+Zsa1cVyLBEqubZ
uyHQwttN4ZwK/rJ8zzvK6g7dv/+qTqeqQOlwXpqkoDuW56UIDqerQM9t9zyX
nDsusT1syLiuAtNf15em7nbH0wrObVwPVJDbEdm6rMIdPBtuTX76pALJ/hNB
ieEewK6ovo9jKnBz8beqSvOA/znHlx8mVGCr1Hd+R6kHOlmFbg38VoHlp1bL
m8MeyBo+5dDLrQq2vswID2tPtG46YNqzWhUsfx4l/fLzxJLdepR3Aqo4dm3N
zO+znnB7Obu2S1QV81ca6QdfeEK+2OtVh4oq3uz6PqJm6AWnMcOH7ZqqyHNW
Yyl280Ky+ObcNl1VeLWPahfFemE6tSe6ha6KgV0nbI1eeqEq1FT75V5V5Lqy
7+DefRBm+vJ3aqJV0Sp1VUot0RsnwrjSn8apokrac+TlfW8Ulw8zqxNU4ZQT
nrjw0Rv80lecq9JU8Te8LUyX4oNe7lUiD/JVkfP30hnqhA+8O7+dKnmtiklt
N99lQb7I4m0+UtytCr4lQqJNt33RSs9zLXqvivK4uXeafb5QeeiMglFVpO/K
1Fou4bdYZ8fM7fnF/IO+tm3JfjjjWe52VUINofeXy+lHHMZnFJxaIaOGQy8o
bPzXDsNI6EbeEQU18J3lzTWqPYwl9akTphQ1UIsHwzo5/REqEXhkdocavKT7
m0+l+8OtX4m585gaMqcGhD42BkDPpvgGe7saLmyWPdPjdwRZsrfrfd+qIdFZ
QXwm8wjm2a6OvetVQ5ZJf57DyyOoLD0nVzKiBvmu81ncW4Ihv8q3fN9fNXgo
yl2vGgzG+pdyzyuk1dG3abOOnksopnHnk0e4OtLaHv7aFx+GR9e/XA6OVofO
FPVs0sMwnOSQtWLGqaNSouZB15cw8LTmP81JUQd3RSr/ZdPjkHIszHp/Sx1W
z/8OPeE5gV3HS+ysW9VRdGbH7dmUcJTfv9dExDQg773MN9U4Ekc3/I4yl9JA
nfO6TEnnSCBSQ2vfNg1oUK3ar4VGool+P/eoqgZstbIP7bsdiU9vHzDLGRpw
HrJQr2Q/Cf7px9jmrwFDj8STspUnEahUWybwTAPzZaaeTLZouKmIXk1q0ADj
htXIPqFo2KmFxXM3a+DKafmTc7LR0KKoOC/p1kCyaOOyGJtoLKFe552Y0MAK
3yGF8pxo/NRnmfP4qQHWYwu52RXRGDLYO/xxVgP9LtORpi+i0cDgf9zNrolx
7i+V3V+jcc4y2uu5iCaae6d97ivHIMJqwAaimngRrW4QQYuBv4223kNJTVz6
eLZ6wToGu3b/FCxR1AS99d2VTUExWL/f9XmGoSaiT4lx9JbEgMeluljQVBPV
LzabmFTHgOXA+oxkS01khAdc8m6OwUeP1/6n9mqiSSCB5dlYDPL8aKKB/ppY
5vDNs3A9Exn+V1dMBmviodGZ2kxpJs4Gzk97HtfEvoncdooKE34hZa8cT2nC
WtFnb5gxE85HV91/d1YT6XnJrKI2TFiHeV+3SdFE4RVKga8jE+oREsdMsjTh
Xs04tDqACemTEW51OZp403u6xTmMCZHoXku9XE3Yn7ra7RDDxEJsqrR6mSbm
75yYtLnAxFTc1JrS+5qouzt4wiKLicF403+yTzSx4Gle9fMGE7Xn2DvFGzXx
Jfq2tWYZExVJTk8zWzQR172CdD9g4nbKo3yhN5rY6pskIv6UiUvnhdJS3mmi
iy/lzZp6JuIvBkbxDGgiK8nLobCJibD01kNxQ4ufrzyc862NiUOXZe3Zv2gi
x3pJSl8nEzuvfFL880sT50S3bCvqZ4KWjfVBc5pwmEkvS/3IhGpOxvIpFgok
eOuei48wIXXj93evZRSIJ+QF7/7MhNAt6/dDKyjILTH7qPGVCa7c4hdOqyng
ulcu9nSSifk87vIeAQpSekZNvn9jYiLf4+qu9RSc3/v1aNMPJvoLa+PbxChw
DH5Rv+MXE61f2ceVtlAwZBObHjzNRLWsgWmqLAVLzN5+NplhovhgTP6v7RQU
iO2ZaVr01bzn3LbqFEj1Gc//WXTi2FKfSm0K7px6r9a56Ehpw1fCVApC5cw/
OSza350pd8yIgvbXbXrnF+M736w722tKwffY7DOhi/l3Di2b0NlJgYjFL1bu
n0zoSxiZX7GlQGuHx6DpdyZUXGILWfZRoHHOIFx7igmJa/U8zs4U8M35UXoW
6+cfXO77zH0xv96nw1u/MLFUlN4i4UPBh9Xp0VtGmZh2OKXA9KcgTSSu7c0n
JoYzG86NBFNQzFV4T2WQic5ejin68cX1S2K9QOtjon4dwyLvJAWZEhEvl3Yv
Xv/0F6t8zlJwofTrSGYLE2ldnIebkymoqjhZG9TIRJygcZtCGgXy2kdbWZ4z
4XW+Men7NQqcXs+5K91nwv4113er24vzOag13l3KhMkak53lBRTIJNCT1PKZ
kE16yRdSScHnssuaqxe/n1/PNKX8fbW4fp6Xv+45wcT7l9w/HTooeGgq3/4w
iIlmLjPr6i4KejO9nN54M1F46hV/1EcKJpdNdajbL95f0c3nOWYpONKw1eDl
diacnvFMey5QQKGzFXJuYcJyyY5dL9m0kJ60492yxftVKaJFIIFHC/4RNDks
ZeLnsdaLayS0IOr8/vLT1zH49GDV78CtWvjerbqOsyEGb2Yt7DrltdBVNDXG
/zAGFcFtQumaWniS5+UcdjUGIQHt6Rt3aKHE3F3zikcM5rxeX956VAuuG8P0
eyaiYa22L0k+XAsu7wc7O/ujkc86zFSO1kIUm9TA7dZoOKTNHNZJ0EKw6uo3
7SXRePpchG55TQvyl2+yWfhHI1Z0/8+QxsXzq8T6w8ajsKbzq2mDiDYasgOK
2RtPYpve8gW3h9rYOS42u9MkYrHfvbOlq1obfCtJ3W+VCKjwW1gy6rSBvMuH
0jdGQHsk7fq2Nm3k/coPvvwxHOZnZUymhrWxW39GQ0IxHP7dZmmhfDoI8Ezm
4nlxHPcPpyqd8dSBZX8ujyPrMej2aOz9e0hnsW991nPozVHU0PpiDgXqQPRD
4q+U3KNoFJTqtgjXQRp9fEF051H0Pr4Xvva8DvqWC03bXw8FC1dPU1a1Dvwi
ahLGzUJgdE3MvURQF2z8pSUl94OgksYjVbdeF/ulzGUsUoMgmjD36Z2YLnZf
f43VvkH4E/rGmV1WF3bSoQHzEkEosIxzsIUuHqtxiYcnB2IN6zebvx662CRM
XRYYGIB+x2oa44Eull50jrlocxhNNgVsDk90wcFFbrKoHkalyaUa/1pdbHu3
aiKZ/zCS1QOR0ayLg2nhmsqv/WDAK609+UEXMnYu/q42frhTdU75/AqCnvMD
/+SeHELwBkfxwb0ESgkfGj9IHYSzheKu3v0EvD/fVmh884J5FOvpt24Ec3bZ
de8fekFqLOfbKz8C2tGcPpGdXnhdNlr9IJogJIn78Y6TnlA09XdMzScosJmZ
T/rmjtGjMRlG8wRdHX26DK4D+Lxrm0c2C8Cd8GVh93tXOE2tWbKJDVCrf0Qt
L3WFyeYhVREOYPe7F3bGe10hHhebuYoPSD/h+3qk1AWt1k3efyWByUG7CxU+
zpAdt1nx1gzw3vOi46agEyqtTZ+ctgC28LnO8H10hP5jaoCuFTCwx9nQ/6Ij
7BMUem7YYfF37Om9OVZHxCly3gl0AVzWxJRsfr8Pw4GPjPlCgZgH412rSvfA
v6904fkxIN+OU3Gt7x78NcgtDT0BWM+dDr8puwf8ghdEBqOwuO9bXuWdaw/9
+76fixIAU6Ece7/c3bj6V/y02XVg6bbVL9NrbCHrJqzLegtY8k5vKdcpW9xr
5v1elgvs+31satbMFs1X5nevLwLqC7cct+nZhb96nVu/3AdYNj1lfpqzgT0z
7sWpFuCCOEfxHStrrOGd4qj9A2QlXhGn2Fmi/fHpWMZfIN7J/9aCvCWSvSWX
tfwDlI1apdcvswRfoz3bO3Y90H+rFjmWW4Av5vnfSR49qBoM5c8IWmDV3KXv
6zbrwfZP3rK6bjO05qoezpbUA1GPau5NMkOiXeuklLQe2oMqXZONzcBbsfTr
djk9sMDL+c1jU/Ac9hsxUtdD4D/tQ5fumIB7xKA3wEQPYmEsQ2I5DDSdH7Cf
NdNDF2VcIdOVgTO0Y90nLPRw2ybB54YUAyuuFXfG2eiB11Ml2C6fDq5969qu
OOpB6NSTJzJVRuDomHr+MkAPhYeXVZ7/YwD2J5eLNmfoYVyjx+h8CxXvtGn0
/iw9dK+KiXuVQUXRg/GBS9l6iLS7bsT0osK+QoeP75YeftldSA9cTkVJQX8g
S6keqvjEsySM9OCQsZnSV6+HMc1yoef3CVREmtrTGvWglJMkruNCwJkWeND6
lR6eRftlpqwkKEt5nvGyXQ+f9qxN7HDVxYp493/3+/Qw4Oew3HODDipD79Re
+KEHk4nVAaScgoQZq307p/Ww8syAUvlBClyC5n+tnNVD3lBd1WdxyuL6mW2J
WdBDwe3jjgmLfdUBj8m4AE4q0o4sfx57XAN8tso7LDZRIcQ+G/nMXw0HVR52
c5pQ8fhenqTgWyVUt77JrzSjgm2kJcIkRwlrfabC3S2okCvZKsbhp4QnNySl
nttQwXlTc8naFUpYI5joH+FExQQL65yd0XY8nHVdMRNEhcikzlh/oQJWXQh/
fyOEig6N4ePitgo4oHSpxPoYFWUGNUfMWRTAe7DFtjSCCtPuH3t328jDpVfz
uk/8Yv72X6f+cMphxRMenU9Xqci5hl1xl2XgtGfrqpQcKsK2HfGyt5RB+Yz+
R72bVFDDD1R9Xy4DR8XQuCt3qFjxZnjOL3gr7mZ/fGNfQcWre97eno7S2BNd
eajtJRWzb/3N71tK4Q7D+WrVNBXlmdz1NXfFoSIrpktmqVDV0nKKOimOKp6B
nidzVLwUuVP61FIcrR37BJ+y6EOPzW+i9JsYfu7bnfCMSx8e20KKjNTFoOtv
EdawUR/xPVlnA4o3od6aV4Qhpo/kYzNs6Xs3wUK9+d6LzfrQLe8zOM+5Cc7z
Jj8apfVRpHBcmtNtI2KZRl6vlPRx6AR9Old6A1ov6dq1G+rj3Zftc2odIth9
/O+vnQx9NH8p/PsxXgQfHB+ldJjoIzeytp9hIIKfEpSW1xb6oFvmT2k8EIZw
karhW3t9nC7iW344XwjOz2RVeg/p45UXS0h5sQB+fRFZNXxBH2rPC1c8lluD
1MyR+oz0xfnzdGXN/+KD8o6ycKsMfZSxL4i9q+LD4VKzyepsfShbisa57+TD
15CI5sv5+njJs8o6M2I1hpYOn7Gs0Qcb0blqM8WL6HulNI7n+hBo5hESSOHF
Zs/w+ap6fUQ8tTsyqMaL/U1C3rKv9EHdHrblbCQP+pJNTJZ36aPz3kqJYfGV
eLOphPPxV31YiVnxb0rhQmDb8acBU/qoeRDFp2nAhTVRxqEyP/QhaUefVfrN
Ccvhj6MXf+vDsaB102MnTrzKF2jwZ6OBT/rutjEtDjzXDGNKC9MQn+S1NkVo
GVy/0HX719HwWfSeYfLbpWDLXDt9fiMN0swyLtOLS6HHUnSATYIGEWqQ1JjQ
UjyuG6S9l6dhoWthWaoEO8qtjNhSaTTwfqG6LexZglMmlTHrjWhQ8i4fdty6
BHv1t3LcYNAw6ql1xniGFUuUV6ysMKdh3owtqTyVFeZ8LQJddjSYuLRzPXzD
gtHWXTLrfWioste9U/Z+gTxsqM+/7ktD5k3/Bpu4BZJQraEg50/DUkEVjn6V
BaJSLKKiG0yDXbeO79WEvyTy3Hsdp0gaWI287DNM54mIuZvl9fM0HDn7Vf3o
1Cz5avC2QzaNhsFNmu5xt2dJtQ59V/klGnoP7JnYu3+WuMnJ7Km7QsPczHt/
xpvf5C73hOtoLg3adaHBLHUzxPRlUIhsFQ2XYyKY2178IuH0mCtlwzQ8PrGC
9S/jO2l38NirOEbDoekCKovQdyIRZCKc/4UGlw+6P+KGv5HG7NUpOVM0HLY/
d0km5hvhn8tkJv+hwYNrdUxkwxS5XVDh48djAA+xL/zlTRPkz7N0mfFVBuge
r3JFyAQxexc24r7GAPH8907elJgg35fp73cUMoBOKP9WtoivRNupxdpc3ADG
F6M2LWCctPKNasmqGYBDcbVoz+cxIr715e9bGgZoSF69Mz5njASRwvLNWgao
Gfi1en7vGBHxDlRYBwO81vXS2tQ+Slyfs2zmMjbA07vltzyfj5DfwcJco/sM
4EkzmOtvGiLGCfN1Lk4GSA0IfdaQOEQyr/dH9TsbwCY4asDeZohQ22787XQ3
wK0zJ9iODXwiZ2SUvj0/bADxpfJJxxY+ErE+466cGAO02ZuvuG77gZyu0Sqy
OWUAHsbrb+vEPpDvt2SZy+MX4913UdX4Mkhq/HlUDiYa4JCr8m6ryEHiytF+
TumyAVSf5zxoLBsgt5V3Gz0tNkClty9l2Ps9WSVsvDHgrgGcrhycGV/9noQu
UH5JVBhg5dz6y6P3+ojxi/U5px4awCDSt71nWR/54jCwsKPOAClbaAMrS3qI
/Gn3ivc9BhjVWKL4XbmbXPC1O5v43gBht9zND412kX/WDFfqoAGW/ijNa8zs
Iq2btvHdHDZA5heJe4Irusjh8gkfn28GMPx8aVf+ZCcpGwiSnF9mCGdLvruc
71+T9XVu8wWchtBaXrRO9MprEnPHtsOR2xAJ5qYPfjq9JruOaEY+W20ILyV5
4dbhDjKz4m/v6fWGqCwR6Fkz104o6tGpwkqGUL5ZvueHfhvpdBZWy1QxRGyd
ju6BNW0kIKHwraj6YjyGqZbjx1aSP9QlIq1tiCaZXZmfolvJxlS5bDVDQ9w/
Km7LmdFClnzrLLCyN0SoVVw2daKJZK333vF2ryH+ypkq3MloIlp01m/2jobQ
TLwUO2/SRAKvbFNxdl10/FLlHQUvybBZxAO/Q4ZYedfg7sGjjeRl3tb6sycN
4Ro/a6yl3UA8Oqs8VscYoj4yqfj3TD1hX2LNdT7WELeOuZgFldUT3d0nzDLO
GEJNaLA+W6GeFC/v6Mi7YIhGs8CFE/J1JNU1bKA+bzF+TOp5KdNaopi4+qRJ
gSGWcG+paeSrJa8e3tzcUrQ4X52mToF3z8iyNW1unWWGYGzV4bji9YyEPJX8
+qnKEKp1ug81U2rI3o0ts6wdhrBwnegbY3lKeIT9yx++McTvizG20q+qydM1
aw8HdRmiVVyxZfmlaiLFuWd0tM8QGvcjvl5RrSaTP4Y7W0YX48eVFQ6MVJGT
LxbuZi4YosMr6vW7tY+ISm22ry2rEWpjgka2VT8kI1W0bavZjTApeSnD7+BD
Ylp2+lo0pxHkx//uelr7gKy9IpB0kN8Ib41qJ6Yj75PbgfKHNGWM0PrJn7pH
4h6x923b+kPWCBasWonZvRVkpVfgUL6CEYY4H2u/OF9B/B0f7BVVNUL9jZm3
JVwVRMvY0GQ5jHDBP1osY6GMNG9ykH5jY4TuuyM7g7jvkggR1k8Jdkawf2HD
eqatlCivvX6FvscIuh+v3rS7WErSuD4LPHIyQuLnzjkOyVLi/Ctoac5BI8SX
/HsXSi8hvxrPfvCLNELVmENYqH0R6V3xxmM+ygg7C1hXMv4VkhrT9ZOL/+k4
HhGVwHWjkCQ2581lxRshej6p0vJHAZFpr+d/dd4ITYPdM4GX8olDN6vR1jwj
bAzZJ57In0doIoxXZfmL83c+K8rekEu27Um0QpERLM2UB/eF5ZLfvRudbMuM
4FG9R6dy5DZJHtAKjVnsc7e7hHo+abhF6kaC7gy2G+Fhy/2OlpIbJF/68Xaf
N0ZgrLmt5+5/g6R4slf+fmuEiw3TTx4o3yBOX5JrefuMoCqpGBlfeZ38mSjq
0xkxQs6498b4xhyiMD3Ge2nOCPdHB5Y9XHmNCKhvvyC5YITHGSrP3nVlk/ng
kPUlLHRIqnT0nbmeTRpnl21tWErH+tyDTzN1sonr383UaV46Rrdqfd565CpJ
Y3cI3ClBR5D641UP2LLIgougapsUHRa1HLMWBZnE9Vnrrx1b6Wj7alj0xTaT
KJ7UDzaTp0P8QW/XpuIM0vBP+ihdg449RZruMt6XycyfH+G6pnTo1fPfWrIq
ney1L8Bjczr6qVqK9g1ppOa+G6u2JR3Oo/avT0amkYSQ7pOau+iLfVp9NWX6
IpGaropRcaLDT0b08PjoBbLrW1y8TCAdStFybklTqeSRhb5p7hE6VtRedDpR
lkrEi+e5pUPp0H/I+owzNJVMHPJNkDyxWH+AwJpJtlQSM26dJHqKjqwEQdHL
oimkbGTTRYEMOgotG6/2+CcREaNu2/NZdPCUWKz0JEkk4mayEH82Hc+iOvKC
uZOI6YGll1bfpEMhqjlE6HYi+fThcwZ3MR2rXis/bW08R9a8L7+2pJaOvCLu
JyenzpAE7uPH79XRESk9f+dI8hnCpUWz835Bx5n73pcuqZ4hS9LaV3Y205Er
0XbMPzyefLecDMntpuPPxlsWzmKnSetz6R0Wk3QoXo+lUrNiienPya1Lv9Ox
69opIzWrWNIgfo/9wU863lRymdtzxpIn4QYPNv+h45t8sqNSKJMUajpLzrAz
IE4KU8XdY8iZgstzmSIMvKnz6A+1iyIcvc6dOzcw8PnzQ74fAlEkmkumZLko
AzfcLh+Me3OSHHOvdDssycBxgzPN66xOEi+xN200RQYia3g3aFlEEvp5nttf
DBiISe+bZrtzgiw9HmmteZiBnd7bPPSNg0nZt/HZJwEMXLkzb3jp4xHi6mZ3
xfDIYrzuSxKfjx8htTsUPlsdY8DNP4HjTHkQiRbvCz8Uw0BFUUzu0e2BROUi
XfJXLAOnjn0r0+oIIJ9WlDUeO83AMqGXghJHAgjt1+m1cecY4FQRWnXyiT9h
b9C4k5POwByPGeva/YdJmfZ1C5kMBviD7RdKuQ8T1xLe6eIsBlqTjty5ed+P
1F4aRtXiPnarxTbqTUE/EuWT2tlVwEAaT6CC5QsfovTh3zHHYgZa1AYuyKr7
kA+7DooNlzLwO/YO76rb3mRxp+P94x4DT2NZEjakHCRL1kyx8tQw8FqGS+bi
OU9SGrvnVmotA10v3pyaEfAkzvN1puvqGfhqQ817lO1BaoYyL0o3MWAgeOVs
zlN34m/PqVPUzMDJx/3Hene5E/GWwA+qbQzUKjnH3J50IycrTeT0Oxmw8H5F
lZZ1I0py99pfdDGQkr1s84+WA+RDtniIRc9ifbHiweHBBwg1frZm3wADsoyc
Dq52V/L9n6vHpw+L+c7bcYjFuJJrga0rDw4xYBKYxLlF25WwOtyyC/nMgPwr
+UbFChdS3M63sDDOAEvlx3KTUBfiZHQiJ2aSAdrqE9w3iAupVrSZSP7JgHpU
WCz9hTOJYGOLLlhgYNexPXbmr/YTllyHog98xtjLK/tsnOZI6sbfHrqy1hgy
fxJEN9x0IGcULeX3ChnDIDO05tpSByJYqV/wZoMxLtNtCjZX7yXy9dJ3GqSN
od+puFpVyp7sHfp+s1DXGF+/vMre12q92D96ux3UM4aVc3lNiYQ1GfUekpSm
GeNdxOBZpVArEvDz7fVshjFOfD8yr7B5JznN9vhaqrUxtp2n7r45b07ui8Vm
HfUyxvGupHb2Tho5cYDFQd3HGLJvl1sNXtEntNzQDT99jWG5NPLHcx8qaVX0
zvAJMoaa5x6jFAGQUWJ5ySnCGAVy8TpOBuqkMKpx94YoY+y693pZuJQqCazX
F34XY4xDEVk9e9cok3/mamlW8cZgjeoXsZeQJwIO6y4YXjDGTelmj5W1G0lv
dqoNW7oxHENubpz9IUiuDa1cW33ZGH40d8WM/auJnA9Lqma2MbxM7f5c/PVD
l4sj92NKjvF/z9f9HzGgBag=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1550005#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
30tzE3gm0c1veSSNWb8oF5OPmMBHZZG9h3VT0dbQS9Z6Z03geMz8X7t9N1HZ
0tz6Sz8T4JRp3xk5fgO5utvdIZ8zgXLPlvAjD26g12aqX62Cmd8xq6J3t6vd
QBFSo2FnIk1AkkO7zMEsGbG36D7OyTABr2RsiG5hEirDPjBXyDQBnfKgjKCg
JORawvOrONsEFjlMuaxMktDrW9NQl2MCrlG6Uwk919AVr5uD756YgOz7eotZ
h0S0hW+RlbvBBCwIccY7Hsah0ugjuTdfm4C6hEFivmUcctloou1rNoFsWU0k
xxqHGqay0uTaTWBZXW416mgsulxFVSYMmsBR/kuYz5JXEatTrl3gVxO4Iy6Z
YvwyChX38v77N2cCBzVEuAMCopCz8cWcyAUTsOVPoukpRaF6NZv55BUT+FS/
VyzpdiQKZ2OLePLPBA6LZUnVXopALPlORRO8piD3u9SbdOYyapobOnNHwBTE
b23japW/jOLVLFQchEyh667XX5XpS2hvFeHJgJgpfAoiZT06dgmpNMs9bpEz
hZ9xb1kfHQ9HK5z3T0UqmkJwvNv5KNlw9IKxTwGvYgrsJieDX/WHIdLgrvxq
TVMQPHF2RfzrReQw9ePRUyNTuLEg1OyoHIqk5E+7e+JMYXddv/iZxhA0e3pK
Ro5oCkJiGJ6HR0KQ38rQg3smplBWG6J1NzkYxbLV3r9pbQpNo9fWQ/cFoeeS
0dlBp0yB5YSjy65L59FFNxYnHS9TaK5hOTytch4R8y+IrXibwkTNyMG6kXOo
W+10pleAKeBjflGTdc+hWWRxyzmcmY+xytHJJX8k6LQvlZxqCjv3PTqx4ueL
Ru7dtGHLMIXidccznrK+6P7ULoH626bwo0TZ5dLwWaTsxXJT754p6AS3C5bi
ziJiyNR1pUJTqNnCPWK0zwf53ipK4G0whY6VAuXEVU9UuXEruuG1KbjsvHqP
JcQTbThFXfJtNgUO95rK4S2eKPqAY0BvuykcVvaL3Sl0CrVHUrwvd5mCcm22
bOwjD8Q7q+mh0cuMZ9BbulrHA2UWcjomD5lCxbwle7jLSfSJ+9ch/HtTyOfZ
1aS3cQLJnv1k/mPEFLJYavOW0k+gYq0qouWEKUSnM5JyP7ijN3VuSrzfTYE1
9tQBoxg3xClpIduwYArd/Fvl/hi4IfMrWAnfH6YQ+Eernb7sit4b8/H3rjLX
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1550005#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       Opacity[0.5], 
       RectangleBox[{12.142857142857142`, 0}, {14.285714285714285`, 5000}], 
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[{14.285714285714285`, 0}, {20.142857142857142`, 5000}]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 1200}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Complete relaxation\"", "\"Major relaxation\"", 
       "\"Minor relaxation\"", "\"No relaxation\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.794156686526167*^9, 3.794156750752102*^9}, 
   3.794156821046194*^9, {3.7941569179010572`*^9, 3.79415692905227*^9}, {
   3.7941570014358*^9, 3.794157021743639*^9}, 3.794157098949112*^9, 
   3.794157571385209*^9},
 CellLabel->
  "Out[1490]=",ExpressionUUID->"a44185d1-9282-48e2-a85e-186b9aa9cca9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/Desktop/fig24_4.png\>\"", ",", " ", "fig24"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7941569890056*^9, 3.7941569934682283`*^9}, {
   3.794157083985305*^9, 3.794157084410201*^9}, {3.794157514896134*^9, 
   3.794157515125869*^9}, 3.794157557991055*^9, 
   3.794157755853054*^9},ExpressionUUID->"6fe38e47-880f-4b99-8f6a-\
df584e69265f"]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 3, 53, "Subtitle",ExpressionUUID->"ab566253-7f82-4d8d-9c27-65f1490a9767"],
Cell[774, 27, 8099, 183, 682, "Input",ExpressionUUID->"c73a97f1-c4ac-409c-a8f1-c3c6b1d45354"]
}, Closed]],
Cell[CellGroupData[{
Cell[8910, 215, 168, 3, 53, "Subtitle",ExpressionUUID->"9e70e588-eb8a-43d3-b82e-99cd3f899a76"],
Cell[9081, 220, 10069, 242, 598, "Input",ExpressionUUID->"355fd5ea-b022-4c67-a16e-8dd50237bcd8"]
}, Closed]],
Cell[CellGroupData[{
Cell[19187, 467, 168, 3, 53, "Subtitle",ExpressionUUID->"f9b2b6c1-c48f-45ed-b422-19985b256573"],
Cell[19358, 472, 1021, 25, 157, "Input",ExpressionUUID->"b7f8eae6-27e4-4dc9-9442-50a9d51159bc"],
Cell[CellGroupData[{
Cell[20404, 501, 608, 16, 30, "Input",ExpressionUUID->"ce57bf83-11a6-4e0d-b1fe-28ae86543ae0"],
Cell[21015, 519, 27444, 470, 229, "Output",ExpressionUUID->"9dd3c63d-fb79-4c01-9baa-e89a12f5c884"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48496, 994, 638, 17, 30, "Input",ExpressionUUID->"ce832def-0640-4355-a54e-e45dd74621c2"],
Cell[49137, 1013, 11523, 210, 239, "Output",ExpressionUUID->"15333ad0-4b85-415b-a700-fc072c2802d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60697, 1228, 654, 18, 30, "Input",ExpressionUUID->"efe35891-6b66-4397-9dac-012f512d9c48"],
Cell[61354, 1248, 2921, 67, 256, "Output",ExpressionUUID->"a69d3620-1cef-4b83-9254-1006f3557df7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[64324, 1321, 191, 3, 53, "Subtitle",ExpressionUUID->"53a90e1d-3063-4b11-a5b0-286804c8597f"],
Cell[64518, 1326, 6347, 140, 493, "Input",ExpressionUUID->"f840911c-3b8b-4d37-ac26-d9d0951dc3b9"],
Cell[70868, 1468, 1298, 26, 52, "Input",ExpressionUUID->"da3e4e88-5a33-4938-8882-0bba686d54df"]
}, Closed]],
Cell[CellGroupData[{
Cell[72203, 1499, 275, 6, 53, "Subtitle",ExpressionUUID->"7f6d5abb-2207-45b5-a326-b5e6a9ea60a2"],
Cell[72481, 1507, 15847, 401, 1039, "Input",ExpressionUUID->"69daacc6-b850-4531-8630-f7ac5da6f809"],
Cell[88331, 1910, 1158, 23, 52, "Input",ExpressionUUID->"207f130f-0dfa-427f-80c1-83b653dba7a8"],
Cell[89492, 1935, 1118, 23, 52, "Input",ExpressionUUID->"d41ddfb9-09a7-44f5-a5db-23895c757cc3"],
Cell[90613, 1960, 1143, 23, 52, "Input",ExpressionUUID->"98b1d7df-b31f-4ac5-a386-0559bcc1f1e5"],
Cell[91759, 1985, 1168, 23, 52, "Input",ExpressionUUID->"a86fa224-d13c-4be4-9414-bf0515416fa8"]
}, Closed]],
Cell[CellGroupData[{
Cell[92964, 2013, 217, 4, 53, "Subtitle",ExpressionUUID->"34b58635-6a7a-4de2-8aa1-e07ad2679f40"],
Cell[93184, 2019, 2056, 56, 430, "Input",ExpressionUUID->"6077a067-c04a-41d0-8a04-2dd515b36308"],
Cell[95243, 2077, 355, 7, 30, "Input",ExpressionUUID->"9770c67e-c44a-4ed7-b260-0d20a22adf79"],
Cell[CellGroupData[{
Cell[95623, 2088, 7369, 190, 472, "Input",ExpressionUUID->"366c8fbe-61c9-4926-9be6-1bd43ee5f98d"],
Cell[102995, 2280, 138907, 2433, 315, "Output",ExpressionUUID->"b5826447-e1ea-4abe-9c8f-ff39615a6251"]
}, Open  ]],
Cell[241917, 4716, 416, 9, 30, "Input",ExpressionUUID->"de896541-33a7-4e96-9053-a7cb64b47866"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242370, 4730, 213, 4, 53, "Subtitle",ExpressionUUID->"a4748fa9-bfd0-4be4-b241-0c9bdd7d8fb1"],
Cell[242586, 4736, 2078, 56, 430, "Input",ExpressionUUID->"cec1c990-48cb-40cc-8c77-2d8d87c9e8ee"],
Cell[244667, 4794, 357, 7, 30, "Input",ExpressionUUID->"53984cae-3fb1-42fd-b9ac-1c712a671e25"],
Cell[CellGroupData[{
Cell[245049, 4805, 7415, 190, 472, "Input",ExpressionUUID->"7176af74-4137-4423-8952-cadf0bfc9540"],
Cell[252467, 4997, 167673, 2905, 315, "Output",ExpressionUUID->"5d978949-5489-4527-960d-9e39f92a199c"]
}, Open  ]],
Cell[420155, 7905, 413, 9, 30, "Input",ExpressionUUID->"4a1538e0-7cb0-473e-8ae1-63970aa1a942"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420605, 7919, 215, 4, 53, "Subtitle",ExpressionUUID->"4611a5e5-72ba-49b9-a97e-fa81a28cb294"],
Cell[420823, 7925, 2081, 56, 430, "Input",ExpressionUUID->"be27365c-4d3e-4301-b38c-933cf9fefc5b"],
Cell[422907, 7983, 334, 7, 30, "Input",ExpressionUUID->"3186ae79-0397-47be-a7d8-7ba19e48fb32"],
Cell[CellGroupData[{
Cell[423266, 7994, 7366, 190, 472, "Input",ExpressionUUID->"29d0676a-06cb-494d-b0b1-a247cb6f66cc"],
Cell[430635, 8186, 169518, 2939, 315, "Output",ExpressionUUID->"a44185d1-9282-48e2-a85e-186b9aa9cca9"]
}, Open  ]],
Cell[600168, 11128, 412, 9, 30, "Input",ExpressionUUID->"6fe38e47-880f-4b99-8f6a-df584e69265f"]
}, Open  ]]
}
]
*)

