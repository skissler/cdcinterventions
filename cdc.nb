(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    608321,      11225]
NotebookOptionsPosition[    604169,      11151]
NotebookOutlinePosition[    604505,      11166]
CellTagsIndexPosition[    604462,      11163]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Set parameter values and define functions: ", "Subtitle",
 CellChangeTimes->{{3.7933924736210012`*^9, 
  3.793392483595557*^9}},ExpressionUUID->"ab566253-7f82-4d8d-9c27-\
65f1490a9767"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Seasonal", " ", "forcing"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"beta", "[", 
     RowBox[{
     "t_", ",", "amplitude_", ",", "baseline_", ",", "phival_", ",", 
      "gammaval_"}], "]"}], ":=", 
    RowBox[{"gammaval", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"amplitude", "/", "2"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "*", "Pi", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "phival"}], ")"}], "/", "52"}]}], "]"}]}], "+", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{"amplitude", "/", "2"}], "+", "baseline"}], ")"}]}], 
      ")"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pC", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "0.3", ")"}], "*", 
      RowBox[{"(", "0.044", ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "needing", " ", "critical", " ", "care"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pH", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "0.7", ")"}], "*", 
      RowBox[{"(", "0.044", ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "hospitalization", " ", "but", " ", "not", 
     " ", "critical", " ", "care"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pS", " ", "=", " ", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{"pC", " ", "+", " ", "pH"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "not", " ", "needing", " ", "care"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nuval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"4.6", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "progressing", " ", "to", " ", "infectiousness"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gammaval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"5", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "losing", " ", "infectiousness", " ", "or", " ", 
     "going", " ", "to", " ", "the", " ", "hospital"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deltaHval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"8", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "leaving", " ", "hospital", " ", "for", " ", 
     "those", " ", "not", " ", "going", " ", "to", " ", "critical", " ", 
     "care"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deltaCval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"6", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Rate", " ", "of", " ", "leaving", " ", "hospital", " ", "and", " ", 
     "going", " ", "to", " ", "critical", " ", "care"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xiCval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"10", "/", "7"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Rate", " ", "of", " ", "leaving", " ", "critical", " ", "care"}],
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cfr", " ", "=", " ", "0.01"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Set", " ", "overall", " ", "case", " ", "fatality", " ", "rate"}], 
     "*)"}], "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
    RowBox[{"amplitude", " ", "=", " ", "0.75"}], ";", " ", 
    RowBox[{"(*", "0.6", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"baseline", " ", "=", " ", "1.75"}], ";", " ", 
    RowBox[{"(*", "1.4", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"phival", "=", " ", 
     RowBox[{"-", "3.8"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kappaval", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"importtime", " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"31", "+", "29", "+", "11"}], ")"}], "/", "7"}], "]"}]}], 
    ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"importlength", " ", "=", " ", "0.5"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", 
     RowBox[{"2.5", "*", "52"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwindow", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "64"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwindowlong", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"52", "*", "2.5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fs", " ", "=", " ", "18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsz", "=", "400"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CCthreshold", " ", "=", " ", "0.000089"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7933824016469603`*^9, 3.793382433659927*^9}, {
   3.793392485521379*^9, 3.793392487521698*^9}, {3.79339263520496*^9, 
   3.793392714713307*^9}, {3.793393907287566*^9, 3.793394084370824*^9}, {
   3.793394124891756*^9, 3.793394206023793*^9}, {3.793394441118215*^9, 
   3.793394499802842*^9}, {3.793395056647203*^9, 3.793395072470455*^9}, {
   3.793395198721662*^9, 3.793395223075577*^9}, {3.793395308028611*^9, 
   3.793395309601819*^9}, {3.793395347946869*^9, 3.7933953670198517`*^9}, {
   3.7933954298851843`*^9, 3.7933954353875437`*^9}, 3.793395884942059*^9, {
   3.793396053807115*^9, 3.7933960594453506`*^9}, 3.793396128405074*^9, {
   3.793396161221387*^9, 3.7933961906697693`*^9}, 3.793396465160309*^9, {
   3.793396504452037*^9, 3.793396508265297*^9}, {3.793397487135983*^9, 
   3.793397487468416*^9}, {3.793397550483906*^9, 3.793397645934012*^9}, {
   3.793397959099144*^9, 3.793397965523966*^9}, {3.793398010877906*^9, 
   3.793398011155649*^9}, {3.7933981065674*^9, 3.793398113113698*^9}, {
   3.793398152790327*^9, 3.793398153271265*^9}, {3.793400392723693*^9, 
   3.793400405980054*^9}, {3.793435391281775*^9, 3.793435402007841*^9}, 
   3.793435658448827*^9, 3.793442193613069*^9, {3.793529326303412*^9, 
   3.793529336159178*^9}, {3.793529752701681*^9, 3.793529753185114*^9}, {
   3.793529799203206*^9, 3.7935299163981953`*^9}, {3.793530266700755*^9, 
   3.793530280587278*^9}, {3.793530881386142*^9, 3.793530927344369*^9}, {
   3.793538235163342*^9, 3.793538260139104*^9}, {3.793628653007725*^9, 
   3.7936286716887293`*^9}, {3.793631355447322*^9, 3.79363135877636*^9}, {
   3.79363511837593*^9, 3.793635121678879*^9}, {3.793640210320211*^9, 
   3.793640212976606*^9}, {3.793717624257094*^9, 3.7937176364463377`*^9}, {
   3.7937181586830263`*^9, 3.7937181600631847`*^9}, {3.79371824819411*^9, 
   3.7937182498865433`*^9}, {3.793719529331539*^9, 3.793719531371969*^9}, {
   3.7937216030483313`*^9, 3.793721603363948*^9}, {3.793721668993072*^9, 
   3.793721669040846*^9}, 3.793721753550395*^9, {3.793721806725835*^9, 
   3.793721840662491*^9}, {3.793722362116454*^9, 3.793722390707917*^9}, {
   3.793722820856447*^9, 3.793722828478895*^9}, {3.793723814865608*^9, 
   3.793723815033659*^9}, {3.793727331986631*^9, 3.793727333763685*^9}, {
   3.793728590541758*^9, 3.793728619998988*^9}, 3.793728739167693*^9, {
   3.7937297957055073`*^9, 3.7937298001508904`*^9}, {3.793800746382456*^9, 
   3.793800748703477*^9}, {3.793802803238756*^9, 3.793802807803392*^9}, {
   3.793803803399664*^9, 3.793803805199087*^9}, {3.793804387810821*^9, 
   3.7938043894573793`*^9}, {3.793804731306602*^9, 3.793804732769477*^9}, {
   3.794143114426158*^9, 3.794143146118546*^9}, {3.794147858328751*^9, 
   3.794147867347603*^9}, {3.794147922766865*^9, 3.794147924113537*^9}},
 CellLabel->
  "In[952]:=",ExpressionUUID->"c73a97f1-c4ac-409c-a8f1-c3c6b1d45354"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define model function:", "Subtitle",
 CellChangeTimes->{{3.794143066339645*^9, 
  3.794143069084725*^9}},ExpressionUUID->"9e70e588-eb8a-43d3-b82e-\
99cd3f899a76"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"runmodel", "[", "]"}], ":=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cuminf", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"nuval", "*", 
         RowBox[{"Eq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cumhosp", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cumcc", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaCval", "*", 
         RowBox[{"HCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"cumm", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"0.5", "*", "xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{"0.078", "*", "deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "relaxtime"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", " ", 
          RowBox[{"1", "-", "npifactorrelaxed"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"cuminf", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"cumhosp", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"cumcc", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"cumm", "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi", 
       ",", " ", "cuminf", ",", " ", "cumhosp", ",", " ", "cumcc", ",", " ", 
       "cumm"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.794143072067564*^9, 3.7941430737560873`*^9}, {
  3.794144610723529*^9, 3.794144644262239*^9}, {3.794147410694254*^9, 
  3.794147432654071*^9}, {3.7941545761916037`*^9, 3.7941546449452887`*^9}, {
  3.7941552429780807`*^9, 3.794155297968667*^9}, {3.794155358463624*^9, 
  3.7941553651629267`*^9}},
 CellLabel->
  "In[999]:=",ExpressionUUID->"355fd5ea-b022-4c67-a16e-8dd50237bcd8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Run a scenario to test:", "Subtitle",
 CellChangeTimes->{{3.79414309216047*^9, 
  3.794143094553767*^9}},ExpressionUUID->"f9b2b6c1-c48f-45ed-b422-\
19985b256573"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7941430967716913`*^9, 3.794143102279395*^9}, {
  3.794147398878829*^9, 3.794147399059188*^9}, {3.794147434420947*^9, 
  3.794147506530346*^9}},
 CellLabel->
  "In[973]:=",ExpressionUUID->"b7f8eae6-27e4-4dc9-9442-50a9d51159bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"CCq", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "CCthreshold", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7941437886534863`*^9, 3.794143830838982*^9}},
 CellLabel->
  "In[980]:=",ExpressionUUID->"ce57bf83-11a6-4e0d-b1fe-28ae86543ae0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxElnc41t8f/xEqI4UKLdl7ZXPe75e9ua3bzt4NlcyyE7L3Tkg2CVHeojQR
qSgVUiGpZGX3u3/X9ft9vvc/9/W4Xuc8z/P1POdc73Pc5ayZOw0VFdUzWiqq
//s/Ti/11lPtCUb1/34staM/tX3K8f/PDdSMvlw+zf9xuFiZMK1Pz388rfZ7
15r3m/+4wDAraNH763+8bOrVOO+99B+XvjE1/O1NC/+fiTHH821a+//jnTuX
grvyj/3H2NNBFq1H/+OAq3U3n//4Hy9E3/HyPsr9HzvRns48f/Z/jOgmfsTs
O/4fr9A/ya+y5PmPWT2bv/3w/h+LPy2Vkgj7H7tdDX/SVPE/fr1TaeH+3/9x
465avZd5vP9xn1d+5t76//H0s7hxs4f/46Px7hdHZv/HibuP3ZhQ4fuPK72Z
53hIFD7h7/up2QU9er4h7+7GB8lrMzYeT8bQmPBs5K0gPhCb4Rxmk92Lrce/
6/ueyAfss15x8tuS2IHZJwfFbvABXYD0k8eftTAZ/RaXMy18kFCpl54iZo0Z
V5fVNT7nA8eWrHgBGU/MmyF9deETH6gLfm3e5vHHDhRJjcwt8sEK9iro7vsI
rEdyoGVqNz9YlebyaLsnYOcens6cOMYPILInsO1GBnbUkunCqBw/tGrf3TCi
LcR6p6tN3xjwA4cn0dJhVoYFhehJvXTmhz9xfGtvpqswfuaZPc8C+eGGF78o
/GnEhq7H/uxO4gfJ7WdTvPUtWLgMf9/9Mn5wi2/3dpO9j4k9flTd0s4PiueM
L2c97sLeW7nENwzwA/8fK9+3dj1Y7CyVV9U3foixTrw7cPIZduLyde2yDX7Y
vhPn+mCgD5tgwfiL9gmA28cCxtsjg5iyXOhkKhKAwr3xyfQnh7Hpp5zdCeYC
MHvFRSzZ/z2Wadt2PcZbAK79qjlZ8PAj9it82T4oSwDOXzwyGEEziRWwZqqc
rxEAkz0Po7M2v2C6N2W4TnULwJGrGTH6rFNY2YuzI44/BSBjOtm6OnUWIzns
abXZIQgf3plsBK/NYdu/azPNOQXhAsnaVCrsN2a9f9ZUR0sQSDLFT2jPLGBM
Tm59EkWCMLL7853UoFWsfYGmRuiOIIh+fNShw72OeVy5Ec/zXBDI75KLjUY2
sK7qMe0Dy4IwJHjw4UX/f9hpdJl/L6MQBGf6DxbXUeFcg4doGY4LQe+rifNm
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
04ZxxoILYVOzNjzMHnjYk7t6jPE/unF/IQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$1311182#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{{}, {0.000089}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7941438122414618`*^9, 3.794143831075589*^9}, 
   3.7941442535004997`*^9, {3.794147459974352*^9, 3.794147514504736*^9}, 
   3.794154647789783*^9, 3.794154694243753*^9},
 CellLabel->
  "Out[980]=",ExpressionUUID->"9dd3c63d-fb79-4c01-9baa-e89a12f5c884"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cuminf", "[", "t", "]"}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "CCthreshold", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7941475997545652`*^9, 3.794147620446661*^9}},
 CellLabel->
  "In[981]:=",ExpressionUUID->"ce832def-0640-4355-a54e-e45dd74621c2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
/w9R3Z5G
       "]]},
     Annotation[#, "Charting`Private`Tag$1311234#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{{}, {0.000089}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7941476004741287`*^9, 3.794147620786591*^9}, 
   3.7941546997490387`*^9},
 CellLabel->
  "Out[981]=",ExpressionUUID->"15333ad0-4b85-415b-a700-fc072c2802d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"npi", "[", "t", "]"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "CCthreshold", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.79414752063418*^9, 3.794147527027906*^9}},
 CellLabel->
  "In[982]:=",ExpressionUUID->"efe35891-6b66-4397-9dac-012f512d9c48"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF0nssFAAcB/BTRK6HZyusujvyiFPqxHEPJ4/qvE8u8pg8kqmYlJCWTpwS
TXFnNUoXIipUlMgmyoq81nkTaVNaOGYepc3v991+++2z33+/348UeMY9eA2B
QDj2r1b6wLo9naE2jUzC//xmzbidLP8dNs1a9f0ON+5kmDx71W/6/aNe2mmC
FRWnY+vEO8CydY3iIk8yOEz51tyfPl0wnRY3nMHYBd4QENRCvasPDhHkp5Kb
0XXF/fZbZtARjAQ9FaIBWKtVW16ZhG4KrB5eewB9boZfv8g1YItFK/nKMmK3
W40WoPuFTlUtC2iHnZzHuSWG4PJK87xTx43AXtuHlC4RdoOXktMiMwvQ7jWD
erky9MNJmrTA0RhcbX3EQd8X/Sk1oKIoEj3SdY5knIyeo6SlPxGv+geLXFt5
8nkDmssf5LycQIsNaRoD+6ng7/OpowoJpmDprM4ymbwXzP4TTWwQmIEjBomX
ldk08PLiO9ILgTk4U/tiw4mPB8AhQaqJKbNo69JCeinFAhyZmB5WRbWAe0jc
onPeWqJ7Kd7vmw6iVWUsWZsLOl5M5H0LRo8xu5/K4tCZrQqG7A60deD+vFRj
S5wLMtN1+tBjhb/iy27Q8f/uaNj4dVuB9yXRFTaSGODBoxE/Ih+xwP7M9vwg
Mxvwh/M+5qJYDthJOqbg0GsLvvwqOOmChR3YlOU6bpZgD579yUgJ6XMAW9lm
b6bsOgTOrp9q4wsPgx+8tuWojR8B7/ZbFvGoTuCPBrXGKhnO4O+icQlP6gKW
2iaFbrrpCuZ+Vt9WxnQDL5h4M7OG0RYkspx5lju45cuIWMTxAN/z8im0GUUv
nOV5SG7zwDm+a6Nc6J7g60olodU96A2OXfNDwqO4T+8qOWeqF1hzzVZJzAD6
Xrxp7chVPjixkl2qpn8MPHGl3XKpC51N0aFT47zBn/hj3VomPmBfbjG3uQdt
pK5Le33pODjp9I6acFNfsNbd1gr/DvR6YZxAM8YPfJVYOHVNzx/MCBB2MpvR
muHiZy5qAWCi5Mz8Mgv9F2b48tA=
       "]]},
     Annotation[#, "Charting`Private`Tag$1311285#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{{}, {0.000089}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7941475217108*^9, 3.794147527257716*^9}, 
   3.7941547005263233`*^9},
 CellLabel->
  "Out[982]=",ExpressionUUID->"a69d3620-1cef-4b83-9254-1006f3557df7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Run a bunch of scenarios and gather output:", "Subtitle",
 CellChangeTimes->{{3.794143103723467*^9, 3.7941431078508043`*^9}, {
   3.794149597320745*^9, 3.7941496001314297`*^9}, 
   3.794158607633795*^9},ExpressionUUID->"7f6d5abb-2207-45b5-a326-\
b5e6a9ea60a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hosp", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"crit", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mort", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"npifactorrelaxed", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol00r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npifactorrelaxed", "=", "0.2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol02r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npifactorrelaxed", "=", "0.4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol04r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npifactorrelaxed", "=", "0.6"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol06r", "=", 
       RowBox[{"runmodel", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"itot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"itot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"itot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"itot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cuminf", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"htot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"htot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"htot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"htot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumhosp", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ctot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ctot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ctot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ctot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumcc", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"mtot00r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol00r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mtot02r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol02r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mtot04r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol04r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mtot06r", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"cumm", "[", 
             RowBox[{"npistart", "+", "w"}], " ", "]"}], "/.", "sol06r"}], 
           ")"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",",
          " ", 
         RowBox[{"{", 
          RowBox[{"w", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "4", ",", "8", ",", "12", ",", 
             RowBox[{"tmax", "-", "npistart"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"inf", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"inf", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{"10000", "*", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "itot06r", ",", " ", "itot04r", ",", " ", "itot02r", ",", 
                  " ", "itot00r"}], "}"}], "\[Transpose]"}], "]"}]}], "]"}]}],
            "]"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hosp", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"hosp", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"10000", "*", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "htot06r", ",", " ", "htot04r", ",", " ", "htot02r", ",", 
                   " ", "htot00r"}], "}"}], "\[Transpose]"}], "]"}]}], ",", 
              "0.1"}], "]"}]}], "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crit", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"crit", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"10000", "*", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ctot06r", ",", " ", "ctot04r", ",", " ", "ctot02r", ",", 
                   " ", "ctot00r"}], "}"}], "\[Transpose]"}], "]"}]}], ",", 
              "0.01"}], "]"}]}], "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mort", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"mort", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"baseline", ",", " ", 
              RowBox[{"npiend", "-", "npistart"}]}], "}"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"10000", "*", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "mtot06r", ",", " ", "mtot04r", ",", " ", "mtot02r", ",", 
                   " ", "mtot00r"}], "}"}], "\[Transpose]"}], "]"}]}], ",", 
              "0.01"}], "]"}]}], "]"}], "}"}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"npiend", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"npistart", "+", "4"}], ",", " ", 
         RowBox[{"npistart", "+", "8"}], ",", " ", 
         RowBox[{"npistart", "+", "12"}]}], "}"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"baseline", ",", "1.4", ",", " ", "3.4", ",", " ", "0.2"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0D1IAgEAhuFDs0IQgqCESM6hqYuKpqwhySyOIIlokCBKqlOSMiiMggal
wSHISIK0NAxNSPsbDFTELAWpIHJIEBokCTKtcOgH6T6Hl2d/xZNzw1McgiAa
2GDoUPgckb1Jz0K3L5AucXOwXjRShOdS+gemRMvEFWsvNcqDJrmnCrr9ug5Y
mSJ7INUlkEGL3d8PM9TTIJzmeRTwT6gZh91ec9n4qVIF68Y4amgNR7Qw0Hm/
CAsPEhPMXwY34UG8dRduPTJWmOY3uuHEqqvsklpPRlkvEi0UVOSC7XCDqZbD
VMBHQ6O9oISztb8z8FNQ1EDmrmkeFgyyFUitJQ3QkbBZIHlNWmHb/l5Zp+vI
Dun1sAvavFofLC2o/FC/MxSA3yfKKNweyDtvWD8kyWPolhuz0EGnX2HNV/M7
jGWyRWgWq7kx/O7jV8B/9wfoBw==
  "],
 CellLabel->
  "In[1039]:=",ExpressionUUID->"69daacc6-b850-4531-8630-f7ac5da6f809"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
        "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
        ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
        "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
        ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
        "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
        ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
        "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
        "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "}"}], ",", 
     "inf"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.7941505859425163`*^9, 3.7941505860937634`*^9}, {
   3.7941509512397213`*^9, 3.7941509533300877`*^9}, {3.794151014040607*^9, 
   3.7941511161667223`*^9}, {3.794151160252921*^9, 3.794151178147462*^9}, 
   3.794155446025796*^9},
 CellLabel->
  "In[1049]:=",ExpressionUUID->"207f130f-0dfa-427f-80c1-83b653dba7a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
         "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
         ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
         "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
         ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
         "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
         ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
         "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
         "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "*)"}], 
      "}"}], ",", "hosp"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.794155452972054*^9, 3.7941554532386427`*^9}, {
  3.794155517650547*^9, 3.794155580081493*^9}, {3.794155618544218*^9, 
  3.794155647543392*^9}},
 CellLabel->
  "In[1060]:=",ExpressionUUID->"d41ddfb9-09a7-44f5-a5db-23895c757cc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
         "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
         ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
         "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
         ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
         "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
         ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
         "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
         "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "*)"}], 
      "}"}], ",", "crit"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.794155457270616*^9, 3.794155462047716*^9}, {
   3.794155536670794*^9, 3.7941555695823298`*^9}, {3.79415565241782*^9, 
   3.7941556536367683`*^9}, 3.794155684289892*^9},
 CellLabel->
  "In[1062]:=",ExpressionUUID->"98b1d7df-b31f-4ac5-a386-0559bcc1f1e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
        "\"\<R0\>\"", ",", "\"\<Length\>\"", ",", "\"\<w0:none\>\"", ",", 
         "\"\<w0:weak\>\"", ",", "\"\<w0:strong\>\"", ",", "\"\<w0:full\>\"", 
         ",", "\"\<w4:none\>\"", ",", "\"\<w4:weak\>\"", ",", 
         "\"\<w4:strong\>\"", ",", "\"\<w4:full\>\"", ",", "\"\<w8:none\>\"", 
         ",", "\"\<w8:weak\>\"", ",", "\"\<w8:strong\>\"", ",", 
         "\"\<w8:full\>\"", ",", "\"\<w12:none\>\"", ",", "\"\<w12:weak\>\"", 
         ",", "\"\<w12:strong\>\"", ",", "\"\<w12:full\>\"", ",", 
         "\"\<winf:none\>\"", ",", "\"\<winf:weak\>\"", ",", 
         "\"\<winf:strong\>\"", ",", "\"\<winf:full\>\""}], "}"}], "*)"}], 
      "}"}], ",", "mort"}], "]"}], "//", "TableForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.794155460248571*^9, 3.7941554638996162`*^9}, 
   3.794155512999715*^9, {3.7941555708977833`*^9, 3.7941555760005713`*^9}, {
   3.794155689100359*^9, 3.794155690276033*^9}, 3.794155868216895*^9},
 CellLabel->
  "In[1064]:=",ExpressionUUID->"a86fa224-d13c-4be4-9414-bf0515416fa8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting R0 = 1.4:", "Subtitle",
 CellChangeTimes->{{3.794156090803885*^9, 3.7941560917658577`*^9}, {
  3.794156834506391*^9, 
  3.7941568366275263`*^9}},ExpressionUUID->"34b58635-6a7a-4de2-8aa1-\
e07ad2679f40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", "+", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseline", " ", "=", " ", "1.4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol06", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.4"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol04", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol02", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol00", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.794156106672036*^9, {3.794156141078863*^9, 3.794156173417129*^9}, {
   3.7941563630521793`*^9, 3.7941564001285667`*^9}, {3.7941564393207912`*^9, 
   3.794156439386325*^9}, 3.794157544649518*^9, 3.79415774267905*^9},
 CellLabel->
  "In[1492]:=",ExpressionUUID->"6077a067-c04a-41d0-8a04-2dd515b36308"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prmax", " ", "=", " ", "1200"}], ";"}]], "Input",
 CellChangeTimes->{{3.794156277514061*^9, 3.794156278914998*^9}, {
   3.794156331056059*^9, 3.794156348490449*^9}, {3.7941568963547287`*^9, 
   3.794156896416*^9}, 3.794156952372532*^9},
 CellLabel->
  "In[1507]:=",ExpressionUUID->"9770c67e-c44a-4ed7-b260-0d20a22adf79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig14", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol06"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol06"}], "]"}]}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Black", ",", " ", "Red", ",", " ", "Blue", ",", " ", "Green", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Black", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Complete relaxation\>\"", ",", " ", "\"\<Major relaxation\>\"", 
       ",", "\"\<Minor relaxation\>\"", ",", " ", "\"\<No relaxation\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"npistart", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "5000"}], "}"}]}], "]"}], ",", 
       " ", "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"npiend", ",", "5000"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.794156672417858*^9, 3.794156750149516*^9}, {
  3.794156816678644*^9, 3.794156820239547*^9}, {3.794157010967602*^9, 
  3.7941570123636627`*^9}},
 CellLabel->
  "In[1508]:=",ExpressionUUID->"366c8fbe-61c9-4926-9be6-1bd43ee5f98d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
vYk4I7z++/KyDRI5RlKe8DYR/wOWi+hp
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1551588#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF13k8VF/cB3AiskcoJPs+w5ixL3M/Y9+3SIsUyTZkLVIoZamUkqRCSiEK
hWhDEipaEMqSiKgklbThmef1ep5f88fM6/26Z8459/s993vOlfMNc9u+hI2N
LZv19b+/dtsnXjRO1tDZ/u/DaS4Z/kYii/h/087n5FZJXPrP9h29N/Ikqv+z
p9/cvUyJ5v88qJVqflSi+z8XiDmnHJZ495/3L6tSOSTx/T+v33Ch4ssMJ/7f
fIv7vazXCP1nJdfPEw+OiP7nmKeGRM53if+8slp4iJ1d5j97pf9xfyf+zxf9
xp60kP6ZJHbr1pH1/2y2a+spscp/1sv1LMrSkv3PPt5Fm0uG/vmgndSZM5P/
XKR3vPvw93/+JBhnH8or9593NTgaUvX+OV12VvTu0X++OWLe/sxE/j/32Oyf
OWr9zz/K68Ud3P5Zf4+hT1vAP9et0PrRmPnPtywkZW9M/PPrUk/L8G///Hv5
qWDNhX82GhSqKV2h8J9v71xqV0j/57tFX6Kysv55gF/zjNv5f/4byaxfXvrP
psT4sqMN/1zf25+X/OGfh0wlHpjP/vNC4boJdjbF/0wPf0FNEPtn7x7B9Say
/5xg4hD/W/2f8y8eulin+88Ny1pbd+Gfh3dwTunYK0LStHmFhIY7wfaSIfLN
QxExFeL5GR3FhKxxov71rYpQL2qSLa57QODCXa8wpiLmN4zkjSR0E1u5f+8n
71JElb86/ZT7W2JfqH7xx32KOB2nYRey4gNR0BXdfuWIIjLcV64r1/5KNBre
mAnIVgRX8ZPLO8V/EsPnp8WVLyiiWCpCIO7aAsHGRTZ5V6aIVV5vpoJ/LIFs
SLDPxZuKmJLbcDtgjAuMzuKUrfcVMV28wWS3DB98DcbK1rQr4jPx3S2tQAhJ
+fIvBnoUIbDFZ3wdVQRNwXlSGz4pQqLvxS1x95WommQyvX8ookZMMSFrWAKX
Ao3ubGNTwsXLDx7dOLgayf69G3eIKmHRLtPnBrccbHyFzx4wUYLoQ6E91Twq
MHz7ZjLNSglvKp+9zitQhfrWcsNjLkr449V+rFlfHfze9q9y/JQw8JRHOUCD
jPkBCbX8HUq4nJpLDz2kic+bJmILY5XwkJtTOrxHC882JK8qT1fCgyJFnSZZ
bTT2rQ2sylbCkMPmwYZKbVR6ytfVFSjBg+Q7pmpERaZHg+eDaiVcOkYSbzei
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
msJap5UfToY9puD409I/+UesEfX+5vWAixSod7aKdpyyhkkHh0zwWgq8X7Fb
q5VaI+8n/6xVlBZa3u8se9tpjWfHtSlpJDKuqt7TDn1pja1G/OcSeMg4GcRZ
97PXGk3x4xV54yRs/ZjZLDRojZt2UmoeF0j4/bli0PS9NaptlmddWkWC1o9J
obN/rHFFO072vKAGcji9o90UbcAtIdX0WlyNdX5YqftC2QYDT4qSNX6pwu/B
81lnNRtwaAX75/ergpJkHuOoaYNARZdPkwWqaFtUjbMxsMGO/AtLRMmqmPv9
LZHuYAPTZSYSWfYqWDdz6Ih6tA0aOO+LORYo4a6LucOVXTagn5nTz01Rgnzl
X37V3az/i8ut5glVwucdYceUEmxw1FX+srGREpI/uZ+QTbNB5u5qMbYeRVS/
lzktnmuD0uPuOZMiilgxVHNxSbMNXGy37WNekMcx/vj42hYbUF7FpHsckgev
scX6kEc2uBD3UcI7Qh5LcjoFep6yxk+PUHjMkMdX1+nYK69sMC1z8DXPOzk8
f6jq7DJtAxUzZhO3phzSr537kyfJqkPzRr1y5TJYNuDb4yZtiyOft9wSSJbB
QV7169yytjiQdoND00sGewLq/COUbCGQSGvh5ZNBsNzLFxYUW+xS/5lIZq6B
zSnBko+Wtgi8nuI2rCONpfH73Q0jbKF1qNra+pMkqmc+/WqIskWQ8bTOmSeS
8PNff95qly3+1rWJiJRJotlZ68PaPbaQlGj/HBMsiYPyg4k7km2Rsw+OQh8l
wNlmUFZ4xhbvUtFh+W0Vlqz4wi7YZIvQ5Liui2tW4kbqpuKsZlucD63VTVyy
Er5/WxykWm1h0bYuJH5cHE1jeadV222hnOnyeKhcHEl19mTzHlv8vGQUqc0Q
B7t38frYD7aIIRndnmOKge2Kd8WIiB3WLKjl875agZZPvTvOi9mBZ7+6UV/9
CqRTXDW9VtnhQRV/UNulFVhZZ37tpbQdshQde4QiVkCzVbWsTdUOt8TPO+nx
rYDX2NeicrodikyLjGstRXBLLjU/LtgOS+QivOdeLEfCdjZv/VA7PN9afbrq
znJYXNkt/T3MDkt7zO8eubwczykhuaE77bBH4U1jxu7lmCBcz27dZwdZ9+eq
X+SXQ9xbKtsq2w63lzwUUv8hiMizFUdFmuzgfj3sqWYiP2r/nk1tarYDJb/n
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
wt/rL4j/AQNri+4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1551588#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxFmHk41O/3/4VSEpEl4p29wQxjl+31HPvYiVBSyTqWEFoRRSohlVSUUoQs
yVYJIUqRLaVs2UIoqVSo33yu6/et+WPmelyve859nuc+933O/ZJw32vvycrC
wnKU+fW/X3PP8fbaiTJ9lv//YTcUCRoQPk/8H6teS0u/J3zzL1u0vC7JEC79
y04e849ShBv+cp/SCcMzwl1/OVPAJu6U8Mhfjl55b9NJ4a9/2dnletHnWXb8
H6/+E+1q+h/PX5axmxmvP83/l/e3bibSvgr/ZaFS3v5lyzb+ZdeEBYcRwX98
w2P0eSP5H5MF7t8/7fyPDcJ3XRAo/sca6U7Z55XE//Jut+wdt/v/8XHzDZcu
TfzjbI3krlNf//EU9yGLAE6JvxxeY7VZReMfJ4h/468684/LhwxfvNSV/Mvd
ZtGzZ0z/8ffCakFL+3+seXjz7qfe/7hyndL32pR/fN9IRLxk/B+/zXMyDpr7
x7/WXmAo/v7H2n08ZXnrpP7yg7Dl5ln6/7gq+/O+8+f/cS+X4iX7a/94McSv
em3eP9YjxlaeqfnH1a/fZcRO/uN+PeF6w2//+HfW1vFlLNJ/WT+oXSVS4B+7
dXM764r/40hdy4hf8v/46o2TNyrV/3HNyqamcPzjwUD2aTULaYjoNawTVnAg
WF7R+OYcpbG/SPBqUksOIa4TpXl3lzTks+vEcyrrCVyvct3rJ40ll6GMocgu
YhfHr2hKuDTuecnrX3B4TxwN0Mz5eFQaFw8pmPuvmyQyO0Nf5J6WRpKD0NZC
5S9E7eaSWe9UaazIeX4rTPAHMXjtk6DsdWnkbAhec6jgN8GygqI7ki+N9a4D
04zvrBD3Z+y+US6NaQmXB96jK0DryInb9Vgan3JcdA9uXA13rdH8/15IY4b4
ah+fyYOYq5Ltvd3SWLNz99hWFT7UMTI2uExJQ/hN+31BByHcm/Dzc/sujTIB
6cjzg8K46aP9cA+LDG7cqn9WclwUsV6vtwXyy+CPecruEg4JmLnzXj6mKwP+
JzyHS1dtwub3AxPxJjIYKH75NiOTBPldhZsTbWWw4PoisUFTHlxuFj1pHjLo
bV0l661AwVKvsNzVQBncOpGuH3BSETPbxw9kHZDBEw52saBuJbx0iV1fmCCD
+mxptTpxZdS+2eJzL1UG/ZY7+mqKlVHsJFlZmSkDR7L7KElbBSmONU71pTK4
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
74iLG1d/+/PHBpp10/P2oe+I/wfkwOPg
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1551588#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
TubPKOX/AZdVsco=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1551588#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
FZGF9Wk/9HGO+b1O9B9vBKg/6V1laYDDFKGkQGMvFJp7ZFfNGWD9gmKbdd0e
zH4R5BpNM8RJ/K7QUd6Jsm2mzBeMjDCY48y3ZdEJCZYVccKmRtC/rLm/9KMT
3Axl2W6YGyH9Bv8y2pzApLZ6bbmNEeBcmBaT5wQbnjb+Hhcj3OzYlJ9j64Sx
105ywoFG8J08F+Fx0xGCNt72eReNwB+jzbzK0wHRZnHXSkfJ/4VWIJxlK964
+7pRxo1wmM+FuXzGHhL7LQXufDGCuusiw4oP9mjK4T6f+90I87MVeU2V9uBd
yoo/t2iEXVw/d/88aI+bd8sDQziMcXkzh2HNNzu85hnTVtAwhuSOa/dcm20h
1m/RkxtnjAjlvGq7eUsk1WoXOSYYo1VybXN7tyVmChTiWZONEdnxdENIhSVq
wzjUA1KNscDKrsVyyBKebG9SVK8Yo+h4rVbiHwvcVHM1fVZsjPWd74sX11hA
KcmnfOC9MYQuaqzkJ8yQFuxyOnXAGO4nNwpIbDbDXwdzT4MPxhispmRas5rh
tag8T/6oMSbDl0tm2kwRWvYtMHDaGOKsVmEnPExROrRfcnmlCYoau/nvnzKB
lmbsBQFVE5iUr0hs/GmELg8BjSx1E+zuyTv7st8I+87c696kaYLzG97e/fDc
CHc+9QjK6JggcK396LYMI2y8oJijYWKCT0cbK/UIIzBNd93dtt0Ez1Weaoil
GOLVbdnG08dNsO5V3NwDPQP4dlX5cseZ4OjuUPEdcgZgYXJgv3jSBJzFNinr
+Q2g53rUOpPUlZhZMtU8qY9i1o6O22kmyIhdlJQh6/qCZ9RQ420TOLsJEeeZ
9OG2se0XY4cJOEKuWxSUkHtIIKzsSacJuAIcDJtPEXi2ji90P/ne4+i8KlKY
3PtSq3aMjfWb4PaeKRY9AQJTP0a72sZMkNXScSwmRg/HX/4pyfpjgtVxWoLj
rrq4Ga4URJMzRX24vZemrDa2B7fL/lAwxa8z0y2HWbWx1j/80x1lU5SZvewY
/aSFsF2P3TZtMUWy6zUJSq4WtC1MLFlhikYpz95kUS20irrLdDqS1/9t+WAq
SsNs0+nhkBhTCD1qtRigaaJvdafv8glTaAgzL13dqIlaK+Gpk/GmeC7y/dgR
Zk2ktt5euppsCoU3hzPPt2hA7k0jb8tFU5gdm2YW26sB915GU9nbpjDUS5m6
eX4Lnn/eX/jhjSkOm93fXbxKHXdkKlUCO03x5zk3y/y0Gs77sVQsdJtivpKy
0eWdGnZ/OVfP2W8KH8qYvV+hGha/FfXrfjYF08ep2XobNSjPjXNeXjIFEbgg
aXlZFeks7uFbJcxgvzcCI4Yq5PPa+i3tUmYoyIh3KlJWgWfd61lbWTNMncsY
PSukAspxw4PWSmaolRTbePkHBS/+yhwyo5ohiPInuTSPgvnFH9F6VmYY+iUX
+IedAqfpxGS5cDNcD3luebVVEU/tDK1uHTDDn7tjB2MKFSFevLxGJtIML8yP
mp1KUMS3oOAzkkfN0PX+svoGQ0XEfXU4uynBDE4STxtZHiug9LPoJf5MM8wI
lG1dWySPdQNl15nqzZAoO7CuoVQWZ9YcOfLwuRmUCyVDn56XBbu2kQv9pRny
Cvbk94XJgin9zdquVjNcW1HZlaYiixn7qYhbvWaQXCHPOFksg9cNMrZ2U2Y4
PVEyP18ujVN3ryxlCZrDoi41Y8+gJNj6PLq2ipjjRBGuidRJIpZd7j7rJnNM
Z89y/s6XxGGfCu9QSXPcCktMlAyWhL9YZ7sRxRy/y9gMNjBKwuwix80vxuZI
ujHjvVteAiuOxDjQQs0x0CaR7pMujtLpr7+q95kj3U+UbSBGHJ7eLtdMDpjj
Ru1fzuAAcdTbKk9sO2wOprru0CE9ccSK90cHxZnjifeIzu9RMbC8oBbmZpjD
cS7eaoWOGJjWfWfkqDVHgppOEu+0KB6c3FFwod4cz1p8vahNovBYfm4l1GiO
DfZ5MUm5oqj9lHVJptkcu5jcb1c4ieJ4haWiYZc5KjL2L2hUbwSje4FLxAQZ
jylGz9PpImC45V40zEPOuVdDb3QChPD8a3fQNT4L2MpWPFo0EcIpir2S2wYL
FBjm538WF8L6CsO7nSIW+CBzM8v6vSCUGmUKX8hYYO+GQCtDG0G4fZrJv6dn
AS5mf47rOgJ4JHby6iF/C+wxFNd6QluPo14M7pqBFqi6UqP5VXA9jG5FivwM
tsDg14fOxsv8eE2hZwbutwC35P344Gp+jBH2l3cfs8B9q9W8V035we8ulGaS
ZoHVZt0nNHfxIexy0WmeWguE7hXv+HNrHR4uXz5ZW28BUTffj3ap67DsHh8T
1mgBZ+FXzPUH1uHk5p373zRbQOy0cesao3XIvMO+81y3BaI887QlhnjQUOWl
wDNpgcXkJ/WmG3mwYUToFfcGS9zgbpizuM+FncasDc8ELTGuc2Mp9AoXrhfM
VIWKWILaZKNZFscFBfrLB+3illjK+dmSsp0L+rMHLp9VtISUj3nn2RVc8Gd9
48dtaAmm61yeLs84UCmfwMYdZAk3YdagHIc10Hi7vuVciCWiWH9L/VJZg+Ko
grO8+yyxtT67+RDnGlxveS64IcIS1SEJ4ktNq5EQvEJR9LglHj+b75kwXI2t
JcftFdMskXPfNnSnLjs+ax25bF5lie2aFGdTazbsHlmz61WNJW43DXTHKLPh
XXLmZus6S+hbivoMcbOhue/JHbsXllBOVuFZ1c2KB0cXq5zfWOKs0RWw7GVF
VO3BEa9RS4RfjFOKjlkJboswheMcVvgR0NAa0s2C7Gecq7W4rSDuKFL56AkL
KLS749PrrOBxXFxNOpsFNjJj+XsErDBRsu1LkB8Lkla6i+lLWGGgf/xv4W9m
sNSZ8zNoWSHskg97uQIz5rTFGI56WeFu8Er3wVxGxJVUDWzxtcJDJtdgj1OM
4JV3q5z0t4KVX3YKy35GqAleOrQzxApvJ65tvWHCiJCFNbM6h63QrWWh6fCF
AeOlC+NLqVbYN+jBZKzFgD7F1x2RT62wZJ4o8/Xdb+LaF+4jzNVWqPm2EvVl
vwmPW9ukTj+zwtxZI4+m1N/EuER3RPZzK+SKK/fvMv1NzAkNiDS+tkKoUKD2
rfJlgpv9qw/vJytIpO1zjs1aIkxGWZfvrbWG9NIpxcWkX8SqPPMbVC5r8r2V
JVI+4BfRvCfZppbHGiODc+axlr+Ibf0cOZ3rraF1LLGkcM0vYvdbPpNlMWuU
7lKUaU5dIA7Xbk4117DGnhqFXsnseaL4KiHx0d0aGpyOltO9s8SPQz9Y9+yx
Rpm/s4xu9Syh4VzwpX+vNYoZt5reypslnnBylnT7WuNq54WrH4JniefHBvRf
hVmjsHLdYgvrLPHe48iuB/HWmA79QYvU/UmslH5y+dg9Uq/gIZGT1TOEOXPw
0d/FpL9kqteVmzPEqUFxj0Ml1lgOVw18dXaG4E5Pkg2vsEbngpbGUc8ZQnjV
9gqfWvL/Dcdj5VfPEKpfFjptuqwxPrztz7md08TOIg1ukT/WOPDlqGYh33ei
fPsCx2sGGzg7XdLdxvCd4Fj5eM0JZhtyH2xdVOqaImrcdNnG2WzAf+AhMRYz
RYizG/0tXWeDTNdxnZ/vvxGjnvaTVrI2iL1kIKN+eZIIEqS/jHKwgWLjycE9
ul+I5w2KjcrONjhycdfkFoEvhGjoVP2wqw2EUtKP0WYniNeNYTVmu2xwjEVJ
s+3uBKG6P/Ihrz9pj3dHsbrYBDHfFn/jTrQNhp76HjjPNU4ci8uJ6bttg1qP
CgF1rs/E2oOsFnvu2iCHjYU/58cocdk3kGe0yAYKHG4/VbpHiRJLWu5UqQ38
g9cmVV0dJUa52+uZqm3AvubwkSPKo4TlVQY22Q4blD25m+fl/Ingf7jrzP4l
GzB4tM8erB4hcm82OC3+tsHM3W1dv/NHCMpledFoBlvs4qlXzjkzQpgfmS9K
WGGLO+O5iXAfIaIMU9qvcNrizb2cV5/+DBPDbVW8tZttIc5ne7LQeJi4OyZy
hcPKFtqZfEMbx4aIhKy43QM2tljZ7GLx+PUQ4bl1UvKePWnPht6+/9EQIfz0
abG1M2nPMsXbKnmISErZ8fyUhy2YN51jCKMMEb4aGdPskbbIvnV1gp1xkBCP
5TVjzbdF5ku/uGuBfcQfatTa7pu2WH0hcdnEpI/onRx5k19oCy6JwlIJ0T4i
1blkp8l9W+xdo3Mupv098Vdu6764p7aIMkq9/ZD6nuhrT7nK3GGLhJED7zu5
3hEV8fN7OzptsX4iZFX1117igvYu2dweW7Q5bPJ796KXsLyhVGowYAvG6Mrs
/Jhe4nFEy8uYcVt8IuqlTs/2EGmKW1Lsv9oiIEZnA0NHDxE6nOkgNmWLnIP5
jLnFPYSMFX2w5qctVG8HXjtI7yFYGN/mpc7bonDRteGmRQ8xVKbtv3vRFuwy
Ts/ZZHuIp/65ypTftnB7KrvjEmsPcUl09ezfv7ao1s/UcRjtJv4f8lmLTA==

          "]]}, Annotation[#, "Charting`Private`Tag$1551588#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1551588#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
de/XpZs32yP38OPD7hVc0PMoGO/bYg+v4Pgt77K5UMXPf6c7yB6n5Xk9PDdx
4fH+d8xnO+2x2Mnm/tj4Urz1i91UmmyPbU/vLV7PsxRLlKty9t8k/dl34L23
32JYLwqL+11ij/Xlc7Quq8VI75fz23vHHiam5+xDtRZD8EyqakSlPay9wj7M
LHBi9bINlYGP7PE7kbjhl80J2vjPTocue8TF6+tUdy+C9y09Qck/9lCtsJ7c
H8yBuxt+8rWxOYC4JnjmqjMH+Jbc501a5IBDHJrC4wwO1Hmt5frI5YDtWSnV
L7g5IMdt9rdMyAFncztYHDfZMerv/NlO1QFulycnB+fYsF08tDnGjZwj7nkO
wv4v8biR0qTl4YC6v3/plxX+EtLhUw1D6x3g7pI9vGbhD9HWtLPOapMDdN5c
1F96/Q9B2x1dIRziAFznalzM94f48SL5yvV4B+RYN14MfLtA7D94MaG3yAHP
KxLbdXJ+Ecv3LLXZfMMBe3JKXs5G/yJygratGL3lgB2e98/1r/9F3LFl5E+V
OeCIi169gvgvYlSwvYGj1gHFXYHle87OEbbn2bhUOxxQlevKkLv2k1hVseno
7nkHnJCfP+n1ZpbIv9a47tdvB1BL5JMv18wS2jnq0vFsjiiQrGhenj9LWMf+
uHV4sSMCJP6eNA2dJWJMM9pz+R0RZ1/0UJ9tlhh6USP8SN4RVT5xHfKa34kb
Y5K5fHaOGBko0BG9+JU4fO6g7zsHR4w6P6HvT/5K+Lt8Vrzp7IghvQgV3tCv
xOoHD0rsPRwxo5xEzdD/SqRmbHyc7ueIh3T+GKO2L0SQXvYMd7QjBBw17i3j
+kLIHRC2WnrVEX7vdX+KZ04Tfwxilndfc0ThWMTQlehpoufz8MurxY5wmHGh
OG6ZJjI97nhb3HaE/4Ya2wW9aeKvmsuugw8cIaKlOBtVO0X0tmecX9ThCAt9
P9Ot2yaJyuQfWzo6HZHhym2uYDZJZK3ZpJr/2hG8LxKNxSUmCdsrmmUm7xzJ
+T9l9HrzZ+J+VGtzwkdHJCrXX/ZX/UycouhmOE84gn9DYlUP+2cifOism+wU
6X9mu/iBNxOEil1of903R3zR87m9J32C4GR/dTnzhyM06u4H1gVMEAPla0J8
f5HrxY74ryUmiAch+Vravx0hNb8taFJ0gjgtzfP9719HGDcOUzu+jBP/D892
6vs=
          "]]}, Annotation[#, "Charting`Private`Tag$1551588#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k41O8X94lKZSfZlS3LzGDGNsS8Z+z7lrQpKduMlCgKRUWKqLSgQlGW
JNlSCYlQSNlSsla2pFJClmee63qe72/+mLle15z7nHOfcz73+/5s8Dzg7LWM
g4PjKvvr//5ae428rR4tNeb4fx9uE8mDfRKXaf+fKenJN4olsv5jm+auopsS
Jf+x276/zy5J1P7HnzTOmJyXaP+PM9Y6xJyT+PwfR/EUbzwr8fs/3rrt1oMf
P7nx/3nNUtROC1mB/1jJ6fvIizjR/zikhUpL/i3xH68rEerl5JT7j8sGTZre
bJL/jzsto36et/gfTxdUitk6/4/1wqh7Gnz+x+UiGtPVl/7Hj00l1xeN/I8r
7v4IunxZ4T/u4SWlOKf/j+cPsSoF8/7HRrSvPOer/seVXR9vRo/9j6t46uuP
QPE/7g/gntC2UcRIduYWKSFZY44OuvCUqyIed6n9I1k0Gq83PKH30EMRLq47
KtZe+WeMWxU7D7AUMXD0/Zfyg9I0j5VzUcQjiqD99R8Rl9WmRe7Xyx6PVMSD
7hyRwX/mtIy24KbcOEUcnhbYz1m6hVZNLfrpc1URC38f6z7S3EfrT58UU76l
CFleBT/ZzIM0jhXETZ/vKaL8d+AQx6ejtPX+zD23yxTBHXdvVYbaKRr9XXaM
x3NF6IqqbZXfGkfz1P9yT7ZJEVs1zu+s/XKJdjJN/m1PpyJWD0p/TfNPod3m
9phOHVBE22OjWz1lGbQa5k2pbd8U0S7ov5ESd4dWPMpi7ZpWhKPizmDF/jxa
lq/B070cSjhxaj0r51wh7fIwzxq/1UqoDFURWyVXQov27toeIKqETRdOF8rq
ldOOfLmTFySrhPvuB2c6eipo3vuC50JVlLAvs6WLk+85zW2IYX2crIQYfmtX
2/kXNEtPodRTm5RA9GzWNKXX06gDfaOx5ko4cyFMeaj/FU3No4Ca4KgE/uak
mK6+FppUX/jZpO1s/xbepbG33tJ4d9l0J+9jx1cw++S4sp220COhmhaghKiY
y2+XZXbSvu8YCc0MVULkh5mJjUe6aW+2RYsXxCthh/Tq5771fbTq9y6+xVeV
0DK7ZiY/c4BW6CZfXp6hBK9tuz0QNUS75Frl9qJECcwk9+vtV4Zpp9rPZzdU
KiHct2SjQPMoLdhl59/mBiW8cHPJoMt/o21xmr36vkcJzdlrc4WTftAsWuu/
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
c8fKFFGhvClqcd5YRlnDV2ZvCg+53Nr3wd6wF34j9n4re/3l6l8DFt4Yad2i
Jr3fFFNizQtPvnlB0t7bKeuKKWRJsXLryV44YRmdXvLVFOK3+EJdC/diwyfr
95nRZuh4N7L64D0PGOidvixBNkcU6bXf6jU7sFP2zSxnmzmMjN2tOqtcwS9x
qPRphznK5tonmHmueC6yNvDwe3OUrngdwHfFFcqrdoyMfDJHbmS+UjjTFZNT
XzvfjJhD9dhXMU4xV5xsXCy+uWiOntllnfcPbEZOMCmAqmYB0YXUniKiC/68
Oj94MMoC1yO4azg6HNGzpsN3/pQFxq7m/3KrdUSNrfQkeyZw9nlZ6dNiR1xo
yfuXFmcB3fdR33MuOULtXb1o8xULLBv/ukbSyRG7ujktVPMs4DM+PHcvwwEv
hw/fG3hnAbU6k2ibQjskc+8Kdla0RHKEX26juDUW967TeatsifLrThrrF62w
70XrHwdVS6yR9bM/P2QFzZMmIXYkS2z049G4V2CFhiWVY5b6ltBp0d3+28wK
f+emThjbWuJMWMO24lBLbPl5Nk4t2BLfR2bFbnw3R4WjiW3uEUvIHIx4/bDT
HPKF87wqRy2RJbu8safSHN8DDiQoHbfEx53agYcSzRH9bfPF9bGWqLNJ1b6u
ZY6SYblrYjcs8W/Pi7D3R80g0lt6e1mtJR6R5oweSpgigTci4tFLSyQ0vmuI
W2aK1YamW/0bLUE7JnU7YtwEy5Lf8XW2WGKT1WnO7Gcm+OU0GZrbbYngt16V
/HtN0Fqn4uA4aYn06w8XFIoYiL9//d9NSSvMPNlcP+VBB0+PZ6ezjBX8PW7P
J9vScXq12sOV661QSXGJcNGnI8yn3DtQyQp+PjJyPIJ0MDd0vDXVtEKBQahs
QDVgeYU/Z5xdJzenTx2ySsDyiKjN1EAr8Ac7XaP9M0LJz2+zVUFWWPYiKWW+
2wj7vLemmx+xQrymkdLHciPUOmiMuYRZAR8KA+aPGOG0/KcTAdFWOC9xcarp
9yZwN+jfy0yxwtrRjpcJ04ZYJvKDk7/GCqekdUN7hQxQdGZH9uVaK/Alr/uT
8pvKPm9e2krVW2G3yIXyoC4qar7cvKbSZIVPdn75UTfZ713lNkSTTissjUrF
cKtTwbkre2vomBUe9/PNJNrogyN314NBYWtImrSf47uti5ffugLS11rjm6Kr
y6YYXXbeTqSd7LkakH00e46pi3XlJvc7ZKxxa+Gj9xmKLkj1KvcaVKzR0fk+
cPalDnZ++XW3wNgaH8Ila7OntPF4w5m0Y0xr2PTwV2/bS8FxL45devvZ8RqF
m61sKDDNPSrz+4A1wvcFLblSKGjV9L+x/7A1+33xt2cNFwUjNKdUj0hrpLun
rRm5Q4bYLqmr5letEXX1ubj9pBYOpT44L1xjja+fjpx7fkUTj+ZTz9TUWiND
rfWeR5Qm5nfFRB2qt0bZiaa0dfs1cUbB/fC7JmtcFKq40mSqiRv5q90vdVnj
8J+CdRljGqir9CIIT7D5QNBJ+1ISxIekXguJ24CsKkPtYxHgbray7rmkDQak
SiqLLQm4nf2rMlDGBh/tFX49VCKA4N9Y9FbeBp9ePspV61cH/c+R1ItEG8Tr
TdvxuKmDufKdn5CJDewYJ3fZ26rhmXosj1CADZzv6qDbRQW67euaLx20QVvk
1ZqreiooDM++KBpkg2ZBlYkgKRXcbn4pKR5qg1l6Zmn80Eb2vXM5Ue6kDaQj
9h7QPrwRzsUnnYhXbXDOnamJNGUMG0SkWlWy83+clRO4QgkeQ7y7X1fbwEjq
9IOvE4r4EHdDwe6FDby07SNCOhTR1PM037HBBok9nn/GsxRRdHyu0u2dDXR0
W/lkzBQRXhMy5PXVBh9uNV2MPqcAIetDhJP8tvCM0OnKU5FHxnOBNQZCtngm
u/3UVSF5aFLvj/4UscWoy+yTtLkNsFcZubtHwhaiUWvNuZs34NyKXRvoirag
NOXorw/aAO4XVmIcBrbgPL9T8ETtekwbbuA47mUL1tbTT//8kUV0cWWvjq8t
nA+21ge1yEJUfeezCaYtUkxoggrZsqBIXjvmftAWvseC94huk8XBGd4/m8Js
ERKl/sKwSgajJTOj/y7YYrnJsYD9l6XRQ2xtO1rB9uc9INPpIYn0caEIripb
lGePUWzpkvDMdVE+/9wWt4sNzIc3SGJUsSs046Ut1E/rl8cNSWBaqlemvtUW
g+edjM76SkBo9Tcf0S+2OHZOT4l8VBzmX1fOF/DZYUJOOVCpRAyrsqzu6Ava
oU1+Z9+3ZDE07YmzrxG2Q+OPYL/2CDG4fOK/1bHODsEPXhhzWYrBo32t+fwG
Oxhzrfz28dNahNUoXLDStYPbrgeMbQJrUZhGU/y8yw5rY6OTYmNFMHVsauWe
PXb4sczx36lAEei6ZY9/2muHn8+jZVO3i+CpgEBxl68deFepKIgRRfAyspf+
+pAd6jPnZqzahPHRM2J3UYwdeuwOBJ9RFMaKjU9TIwvskPIzRDuhWxBWXAeO
L7B1R+PJwO+cOkHE98l7Hiu2w/Fa4vCHh4IQSj6nGlxuh6nfb+dPnROE9Krt
5T41dshWECSMbBIEeXymw77TDlnbZLTqbATg/kBXSGbRDiqHz8r0CfChbPsM
fyuHPc5/c15+dYwX/Cue8J7ismfX7zwlvI4X1TuNeEZ57PE6VvxMRxgv5Feb
LpWI2COdZ4K7bGwNvu5zmrBVtYfkaAppsXU1AiT9G8M322Pcpq9ZtZIHL+uI
9Rpu9sgLnmjalcYDucDJ2sFt9igNe0SuOM6D1vpD1Za77XEhdMfhSRoPyIeP
PhJl2kMtZDSPXLsSf9/E3Mk/YQ9ml0PIsvYViIy+FdWTZ4/ajPdXwwWWgy9k
pfWe+/bw53lYoDXNjVTf/cJfH9hj9O3ydu5P3Ci2oWZOltijpeDGa+573Pgq
9LZ2WZU9HnNZhftYcsMmjYNHtc0e/CrFxORYLog92p1w+J898gsyt7yUWYbM
nLotcwv2YEmrvptfuQyaqepyJzgcsNlobKfdL05YRfx9ELvcgX0flN+0qZ4T
4SaJb68LOIDzzq9xu0OcGHxTKVqj4ADrgijhjc0cuD8ic53f1gGFn4b9K1WX
aLE3oz167R1AivLLGlpapO1znlAqcHLAxTeP96NzkSZdUVFo5+aAaQ6i1M1T
i7RziTtexns6IKavabG/f4Hmq5vyc/VRBwzPCFkdvTNPkz8tarnyrgPMoaP6
c/McbVE/nK8rxwG1cSaycVpztO6JoXd37zkgNGJQyZV/jnbBrdjd/KED3Hvv
G4Y2zNKW1JyDoisccHxvmOov41laz9vENK42B5C//LU7pD1DK4/5u7etwwEe
va9yR0VmaJcNd6tmvnfAx9wbLvFTf2k2d0gljF4HtDLEPZyL/9KehDY3Ro06
4L7VQe5u7b+0q0SdRKdvDjh12yD09tq/tMDBG5s3TDpAUv4M95XpaZqKrX9f
9W8H7C1RaZsun6Zxc7ZnXfjrgHZxk2deqdO0/lJDpsecA1K6ZEoWwqZpFcxM
Dc0FBzR6fz5R6T5Nuya35s/SkgOiN9WMZNOmaf8HkcDsDg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1551588#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       Opacity[0.5], 
       RectangleBox[{12.142857142857142`, 0}, {14.285714285714285`, 5000}], 
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[{14.285714285714285`, 0}, {16.142857142857142`, 5000}]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 1200}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Complete relaxation\"", "\"Major relaxation\"", 
       "\"Minor relaxation\"", "\"No relaxation\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.794156686526167*^9, 3.794156750752102*^9}, 
   3.794156821046194*^9, 3.794156900425634*^9, {3.794156999810511*^9, 
   3.794157020583871*^9}, 3.794157097604418*^9, 3.794157523332419*^9, 
   3.794157570067727*^9, 3.794157762762542*^9},
 CellLabel->
  "Out[1509]=",ExpressionUUID->"f97e7712-f256-4fe2-b469-e4de6758ea14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/Desktop/fig14_4.png\>\"", ",", " ", "fig14"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.794156959068226*^9, 3.794156975525888*^9}, {
   3.794157091119615*^9, 3.794157091801433*^9}, {3.7941575188957243`*^9, 
   3.7941575191386223`*^9}, 3.794157564185605*^9, 3.794157745285049*^9},
 CellLabel->
  "In[1510]:=",ExpressionUUID->"de896541-33a7-4e96-9053-a7cb64b47866"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting R0 = 2:", "Subtitle",
 CellChangeTimes->{{3.794156090803885*^9, 3.7941560917658577`*^9}, {
  3.794156834506391*^9, 
  3.794156844822997*^9}},ExpressionUUID->"a4748fa9-bfd0-4be4-b241-\
0c9bdd7d8fb1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", "+", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseline", " ", "=", " ", "2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol06", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.4"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol04", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol02", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol00", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.794156106672036*^9, {3.794156141078863*^9, 3.794156173417129*^9}, {
   3.7941563630521793`*^9, 3.7941564001285667`*^9}, {3.7941564393207912`*^9, 
   3.794156439386325*^9}, 3.7941568524303102`*^9, 3.794157549451598*^9, 
   3.79415774825128*^9},
 CellLabel->
  "In[1511]:=",ExpressionUUID->"cec1c990-48cb-40cc-8c77-2d8d87c9e8ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prmax", " ", "=", " ", "1200"}], ";"}]], "Input",
 CellChangeTimes->{{3.794156277514061*^9, 3.794156278914998*^9}, {
   3.794156331056059*^9, 3.794156348490449*^9}, {3.7941568642880087`*^9, 
   3.79415686450574*^9}, 3.794156948631131*^9},
 CellLabel->
  "In[1526]:=",ExpressionUUID->"53984cae-3fb1-42fd-b9ac-1c712a671e25"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig20", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol06"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol06"}], "]"}]}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Black", ",", " ", "Red", ",", " ", "Blue", ",", " ", "Green", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Black", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Complete relaxation\>\"", ",", " ", "\"\<Major relaxation\>\"", 
       ",", "\"\<Minor relaxation\>\"", ",", " ", "\"\<No relaxation\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"npistart", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "5000"}], "}"}]}], "]"}], ",", 
       " ", "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"npiend", ",", "5000"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.794156672417858*^9, 3.794156750149516*^9}, {
  3.794156816678644*^9, 3.794156820239547*^9}, {3.794156858200831*^9, 
  3.794156858311244*^9}, {3.794157006044794*^9, 3.7941570072526073`*^9}},
 CellLabel->
  "In[1527]:=",ExpressionUUID->"7176af74-4137-4423-8952-cadf0bfc9540"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF2nk01F/cB3BbkUqRnTZL2ZM129w3hhkzFCGlsoUk+5aSLNmTIoRIpEIb
srVYKltEopSStCltIktJPPOc8zy/5p85r/O9872fz72fud97z/mudfHd6sbB
xsbGy8nG9r/fDLdPjxtHqihs//fhMhb3ey2WTv7f6vlZuTfEiv4zs/NZRZ5Y
5X+2c52uSxNr+s+vNsQbHxd78p/PCW2JSxJ7/5+jeG6sTxSb+M/bdxRc/zHG
hf/34vmoXbRVy/6zrNX3T/ePCf7nA106JGtC7D+LVPIPsrOv/s+7kv/YvBf+
50LXDx0tSv+sJHTz5rHt/2wU4pQhVPbPWrl2F9M3rPnPzg4XdxcP/nMMQyI7
e+SfL2qdfJI08c9f+Q4xvXnX/ueQBgsdNa1/Tl4zKXjn+D9XvzV++Ehf6j/3
0aPGjtP+eepavbD51n/WDtNxbtv7z7UrNkw1pv3zTar4mopP//yi1M7E7+c/
zyzP8FSZ+2fdV8uqSldI/+dbwQsY5yn/fOfij8D09H8eWKKSvTX/n2cD9tcv
L/1nAzLMc7zhn+ufvcyL/fzPgwZi940n/3nu/LZP7Gwy/5ni91jtiNA/O/Tx
bddf889H9M3DZxT++WxhYmGt5j838LS2huCfh3y4vmkwZXDnkYmIpKINYXtq
KPDTVgY+ur3UtV2XyBq9CO1yJxk4CYk8/njzPkHBnV2++2VQQNttHRr1hDhx
z0Qph8jg21NGnt72NyTSW/vSl0gZvHT+0HdH4jM51xv0sOSYDC64qh4Z1Bkn
jToVY3szZRBEO6j0R+YXGcofFV5XIAPlHW5s25vnCNtCZf33l2Vw7+VJxjse
Tqzx8nQurJbBer1Q1yo2bhj2XIpzuiuDvwHckttMF8Nl04fLqx7KoLAp1nRJ
3zJEn5V6PNAnA3FjKxW9bQK455knseOrDBo330tPOCmCGyP79ztMsfI5vqOl
Q1EcRR66t/ewyeLtq/CVi99IItb9mb2PoCwq7zZ+n2GsBd2FP+eovizMAsrz
JhPXQ+fN65EEU1nQ4t7EZWnIQ8Hpmk6KpSwCA89+DXqjgCUOzP4sV1m47CsJ
/LJQBY92xIpeS5YFb/ThCrGujWh8bu1xI1MWf2zn7rH7q6HMTqq29pwsrGf0
tqbyqSPNtsHufqUsPp+MNTDW08A2q9+ZzwdkMczW+XmNmxZo3a3Dr4Zlwa+y
OibpoxY2bcnUevdDFozxjXrMvdoQs1Dv+8a1DrE5bl3NjpswQPcW4lRehz2H
XdKKdHXR2arnxqO9Domjz7X7r+qi3pS3aqnhOmzWnOT6tVoP+dRLNqK263DB
h7/sBLs+XPDmlHL4Oow9E/hbXWeAT9q2Ats714FH5b5vQRYwuc5g2VXv9fjy
mq/nI6GC8taoNSmU5VMFSgVHqYjLo0d4HF2PRPrKFu42KoQFbUals9djg9eh
PaNbTaDFvv9RTtN6dLwdW3jJ3xRH7vjFhz5aD46Lwe/pt03RciCEbHuxHgla
JjW3FtBg9z3qOv+P9RgIYixdlUdD6MusEwkScvA+0vqF2UdHY+ZZmvs6OXBU
l/k+W2cGnq1F88Yb5WDZcK3EMtQM2W3XfedN5UBNSGsSW8XA26NV619ZyWHA
lGNwsR8DCuT261u75ODVJ8rWe5uBW1UtW0IC5FDrOD/8w5AJDv+H3DbhcjAr
PhY3dpgJhlJPw8YEOUR28Nr/qWAi7eOzA8tOySHIs05xx3smXha+2vAtTw76
yhf4t/CbQ8bh3cf2YjmoV9+fWaNrDi+xkfziG3KQ89ilxOtojson3+3i6uUg
2L7lnnGkOWZPTCxzfSCHqJylYwvPmoPKnGk1fCKH9qyyZXG15kheyBa5+rUc
JiKq9H48MseTuws2/R1h3Y9a/yfovTlWhi/+8WJCDuFrO0CmzOG+ib+4dl4O
7BHfnxxYYIFrP4WdMnnl0djNjDIVsMDUNUnRICF5xJpfTOyStADFU6rbao08
eE9cF1KTtUCcrFzCBkV5qP2cDk1TtEDXkDKWaslD+sdm+lJVCwjnqv/6DHnI
Oi9mNqhZwMFOp6yNKQ/1lS9FW9QtcFGAeFzcJg/t6cbbOix/76SuiXGWR7Ah
zFU3WkArkfHc2UseSpsH3jYoWyCCanmSHJBHga9o1pycBdrmbekro+XB2FIW
xCFtgeW3d7L9SZbHfdMlLoMSFtge4lz7/LQ8uKqOPyhcYYFzG/f6VRfKwzW5
YK8TrwU+ffWSS78qj40Nlb/Ws1lAtThgyL+WlT/R0OGdNEfjqiOWyl3yWPVI
s2T3gDl4XhzlWdwvj6LqaM3hLnNYZiQ2fnonj5TE49Z3Gs3xZnGGatFv1joQ
sa/tcKE5OH5fXi4hqwBzK99yd9Z8SnQa/SQbFNBD1blcutkcGgX9T111FJBz
KKLklIE53My4z1yzYFl2UYGnuDnasl1kjUIUcMrMNZc1JzihK6a7r1UBprNS
XUXqTEgejttTs08R8juYPfLDZtC0XGk6EKgIqna7+Fy3GTbLVMqxH1FEIe3N
4e7bZoh4+OYbI00RL/08FwammuGtpEHo4C1FoPwgs0XfDCV1P5MXLFGCxmkT
C5N0Ou6lJvkqCCthQjnzkE0EHS/c1m7dskYJmrsPSnh50rGEb4tItgarvZmq
VTXo8HMoLVDarYQTIn0ljd9oSFQzjLHaq4Tx94GHV/bTULjwuXuIvxKUPyyy
i22i4dYLH7MzYUroLHI68us6Db3XFig1xiqhXbFA88AZGr5G5/J9OKGEhnvs
l9jjaeCyUx9blKME7o0WTsZBNKxUbO9VKVJCx9WHIux7adCad6q2vqaECmV1
AV5HGswtGqNNapUQtM6DW3AXDXvOrN6ifU8Jm5dlOxTtpuHQyBEJ+YdKaE1b
NBq2h4aT2oMfxfuUYDe8YruDNw0XYw0qlwwpYb55wmVFGA13enMj50aUsGhc
YKl7Mg09a2fNf/xUwqnc48JyBTSM+O4Ue/tXCRfH5kMUb9LAVn/rQy+3Mmrj
bI1MntAgvES8oplfGf6tnnTLcRqU7A8eqZFQBnXHRer6FXQYFT9nlMgqo8RY
beySFh3bp7RFzmxQRqbDu/cVu+jwpZ5+l6yjjM9X+arlY+nIHbI97GehDBF6
+9zYAB0VKlV0FztlKF+7WMe/xAxthwWFbJyVcURW+4+egRkmRXuvagcrQ+v8
zIVdF1j1YWX5ei5XGfF+lyN/JzHgmn/98o+LyriSarQgvI2BsG98oW/LlOF2
b8NoMjcTxYmdy1ualKHYLNMgk8QE+z2G0fGvyti2LShU+pw5RJeX8kVMKUNC
cr7+9ydzqDgseunHpoIvcWFElPX/tp9pDbQRVMGc19H9Yh0WqFQzuSChr4Ks
zi+Ktxdtgft5wlN6TAXNYDzwfm2Jw2Nnn5zJUMHfrylj5kutcIrMnTuer4Ih
28Hbt/Ws0Pjyjo7/DRVo6VlI0XOsICaou3/TSxW0UYolVzlsxcMYja4WhQ24
yFEgy8FuA91lHRypmhsQ5vt4pFjfBsXZzto7sQEq35L+zIfa4Oi1lHOjthvA
f/Ci//2frPbPPwWIRm2AX7vXmoYxWxQr5ol4PtsAKb9XNueWb4dwtbq5xtsN
mKs78nvAbjti0B4593UDHv9uOTGYvx1lpX+CzNhVwRW7OlBLbQeONcgNvhJW
xeGlx7L3ONnDaCS6bKGRKo4/znwu8H4XDqp0te+nqWKbYZHA9k27URYo9qHb
XBUnvg/4hh3fjVVz18XO2KlCLGpMeI+uA34LvIre4K2KyIqqlndnHVGmr227
PUsVJbOF95cwnLH65JffJd9V8fnRt1ajPFfUO0eUVPxUhbLJurXTPa5wUF+x
4/YvVWyae9KzdpEbcvt0ax9ybITBtG/wQIgbRFcmhYwKb4QkAtZO2blDoFTu
pwbZiEicypTf6IEFTW5fG05sxDvzo0FBRl4oyvh9pi19IwyvLw3uifcCde9x
5uPsjbAq/l5R0emFaN6q0rfnN+J2arTfjL035iy59i2o3YiIYVef0jAf/HpV
+IExtBGU/Izc+55++DL9evCpqhqGFiROj04EoHrviXsMLTVwFk/vNJQOROQz
ysUGPTV8O3xi6wurQAjX5HmXmKohwrpZ/s31QBiF7Jw9vEsNdkbhmpq+QciZ
6BOTSVCDxyWXX+4zwaCPddoEvFaDw2lfES2Dgyj6fLudL0UdWsFfraVFIuFz
eou05yl1JN732lOqFglt6ruw5ix1PG0LTlXYHIn2PF7lw+fVsSBT+gt/bCTG
LHecGKlVx/c9v2N2j0eCUjNl3fROHTZaV3W+P4gCj2vSldUjrPZF2cyo91Ho
Wb5qQdh3dezjqrT+MxcFN0+T6o2/1WFqej4lXz0aySvTRfP5NJC5t5gr/kw0
+o9ufHVQRwPrX7a53nU9ikLVZs2nFA2o7tw7rRZ+FF6vtqeoUjVgGnhEMDTj
KNi0I8nHzRp49mxsUWjzUaz73FVg46oBXdHcbiXpGARZerlvOKEBi9Tju3c/
iQHl73x9UroG+je9Wn1gJAbcpadEhrM1kNbP72c1F4McztttuUUarOfqNwXj
9bG4W71IkfeWBm6f2dfxJzgWfCsvjb5/r4EL3qU/ni6IA7YdffVuRAMj2T9+
2AvFIeCEY8fb7xp4ZfrZP0cmDn3sopeGfmnA8/1SDlOjOJwdTnAYWKIJISX3
m7qH4tC92s38Jb8m2uiJzIj4OHDsMNR9IawJgVjFjtD0OLh3/BZ6vkYT3m/2
6SZcjYNKmWdnr4YmNj7U9OYZiIPTiOntHh1NZCfcnH83HIc0KemSxxRNFMqt
7fEdi8NU+suYR3RWf7uFfDMXxEOuqyagy0IT8oFsHqrL4mHPne7UuVUTyhYh
Y6Gi8ag/aK7fsUsTqwoaBQQV4vGjQk6h3VkTIiYTz93U4iH1lUv0gbsmJNj9
k1114xHnUPezxU8TpSmeonvN4lF7OvtNc7AmVvJxaHlaxuNzd/CjpkOaqLW3
ey9qFw8LY5XL92I0oa5fJxi6Jx5HDvNm303URPjdlPVy++JRVjUc15iiibqJ
/K/RPvF4+/1eUMMpTchttlJKCIyHoFy+S32WJsZMOK9rh8bD1DnMsi5PE0wb
YYPUw/EIzbGj3CnURG/O67PpkfEo7VVXun2JlU/Z/kuGMfEYWLJc/NYVTZit
XGqeFR8PPtOv3DfLNRGy0iEhKykeiGibrKnWRMOXX3ZGx+MRUFv0rvq2Juj3
D1RnnIhH0Vjk46pGTSi+DspPS41Hn8LuhspmTSQfSuLTORXPqn+dqzfaNRHb
vXU+IT0eunlCZyoeaWKTpId3dEY8a589llD+RBNNWa42spnxOLusK6Ssn9V/
SluFP8vd9FLX64OaiKbvubCXZY7ouK3X3mnizq6ZHdwsa9x2wdVPmnCjHpyz
ZN3PfYKicuWbJmpCOxqprP6ylCUkL49rYipgoOttWjza3acXlU5rYueV09sU
WfHO5vdOF8+y4j/7KXYVKx+V/usfLrFroeDuraQ7yfFwEkjuvbhQi7UP/522
gDUeaUyPuxcWa6G7ffDh77h4NMVQrxct18KVutTQ7KPxmKpbk3deSAuh4UU/
3kew6mt6NqlQXAuvLKpTB8Likbyvyv2cjBbYN9jcfRzAqgdcTVisoIUFJnGP
HL3jQRO9UBqyQQth2ntmkvey8m1N/26uq4UV3x4fabFnxXM2eXkt0WLVlXVz
rzWrPoNj1KRNtPCi5JhotHk8DsoEhfzewjoXxh5NbtJnzcef/VmutlpoybvL
aa/BGq/ePbce2Wth5e6naqcUWfUcZT13gXWu7PE55PaTVe/ur9XitoZpQZ8r
jPvIaByaqhWK6yK1kEF7EEx9HwepFKl2uTgtSEwFBlU+j8MrfQG++ZOsc+nw
vsj0xjjY5IxlXL6ohQHXl85eyXGo8B+pEb6ihet/XUYzj8Rhmdmb/qhyLQg2
f5r094tD+3T3yu13tJDZ8N7KwDoOhrZlF7h6tNB+1C6Kylo/zioVt/o+08Le
8kQBPtb6Mst5buTFgBY0dq36eGIiFrUVJ5TLWedg2wrf4409sVBZ7lu1+68W
bt9Ye+rnsVhIdig3V8tpYx19huPkeAymcPm9R4Q29p1TgmPWUdwp+nLmQIw2
ZiQ3BDyLPopoHiXruERtmGon1W3wPgq+7it3z5/SRuh8hWqMIWs9dbx2dvCS
NvinL4c9/RSNbeHl2226tWGUlxUzqBaNqps1D8naTRhst1u/91YkgtSaKoXv
b8JoHUnWiAqDu8aac6ltm3CgU3ZZ4eYwbNc6fGxJ1ybQav2iVSTDoKer4cLR
v4l1Tko8W1xzCBxGRcu+f9+EEoHl+/HjIE5YxXg2i+vAW8z04JBHKEr9qGuC
AnRAP3Rc6Gp4MHIDzi0ePaCD0vZ83jrLYBwPmp3aF66Dk9ZlmxfIBMMvtLLT
MUEHfbPGR9ERBO1ImTDmWR2c2RD+wlsyCE0nuPqk2nXA/mNx9+8HAXh9renY
47W6OP88lSfB2g/d37i+qq3XxdfICsuPKn5oVDIxT1fShd8+9uGjvH44V9q8
xE5bF259FXUjMb5wudhyfMBcFz9jDpd5evpgOK/txMcDuvjg5lBnZe6FvgGe
H/RwXYSdvi9VzuuFVgkzy9JoXQTlcm5KfLCftV97sNz7uC5aP05FFdL3wzOj
PXW8UBcOMzdHA8w98S354am/nbqIr83uN/L0wGDHkgmHXl1E6hb/XaTqgS5e
C5vG57rwf3A5nTq1F9cSOgWPvtPFcumSEIGYvfCL6crg+a2Lj2qHH3BecMdE
WPfpFTJ6+NzisLLnjyv+eD45I39ID2ZeiyMjfjuznuu7U1Ui9GCy6pfEnUfO
uMI+HKceo4dwDp78zRed4ZA17W+QogfqdGNwoI0z7jaL060K9dCW1Dp9rdIJ
8WucJ0Lb9UCJN3Sf53HE0JeRkfBHengpWrD9boMDNtUEvI5+oofuX/rxqw84
4LNFTHvyoB5upT47feXjbliEXTp3blwPx0a9hL4/2oUVfd/M28T1sXzP6U9q
d+zhVRBi1LlaHzvUyRGjw/Zo8prX7pHRR1u/X+6gvj1COPmlB1T08fY9b35t
ww70q2r8HjXSR28WY/J5x3bkHzt0QWS/Prw5009MzG6DoiH3nPttfejMp3bx
3rFm7W8vr3/eqA+uZqZRV7w1NAQtrcxa9OFWE8YtaGMN/Y9ZRYqP9dG3QVdT
6vtWbD6uwPwxrI/ix0IfFeS2IqDfIuuggAHa3unsmK2wxJTR+N3PIgZYV+Y1
uyfOEmFXMr/sXGkA6eUziw3sLRET8ZpCkTPAAu+7hwinJTJl/T9wUAxQdSL7
Xm/lZtz0T1dL3meAP/pR28c2mYPyctOuvz4GyDGlSnB+Y+Ie9VWsT5ABjN42
i/QXMNEusq7fMsIAg4f3prYvZWKgriZCKMMAH2b7Nqd+NwMb78uHZxsNsKim
zUW6hwZa4dq95SIU3PdoEvgrRIVGFt+6FkkKHgtNnvv+1hhrUv68f7GWgqCy
VH+HMmPMHHzqwqVEwbMlB7UrzY1x1SrRwQ4U9M7OvhM5ZoQV7GO2fz0oeL72
Yn7bSkOwTb8SFPChoHK0wEl0HPj6tb13XSAFYxQJoactQMvzIivLcAo2HfOj
pPoDB8u2W5xPpUDp6dlbo6cJXjs2Us1uUXBLuHTUfL0BHtpe5XRooCAwvu1M
/oA+apk59wKaKDirv/T11TR9pGkHIbeLAl4eYfYpNn2YLJPTH31LwYs/V7M5
hnVxuf6EesZiglMM04Wnu1nr1EpHqTe7CNrqXaUaJTXhYqm6bcCZoDpnpsfn
owY2H2VPeuZOUGwWLlNYoYF1I+fHOv0IKGPmA6kMDTyp/NR4K4Zgu4Tq38BI
daiaBzimXyHY0ty0QJtTDZIRxqdOlBOcVhtvOvd0I7grBFuTqgnMeA8mHC7e
iEGRGpWoRgJzx96e2C0bkfzuz1/vJwQZ3uF+dwtV8elQbC5tluDk1ar84Zsq
+LxN0aOADdC64/J0fr8KnH6s4FjNCSz000gfWKUCpvQHTXEeoOO+yt/nccqQ
SozPWy4ArNjsUlrsqIRum4def2UB2rfCTgl1BSh9tV38zALA4oy5Stt1qLUx
b0iyBBzX7ppcLboOxnVGgRRrYOjutTj1l7KwT9nw8sJ24NGtQWeLPbJIVF10
OWgPIBch7SIeJoPhoDsMgYNA8SUFn/OtUgh4VTHXHAbIHnrU13FKCn9NSioO
HgG8763eHu0kBUGRTPE3RwG9Nxz1p/6shfFN38/XU4BgCeFNazatxbm/UkkW
RYBvuYU1ObUaSu5iFPZLQMaaadlZvdWo6Vo2XlkCiNzf97r4wyp05c/ukLwO
vNY75tSmtwp/Dfvkv9wErDTeLR8Yl4R9XOKDhEdAwixPr06SOFYs+8HTNAMI
XUwJ4NksjJ66pHizv8CT/PM8noLCSPOSXfhonjU+tKJhx5dCEGi353zBZYiq
GS1hjv0sxzb/HeUzxMQedoWJk4JY/idnXELaEIMpqYVuUwLoLtH0L5A1xJDR
HX+nZgGc3N49uk7OENp5Ws/60wWwrHrBt43KhpBk22BrrCkAPn+/jzRtQwTm
NlztDOPHko8mA4FMQ5zS2zF3YdVyPMwYsv9tYQiqyP1Ln0aWIZka1n/E0hAW
yk2MXaeXYXFhWV+irSEEqcXOjRN84N0t8Tjf0RA3+verGd9cCp7eH80dgYbY
kX5kp8/exeBqOHNdOtcQItzz400MbrzQp9JfnzWEYbmnRNAibly/9XUop8AQ
2YGVbi/aFsK+2kBA4JIhSkv2aDSZLUT51ddBbBWG+H77VmKv9QI45Errvmo1
RGZn4mXleE5oiD/syWo3xPoRfmU3S04sygrab9PJap/HFqAlzonKU825HT2G
ODE92Z5/nQOLj+2dv/nKELle4Tud3rCj9uDlpsyfhiDLc+xVHNmQMm29e+uU
IRT330nARjbsCZ6dXPrbEPvWfHHv5WRjjZ/F+tg5QzyM4Uj6YjNP3DxGEwMX
GaGSS2Mh35+/RMBOfYvlaiOMLLXnsQv8Qz49eflxsZQRvC6vLjFf94fUbY2J
bJUxwvuSFTliL2aIx+an5RQFIxj7CZWrUmdIvckBQWVNlivdTwlL/Sb7NW73
L2Ia4WNPj/BzjmnS2P30Sq2FEQTn3vLvuz9FhLx/ROy1NEKjtpBzccwUabgg
u67Z1ggGDUu1FBdNkRUiJwMinYwQH3bSSkB8ktz+7bp4OtgIecYX5j7v+EmW
Z0YMXgg1wqDh57MZMj+Jm1pOuU2YEeYEyxV6R8fJsv2P7CoijeDrmryAPWGc
7BnQKfJmrcNCPeOdf+vHyOIGPoP354xwdBP9qaLpD+K0U375qfNGuOHSbWYl
9oNUTRu/M7xoBIuBnPp3/aPEUfVgYv5lI7R9Ch+hKI6SGwXvntpXG0Ghp4Z9
Rf83sjOm1udxhxH2ZtSVL3D8Qi6buZyrnzJC0fCvDxSuj0RDaS2F/GZd57dt
XvRgmNTzDb1s+GOE37ezRb1Thkl3726Ru2zGyHQ8GT4lPkwmdu9Iuc9rjKSy
sMSPuh8IJcDycNsqY7x9mvB0acY70mqzTNxsrTFEy8JSrri8I5baXTUPpI3h
k79b+aHqO+Iyy/zZLmeMk3Yzise63pL4OJpnp5oxUoSTaz4se0u6cyjbe0yN
cUThjMiz4iGyI/zv5FYzY6j9TC4ZCR8ibx3vnOplGmOJ1YpLHtZDZEJG99ET
S2Psz7r9wG7+NRG7rmn6zN4YWZG9fSm3BonLfSWNAR9jpFmWGsvZDZDJL+LL
hzONwU1e2GhKPCfpeR9bc7NZ+ZyZa/n97BlR31IZYZ1rDGsDV/+ojGfEv8Ji
tLHAmHVOml3ySOAZ+RYa2XXmijFaGL7SIsJ95MOC4WSre8Ywcen79kv/CYmp
qaDyNBsjttm/+hLXEyK9L2K2vtUYhLrj77eHvcT5oaiXUier/yo+KS3HXvIq
jcnkfm6MfqcavvykHvJ0dfmium/GED6Syx4+202CHoffDfxhjMk/r3KkOrvJ
iqOMgwo/jRHRmTrLPNtNrIbffTr9yxhWq2QPSRt1k84rwm0BnFSYVmZy+6x+
RJp1DsfJiVGhxzeeeDn6IXH9Qqe8lqCiylDHSlb9IeHME5rKWEXF1VevmUfe
dxBDtutunDKs6/ZBoffNOkhdyxvqoAoVB271z1itaidV1jTOdCoVNecOF+Nb
K0lg1sZK0qis/WaU3NdrrWSXsTzPBTMq3n/W9tfzbyUc6ouXVm+mgouyMKR+
uoVsFngk/Hw7FVt8pOdkl7SQT93bFCS9qYjhtDn5y7KJ3G5rvVLkS4XIjSVp
/JJNJKVx0wblACpkC87crfh4n2iUiWtQDlBxfl3s/bjI+yTqxKCBUxQVu0yf
Z3vU3iPim92tijKooF8oumGOu+SbybNepSwq1i89Ju+/4i5pNKBvq8qhYuTC
8oLFHxuJu7LCzpZ8KuyvvWbLO9FIbiz57vqphIqgsfJvgg8biHlHcKhSPRVa
zSpXr1vUkQh6bH7lMGt8wkam9N7Ukh4Hj12qI1SEdhbr1RfUEplgptiVL1TM
TUfrvnepJe0F/KfO/6Ci2UueTfBjDRH8kxeXNkNFy2jJYNdUNSm+Wu3tx2eC
xPU9R1eoVZGZ+9kKX5ebQDlTZf/PP5XE4sXhj3tXmGC9plLgjpZKMr7Q2NlR
1ATuOVeOlO2qJPpOj2w2S5nATnEkLebEDdIt8ElPScsEdbvcH3strSBS8h2/
Lm0yQfmx71bbXpeTYHKtSlrPBOzNnjw15eVE3CtogwRM8FXStvG5XTlxbWaT
5mWYQKwj8c+BkjLy64AY76fdJnj73GvT5N1rZO0rxvPzsSaYxU61NLVSknRP
77ptAive4J8OSz6XkPFLSnHcx0yQ93iR1NbCEnIvgE9j/0kTLIy7FKQlVEJc
eXpOqJ0xgXOAa5IkVzEpVt9Bu1tmAkHux96qXBfJcjHGqsAbJnAT37BMp/UC
OTinOylTbYI1Lh88PyRdIIwHkucTbpvARMDKfrXgBfLFYWhuS4sJTue9o79R
LiIqSXurB1+aQJ6xRD8pvJBk+m4/fnLQBE9WHqtazCgk8zZmrkZvTEBV/qQm
LlJIulcrClwcNoFp2JdD/RUFxL/qu7f3mAmgMbC48cc5UjkULDu70BR0itRq
Gm8+kWxxn726yBQrbR6Od944S2Iv2/U6LjFFTd3Fl3SHs2RbiE7UfX5T3Dtq
5sdfnUemF/8dSJI0hV7uY/3LfrlEVzsmXUzNFAdX5VbHLcshfS5iWnkapjjE
eDPd2ZFNAlOuPVujbYrMNXckGhKyyZUPz8Xl9E0hdUw8LYcrm6xKVy7QMjWF
Tmb3iDBXFuEY67tqbW+Kn169rQprM8lZSa8tz3aZ4uX1M+xJHzOIHp19zN7R
FNpnsnSirmWQoHxFDRdXUxBFUUV1SgYZtoi85efDsndMU6xrOukolW89Hm2K
M873rb90pBGPvnoP/lhTFJybI9QzaYSLw4Y3I94UOXFLTaX3pxHKjiMWucmm
yFuYss53SRop4+7tLc00xaRgXrqIbSpJdz081FpqCi0hn/vZv06QXase/Wbv
NUW4Kk/XWfVjhE8soOr2U1Nw2Lu9ff8xidxdIeQf/NwU8rHPk+dzk8i6RTs/
fXrFiv98C3fxoiQy+nO479En1vhvUbAM+5pAoh/M3cibM8Wq71Zzz5/GEY2m
Al87dhqMfnRYKWTGkY/1VEV+LhoG3zwXXm8XR8wrkwpjFtGw94Hg+MqXsUQo
Xzh1vyANV1oPNb36HEOKg1R8dBRoEAxQTU+WO0rsfR/L/1SiYeGB4d1z49Fk
qWfQhysbaHhbVxvNXR9NAhxv7VqjSUO07odnL2yjiR7DlMkNGvYsbYp3SY4i
Xasd5J7a0nCft712YEUkmWw//tYvigb9+AWT478PkYHFTz1mj9Igs4wmcbn8
ELlnLjnKeiZi7L0Dz5t9h8jJrtI/Z4/RsCDozYYHLw8ShZ5Wwc4MGrR/v4nK
bw4lDv3sNPlSGhwdt+TzVoQQqrhZZ+UVGmZEbXf+8g8hijtPWuM6DQcW+d/1
VQshvwZWOdlVsuJJvB0zVxlM0ob0DsbW07DlNaOqrDGItHwMvvyGdc68c/ax
It/PAHJFrm6j91MaHkrmlI/eDiCn9nHV/npGw+it2ib32ADi9CWtadkrGpZs
bTsmKh5AZr5ff2XwkQaH+0Oe+Qx/smFqZFnOHxrKPnyuvJvqS4S1N2bKztFg
fnLu9ictXzJ7IFSynI2OGgtK0dZXPqT990L5tgV0DE68WTSp7ENc/0obTS2j
4/sFsea8QS+SxeUQtFWGjlkBel/HEU8yt0dE8/E6OpbRD4zw6HoS1/vdk1vk
6RgKETp+YXIfUY02PmChQkfbkHd4lfc+0jYvd4i+iY6LAd8W5jp7kOmZnxEU
czocpiSG3u10J7vsr6JuMx265++cVl/pTu7ddGfXt6JjwqnIn/O1G0kJ7Y/W
2UZHU1X+jJqrG1k3VR+r4cSyVZGbQbAr2TaWeEwhiI4vt/rvOVa5kDuWxuYl
IXT8nRY4HhnpQqTKZpfIHaTj5utvao7mLuS7j2+K7BE6CmxfR7gNO5PYrzap
axLoUPNYJs0h40w+M/m25ifRcSm+sit80olYXm4VWHWcjuSzxWp9rU5E0lM3
XSKNji07nqQq+TqRyo+rTwvn0mG/euOemlRHIk7rt8s4Swfjx3r6VmNHEnkx
TVSwgI6fZiJ276cciLnbghz+i3SYvU9+tMTVgbx/+zl3SRkrH8OTZUdtdpMV
g1WFHE10+PWR0l0WO0nKkvDwmhY6RG+UThfz7CS8etTtXg/o2Hzu1m33JnvC
kdWztK+Ljjx+/XvGBvZk3Go0tKSfjv0Cw1GvNXaQ7ma5LZajdIwUDKSHUeyI
+cSo/IJxOrR2s7l7cNiRNqkarlsTdIzfSRP507KNNESY3JKeoaO+K1hr9dZt
5JqOi+w0lxke/7WVrPezJclXz/zJEzeDYn6MlUaPNeEZcOnbutIMt4JnjHgK
rUkMr0I59xozRMYUH6kOsCZhe2vd/WXNUHF99eg1YWviufbpY6qqGabncrz3
79tK6Bl8xV9MzLD6606p0ypWpOn+0+hzdDPQxk4PrV9kRTCeu9uWaQZRet5a
yfeWRHuL4ooGSzOwHQn1kjljyVqv6EfSdpphC3/BJ4+llmRBeJSNjr8Z7guH
yD1i20wqx77+bgg0w/jSfd7KTRbE1X17vmmIGYpD3EO/x1uQpi0bPluHmcGq
tcQ9frkFiZF6FeETawallIAtObLmhKtt0+Xz2WZomlp62X8ng3Cs+MHOd88M
Uc8NTcQGTElF/M5L6U1myNv62kzxoilrv91iLtFqBstdYkN1fqbk3oe803IP
zTB1g23nDm5TEl3LVDbuM0Ni0pc6MV0Twu5waXvoZzMMxJX2GN4wJmwlDtff
CjCw0/zUYv0hkJavz3zyhRgI2dtuolcOkqxqpbJLlAErlyxx92gQkVrjq09X
MnDvuoiAqiyISqvc5TY5Bsb3Tm5zfE4huz6MX7xGYSD7ymsLl996rP2Jl/t+
Qwb6L14Iy83TI5+8PsjKURkYJMxWMSM9EjjxrKjAjIElOx69nzymS5I46wrT
bRgQCBjzeyWtQ26ujT97yJOB4owtJ27s0yJH3NgctL0ZmLwj+XRCUItQSw6u
nPBl4NLVjV/6GzVJt6pXrncwA/Sph5WXxDXJJ2KV4xTJgInv/ORMnzq5drR9
x8qjDDgpG05xJqiToFZjsRexLLfPrX6jo07mN2tlWR9joPdyvKTqOTUi7CCR
aZrJwMNtC8cfHNhIBgrSbTmzGXi0bXfIStWNpPDDUqHGM6x4ma7hwSOqRNmb
LV2ngAFFCUkwHVUJ9fCHVKUrDHTRes95l6mQgJzrxwXuMXBr1+4713kUSc1s
Tvy9JgaMo76VBBcokFmHuKiAVgaaqCtlZ3UVSLz07uCehwyE7o95xuEpT3Kv
8O5Oe8aarzd+9G231pPmejclgW8MXIl4SVXVliG8a63W3RtlIEXUS1C8WZpY
HtVfEzDOwEY3qv3XrdLkBW2FYM80A+kexvkFPlLke3fjn1QOJi5uqt9fUbyG
iL6T6OAXZWLPysixZcHiZLcJd/NdcSaeC6XkeRaKkcJL4/X+K5mwGP4wYtkj
SpS8HlQ8lmLC5LLzcl9dEWI4GZKTqsz6/aLlW2pVBUmcnUu6oSoT6xb+rNE6
sII8vGmRMqbGxC2Bv+Jn7wqQbUdkoq02MVH1K+hwnws/8eTu2cdvzIR60ESX
R81Scn1f3Z67JkxkT2vXRicvIRMdxbv96UxsXRxjJu+1mEScjLB6bMGEv8SK
+oPmi0jTuCczypIJWiV1c48FD+G13Way0ZoJBaFdQ4I7uUm6mLJO6nYmJjzE
XKtyFpD+MFF1w51MJExf5bjXyUVWDXIqj+1m9Re34K8QHxfZg9F1BU5MyLue
LuHZxUmKC1+ssdrDBAZfOIzVcJBvXC3i7O5MvDGiBa6X4iBqe8sFyz2YEBiy
NuA4w05CH+TyOe9n4hpn6Ip+KXZSp5jAw+/DhOCsgjnnLTai9USkM82PiUnn
Cu5t7myk7PClVMFAJqaqhKpS17AReVntbZnBTGTSPgTMPJ6nFHa2iIuGMnH1
aufP+oh5imTIttfZh5hYNbm6Zo4xT8lYNXxeIpyJZcEi8TSNeQpfa7BHXgQT
rjGjyuv15ykJvguUV0czoXLoXbDinnkKu2jG2LkYJpq28ms55s1TDjXKVEvF
M2EpHtLT1T5PmfCoPFSUyASbu/RN1c/zFG9+KlmXzESE9x2L93/mKcM3ezmL
U5jYrDF+UIaNjTi57GmTT2VC+ARlWf30PKWf92fy5VOseEV9OM+/nadsvRFt
pZzJxHoDYQ27u/OUjp0CwtezmDDSeMGlmz5PoXIVvlA9w0SD5u7+0p3zlPor
G/Mr8pigHjQSWiQ6T9G2vbtH4xwrXi1lycoHc5Syv5Zy1YVMfL3QaLXYf46i
cHHoq/YFVn3O5Yv58M1Rzm/2K795iYmZAz7P9Ar/UiSn54P1SplIYzz63qv0
l5KZf0K37goTOVfd7mdcm6Uso6+ep1xnwqD/Se3Q+lkKRzYlwaiSiSiP9vQT
HH8oYYZd5k3VTAzpnTaqcJ2hTIzs5je9ycSV6gf5Lxt+Uz7qhueY1bPyifo6
1eDyi+L0boljRyMTvZCu1bk8TXlxLFfa4j4TcXHmNdrfpygPB25fsWxjoi+G
c87AbZJScWSm3q6HNZ97XqW9XTtOOXzvwDu3YSYK30sJLNw6TJn05C7++IkJ
x5APt78nv6f4rDjtte8LE0JLJ2wftr2lOLtWT3r9YGL/0lU/7iUPUkwXTnIH
zTChdncoovBlN6XxWszDyVkm9qmsfD0r2EHRsRNMPTDPhOKbEA/nlCaKUrG6
eBiXOSbWKlcHRl6n7DfcFfGU2/y/97f/B/+e+5w=
          "]], 
         LineBox[CompressedData["
1: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
xcVbAy5zMwIg7s+30yP/pP//h/4FBiZQ/A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
CEWeUYUfL6iCxrbKHJIeEYTmBUdK01ThnmPW9QM4Iiwym1mYlKoC16671Wme
jPZ7s3d4D6lC1xH/gNAbjPYPNClaH1UBWpqkG4qJEAcdZzfmVOEJTzoH7yMi
VJT8CiUyq4HZ1TOHX7wmwvQ3XPK9LWpQxq9CVf1EhF3aKcX8nGrwqzPA7cYi
ES40yI+NCqlBSHepRTwXCZpZQ1dNxdSgdvvexyziJFglNvAVSaqBcACkx+8l
gWoyu/J2OTVwpKXHJBmQ4PBrO3ywkhqMyEWM3KCSIFs412NIXQ24/+7wkTpE
gteuc6eNdNUA6vnjR8+SgKNANy3XSA0CWG+upNwigelsTMUWUzWIPbAswNlC
gpMq3R0+eDVoz55UF/xCgooQ4ckeihq4Hd4mcFaQDLs2yoVv2KvBQ5N7Ex0h
ZLAz+6XJ5KIGd4Y9UtwKyZCUgLM85KkGl9LVHz0aJcMa32iMqp8a6KlzJ6N9
FFBzkM9ODVaDZK0gmtZlxv6WHfJw7YQaeEdP6p/pYeyHcuxzz2LUwGGY48c9
eypUGOnaOWSogRexw+9kpCVMR8cEPM1WA2y3Rcv4S0vY1daVKJWvBhpxfDq8
4jRIsvaqnytTAz9r59zMZhocPXxFLvqZGtxUzorJv2wFuy9/WSv+qgZPBa4a
X+LfB/UeUcVVS2owZDQ4WWa2D1w1+R2frKrB2cyGXd6h+yBr0ODRSxZ1sF0t
MKwZ2gc7xc+HfRNSh0zSzaXzt22Ar0R+SQupg/nmaD8ZVzuoPF2XZ2yuDhpO
z/f8SLcDK6rVPhxRHaRl8ibd+uwgeeFEpb2NOkwLVb/kIe4HTt22gFNH1EHp
dJjBF2N72NxyaK4hWR36ivTbjHCOUHBt7UZ7qjpIfbmdr3veEcyPXCT3XleH
90vsO0a7HSGGvabkY7462Khs5lI6cAA2rFiPbX6kDmW4o7jVcCdYHc2bJH1Q
B/+SlmPmwy7wZeX92ICaBoT7/dGfSvGAB0eSm0k6GkDeeWE9usUDzg5hdxoM
NeAU/4GL6T89QOhhtl8xTgM4Ocx5NJ09wTTM6XeEswb48N4PQcoHIfPHoLB0
ggYcn63wwU17wSEv+p+Mixpwlvm+e5/EIVB7rT2+/aoG+FlIvv944BC03k8t
WsnWAPNinqarPYdgMXifbud9DQjdYsRu0XwYCItdtsHvNcCe+DLGoeEo8Huc
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
Pz+IEZy/2s/o0iDCcAEnfnQQK5sRv8FFoTHeV4kHXScHsITsePcxSxqcULfo
kXYawLz2zcvcs6ZB5zMv++3GA5hYXV0F1Z4Gt4wc1CJYBrDzyU6tSZ40cBT3
LNS8+ho7qnN9kf0kDUwuXorY1daPmX9hevj2NA0eV2gMzd7rx3bfOhpREkmD
14ojZXNp/djgNr2tpDgaKBcy28Qc6ccsRgfFEpNp0OE6I2TF3o9JxQkQtt6h
QWJdpf156z5sQy9i+1ARDWo7wz4pGvRhb+Y/9d25S4NPpuT1Iqk+7LL9fRdc
JQ32z09Q5JZ6sb+K+0Li62iwp1dJIvlKL/b2/WM9uwYa6NXX50SG92IPUiU3
pJtpMCo6Wb7LrRfz31hIaGmjgVVZ5fYDe3uxkd7knE39NDBou2Et0dCDPaKv
HOwfoEHIkNTfn3k9WKqhm0L+MA2+uz/DWdN7MPJtlWrTMRpIePHLnyL3YLXh
XS+iZ2nQkhKd+Tf7FZamrJ1sPcfoL66j867zKyzoY5at5DcaFJ+0gs0irzB5
iu/7xh80eBqesZ5yuRtjZX5dcHmFBjVbxFsqiN3YhxpDb/d1Rvy5B4ctmbux
Ou98VbU/NAg6T13zeNiFpe/mWP77lwa3Wetmxny6sP8Bf7hdVQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFunk0ld/7/y9UUlFSKJU588wxnv08HBwOIUNShiRS5pnKfEyVhEoyVUSR
KdEoyVBSoaIyNJBUhGYhX7+1fp/X+/7jvtdj7X1f+7qe+7r33tdat6ib37a9
7GxsbB8Wbv/f02zvaFfjp2tUtv//4jRc7/9GKIv8H6sVZOdeFSr6j5mPe2vy
hGr/4+3uv+9kCDX/xwNKSYbHhJ7/x4VrLRNThYb/41iuq1tShH78xw47zlVO
TnHi/3j5fOwuk028/7Gk9dfR+0f4/+OwJ9ok+4fQfyxQu3pw0aLN/3Hde8OO
p3pi/3EPI3bqmMn/+FdFwzrzbf9jykHt3Q88/8fX1yj9asz4H9+grxepGf0f
3744GZSVJf4f969QPLOt4H88G3igYdXl/7E+GeE6dvd/3NDbl8f6/D++y9XW
FgqJ//itL+e4OlMC3hs4n7kt30Rle0Hj+24nAfqOeA8vPKSK6EZTql0lEL/e
w+5cxgwV527v8jsggW85gY3qAcLEdenfWIVQCXTE9q64vFmdxPhQSr7ESADv
D6i9/GdMCp8Fd1w6IoGP85/GrG/Yk0btminPUxJoCzM+sEXTnbwtmFgndU4C
c5XTGkaX/AnbEgW94TIJVKrby64fjSAi3vt3n6+TQJ+4l0W9ejyhdZckut6T
QFLgtZxBryPETetD2aYOCYjY6cvkfc8gcfliXf09EnBbprF/JvYMOc/p+ivn
nQR0lxTLNLQWkqb9eRt2jEmgztz10M7zxeTqpwMHnH9JwGXPtGYKWxkp2qdz
aw+bJKo4HBXbC6tI1keu5V7cktgX6zHep1dLWB69jr78ktD7eqyxyvk6Cf1Q
fDlokyTaota+D1t1h3i4B/8Nl5ZEXcqXV9aK98j2IQOzKFVJRJx79bZXqpkw
3FbnxOtJgmHd8mh5WBvRfvfmU7KxJNIK7PM0JB4RWdcK7TQrSWS+vUNk1Z6S
DW8OpWQ6SiIdw7VFz7vICmfmq2x3SSyV+j2RavSczPULyeT7SkI67vqMxtce
8nXnaPiFcEkwTcwlvDpfkac7WIIVRyUx4uY1ES3+ljS+tNl39ZQk2h26zYa/
viNV28WuXy+UxOIen1TfV0Mkw+7u9vu1kjAobGvXWjlK4p8fK3nQIIn+jlax
pds/k2CbXb8fP5BE5bJeienGMWJvPX3qZb8khtIX2b75O0lMOttGBkYk0bV0
TMTG9RvRsjylOTQpCS0R9mPfXnwnQhZqPeOcUrDjydyTMvWL9DN81nIoSMG2
ZvdPy9E58rhNdy8XRQpiIr89PR/PkwZj7msraVJ4YbNSmPMdGwroJbaCdlIo
8hk3qBtjhxveZSoclsJaZYU7J5yXwuZu5ZBqkhSc6COW8ce4QKdGqWmdkEIF
y4Kz9v4ySOpteGZQLAXOX25+R41WYJRix+fwWArVlq77Tj1ZhVd14m5OvVKI
USylr4tbjXaNb9Vu76SQUfE2b1KLD2Vqx619fkpBVvwLd1bVGvgqPUyP27gF
kiGGjo9a1+GnlD7vFZ8toDA2SBumbAT1vUFbavgWPP7IHXw3bhMS8xjR++K3
wDa86MqN6M1Yx287IX5mC0xLWSPcTSLQXHTgaU7zFph3MDk4+sQQ3pd9PHmD
ND5X8/btdN6CxlP5Jh5S0rCYXRvr+msLuLYVzRuqSOPItaqxtenSOPOg0m/e
WBpx1uoJpx/I4Oa1VsvQQGlECmwNm7WQx+zxH7zuD6Uhkpf8z7tbGXTm3zba
c2mMWyybn5RVwdElbDGb30iDoaxiz5Wggo2Hl0++/iGNePFMng6KKqj7xTqt
RWRQmjfgkVWkhmi6VToJkwGfvIwRNVUT7NNlqzZIyqLmVsieVQZ62PDY4DtR
ksWn9Nze8Cw9qJ979cJdWxYGL87f8BjRw17TpWcrLGRhYn205G6yPh6ccZM0
CJXFIff87e9bqTiuI6Tj1SaLQLk490sZQClPlXBalyykFBRoXPVA43vj+Zo+
WagxzvIs7wO+pQY3z07IwmPx3YO/RWmw73u6NV1QDmEN1w+aldEgfChxT72X
HBhJhZ94ygygYbXRuD9IDpeG+bvUHxpgq0St9KIoOaSKOOhMjRgguuPduFmG
HLzFAyEvaoj3wvrhgzflML6Ps6wo3RAzk88cOVrkUNJxzS6szBD8Lfv1pZ/K
ofn5id7BFkMY+2SzBw7JYW/mhjDvaUNcuvP96OIV8tB+PfAjbicdTSdS/WTX
yaPFXj1+LpCO13tFt1mKyOMw0+jSylQ6VvBYCpxRl8dByeLiiTo6/J0vn5N3
kseNsbGn95YbQXPetc6mQh5Cp39U/jpnBHOLxjij6/KQ3Jxedq7GCHvObrak
NMnjZUBw1kSTEdIpgx/X98iD/9Frj8PvjfDJb6fQ+zl59GjoXq/YaIzct3aH
/C0UkPQw0O9gkjFqFK8x3LYr4HVlAut5pjEeHOJfa7tbAU9V1g4uKzTGT8Fn
VyghCrBv8L+9/roxtlpbvfmXqwC1yBXRlh+NsajJzODYmALM1XYqPzYygeCq
yzzRvxTAElFvmrQ2gaLzsj5/NkW4HBA5r+5sAse/bUG2/IoIuN3JUAgzQa2q
UfEGPUXI50elWJSZoD2mKGClsSIUrdlXvr1ugrdPOKjzlorw/S4qXt1qgpUH
mnre71HE7Qv7N28cMoHHBcJ1+YgitDL2SR3ezMChqfznZ08q4rkp90d3JQYy
yb/CYwWK2Nmy1voiYaCx77Z2wFVFHJ3vjTfYzYAQv84BrT5FGPPt1NC4xICy
2xmK7AdFbPdoYZDbDBhX/eEQnlDE8fGqlptPGQg0r8+dZ1eCyBaq3Oo/DHQk
qD9plVXCvtJGvaStptDhfcR+QkMJLoZNZa6epig9s5uyE0pgG7b+/DLGFPEV
aYUTdgvtxhFSNdcW+r8cDRSMVcLZU/q6TlvMUOoWXfL+iBJmxbRK44zMsG58
bX/5KSWEOl/qc3Y3w9QiQyNauRJ+T8Z2GRct9JfLE9jfq4Svi7UmxRSYWFen
Zq7+Xgk/1qbLmFszkbCg6L8xJfTYrv9EC2Wi6vJMsOkiZbxoKI3Ia2LiyF3p
wYF1ymh/tPPpzr3mMPgUV7XEQBmOcn8ubHhhgQjFJ+0HTJTBJkN9p7V0K6qC
hD50mivjaJb2Q1Odrdj0r1Lo7HZlvH6p+9XywlZM8w3EKfkoY/gkr4BirCWU
HaTzsgKVoZTPtJC5ZQmPvKD66TBleKjlJsv+ssTzLdxj9+OUEVE1zl9EsUKV
HsXOIVsZIeZziwXrrfAxNs7vTp4y1nx4lmrx0gqb2h6niF1QxvlYLWHev1Y4
au3eMHZFGZlB2wZ0iDX2eZzYEntfGRK8QRm2ndbYnP5l+tJXZTj83v0tjccG
DbujL9V8V4YrW4GKsqYNnNXW7Lj1Rxk1EZGbdjrbILdH53oHuwoKS+quW1fZ
QHBjaujEOhWEBpT+7nO0Bd9l6e/qRAXCWLKS8sgO1Qdvn9enq2B/d0nI0Iwd
rCysthmbquBn8OdMaQV7HJ8Mq95uo4JnLrX3Y07YYwWlzS/SUwWr2Y/Uxu/e
jsXNe8fuHldBUcOO9kubd6Do5PTZB1kq8Ix4uMXWcQfonseYXWdUsMRmQ8zF
kzsQx33t8vsLKvC7GfHNmMcR/6w4vRZfVwGRNE06sXQn/gyc/2D2VgVSGx0s
Nm9wwpffbwZfKKsipub+N9qIK+o8jzeZaaqC0hqecYBvN2J6qRfv6qoi843R
XS6yG+vq83wuGasiv6rvYcGZ3TAI3Tl7aJcqYhlBV7bauiHnR4+QRLIqQi8E
3Vrzdg/2uifOZR9TxdBcq2PFGncoP9d4tzJTFXnxx07cN3FH69Ws0t95qvAN
2rbcpdodU4HbKI+uqqL7ZKfgntS9YEw9tg18owrabC/zjY0n1uw+rPVxWBVb
FtWXGx33xGCnvPCuz6pw2LHytOwjTwRXHRky+qkK8YBNV/3p+1DgZxootFwN
XdPbkib0vPBrvPl4o6YaPh/zfX/V6ACKPt9q50lTg1lkww+Za37wPW0pvj9T
Ddds7t/s/OcHCn3oYEu2GsTDxxghEv5oz+NWOHRBDdtPvrPS8fPHlNWO45+u
qyHLNTzRY2kAqPW/bJqHFuyd+nR5ghaIV/EqAxHa6vi0ur9ZoT8YPBtLJoaH
1UG/JFIteDASsI8fGPqkDq+Nt2ZUL0Yi8LjLo/df1fHk04WibV2R6FkkWPL2
jzoez3i+zdtyEPkjyc79KzRAUqwKjJ8fhGLV/sfP1DUgLuE7/Vn+MCwMFcua
EjRg8+cGl++zaEQd4j5zL0UDUSsiby2di0bVtZHExjQN8PU9/YQ1MeCXLnBr
yNbAp+DTkil6MehfsWr9zXINLP7a8htpMfDumUqufq4BukATrVkhFke9rnkU
SmhiXP5cU69DHD7jSvJyWU10qWT6TR+Ig4lg8eVQJU1QC/VGp6LiwN6W9dVc
RxNXlHh3uRfFIUIiOHTaUhP+ioHRuuNx8HijmrjtoCY80i/92xgaj+Y62dI7
MZr4cYHjpGNiPMTSxNqlEzUhTL/hv+dUPAb0+Hjm0zWh+ji6rPdaPGxzpk6W
XdREgMm+tTrf4kGzqyrm7NbESMjZCF/XBOTLl7b59WriH+/YHwWfBMxyFH56
3a+JB/O3DlRHJOB6zXGF6o+aOD21OpU9IwGKq/yuOc1povbOOpP7dxNw9KNH
7wN2CoZ0Hpacbk/A5wbnaTUuCupzpf/Iv0hAsc9Wfe41FJRNqU1lf0qA8COF
ljppCn6ca5Tx5WUh8rzkR1FFCtQ2/PKkCbLQG7Fx2TE1Cpwn4q2eibCQIb3S
Yg+VghyR6g2qKixMznP6PTGkoOiLyqF/Wixs7Z1N1zalIKB4S3oyWFiWOPac
15aCPRxR9BdbWfBwGv4VuYMCz1nFgtN2LDSr9wuOOC/YdxESFdjFQszQo123
vSgYWKHLa7GPhcGb96O2+FFgVN6kweHLgm7GrcKMYAocXST+hASx8Atlw/ui
KTC/lDSSfpiF20VfzoYlUJDiOV75JZaFOC55m8QUCipq1E4tT2SB4e3NfTKN
AlpRwcnJFBZ4OsvvXcik4KFd6OWcYyw8VxsPr8mmoOPtbOeyEyzknFZQvpdH
QZdz+GJqFgtSLhX5gyUU/D3jlvLzDAtjTV/txssp2O4m9yw8l4UaKaWVs9UU
cNHsFe/lsxCe6tfMXU/Bmab7FU8KWaB+rTwodJuC62tc9p07zwLntklV6XsU
8O1e46ddxEL7NeXPmq0U2PQ+6jlVzEK6UMA5o0cUyF0IunrjIgv2h6sdbDsp
oE/9FDxfwoLwuynePS8osPiqv8GqlIX3dNW2gNcUfG/VfHJ/gUtLA6Ni3lAQ
W7LMeG6BfVdc1Tg+TAG7y7vC2QVW9/8+lveJAuvz57iaFvjvM7Wi8q8L8+vT
WmKxwI2U4J23vlOw9M6j0oKF8RLP1vK1/6Gg6aiC5vUFf8znfzx8OUfB75ee
kacX/OXboxH7kV0LnXm/CvQX4nnZGqL1a6kWwnvtui4vxJsvWzfBuVILQnGL
tN8s6OGe9uviGj4tvDkTsqhvQS/Zb5rOYgJa+Pav2D5/Qc9Ju7C1KsJa4K7X
DJDJYeHajfoOIqqFrOuM9EOnF/J145/4rVJaUDTm/n56YX4Qq6XrJKeFg+cv
vTy4MH8djBuXIjW0UNOlI5OfupC/5dOuKTpaGJRJ4RtYyAeHVTqC2UQLtJ2+
Bz/EsTDcezPxmqkWVG3rHthEsnBZd0a/easWrpdD8WYIC/4Fuj+7bbSwVvOU
6Bd/FmY9bu+ZdNLC1yVhP694sMD/6w7kArVQKf5CvtGShdc7/v3WDtMCz9rY
vnhTFgrvUCsZh7SgczO/gN+QBXnW3Y0eiVqQ7Lauytdggc5/729hjhbeuR1d
6rLw/XGHL6qpLNCChpiG7MlVLHT20bwairTw+pUA/SwXC7suNPX2VWih6KJV
n+CfBASrNteuu6+FKwYiEsPPE+ChLlJ44sGC/vLfbvcvrAcOmoeOrHiiBYFR
69LCxgTo6qi7sb/SQvHejSePliWA3aCI9+tXLVSlFZzliE7AceuE/S3rtVHr
ENwzKpyAGJu3dhDRhvuyt1W9vAkItNOj3ZLURvuWkNoc9gTY7/ghUK2sjQpH
7aMFH+MhvNu9JddYGyr6SquuVcbjsj9dJDhQG3WpTzmytOKRG1i4fCJMG0fM
Fu9aIROPY8Gzv7wOayP7w4FdbkLx8A+vfeySrI13f9bdvDQdB0qMxEFmvjaY
xd8v1l2PQ/Nxzh6xdm1cSFm82FIlDm8qmo90iepgcSrPuqxVsegc5xxT3aKD
P+dT+fT/xaBR3sg8S14Huw6G9/Z8iUHh5ZYV2yk6EH7KdXOwNQZuF1uP9Zvr
QOL+6QGLQzEYyXtw/GOYDiwX9dSqtEdj/GhH5txjHczMbnlnsucwZvY/PysT
qYt37FsT03LCYavpdEIxWhcfT9Co58LCUb5oJFEtQRdTSs7fm23D4Zz9O0A/
TRezI1wrabzhuNeynmF9XhcdItHVAqwwJIns/hHerotXXNMJ6cGhWNMzbv5g
vR7UxDes5tgbDO9zoQaPN+shd8N2uQ/0YDR7z1O6JfSgLcqT+F4iGKEcq8X7
FfVQb3PzidKHILxSVp+eWKhrnWwveq33DELBkchigQN6aGTfFOrkHwg52tJ/
Hrf0UF4cY37rjP/Cebpsy8tGPQjElXDNRPpDnd/K2rRVD2e1UuJcd/lD72N2
kVyXHqL+9XDmbfbH1mOyzMmFurhlQkT1jqUfAl9ZZEfw6WPz8rB18tE+uBGQ
pXrUSx9CyywFFAT3g9qntWvOVx9/f24asRr2QhN9gOUbrA9h08glTVVeaBeQ
emUVrQ/5n7xjR8y80H+nPnrtSX1Iyu4Wvh27D2zcfR35jfowXct5M/yfB0zO
i3pWC1ARedtSx0LZHerZPFKtwlR8YEacvszlDpG0meHXolQs2Rwya/xuD/5G
vHDjlKdiU9OkmF7mHlyxTnHeDip2OfC38P11w5pFU3Zz+6i4Z3LZgP5sN964
NNJNb1JhbpiUt8vdBR12Vzic71LRNz13nlvCBdeZOU2BzVQolfFXSw87I4MS
jNwnVFjOrJqu2esMI15pvYn3VCTdqaz55uOEsobjaieXE7j4+9RXZOxE2EYX
sXe7CCSqiwRSZBzgZqVs37+b4OULpYVFdTu2xi9K7fUgCCoY8bZp2Q6pTxem
HvsTJLpmSR11247ntaONNxMIwmw2Smqfs4eyeaBLVjmBY1WaKL+SHYSjDTOP
VxMcWrxJeRu7HZbW8Lel1hG474nOGH5hi0GBesXYRoL8/rN7OaNscXRoZs7n
OUGUbshDsW4bjEayck1mCQ584J3xS9mGz/Zy+86xAQ7PdrDd3L0NrpNr2Ddz
APtikpqsdLaBKf5BYz0XcFNBOddtzBpiKUl5q/iAuu2mRdy21ui07fCekwQi
Wh9qLlGxgvyY3fJeC2DumLHiGn1zXLc1v5tqBRjUPkl8Nc2E4R2DIKoNcDjf
bKlaPROOaUp9xQ7AlxqGzlk1JlKUl5UF7wGKJAuSxdTMMBJ824wvYoFXZUxL
mC/UtwM1/1oOAr1fQiwKVzMwZ3SpJiIKuO1XR8vvNQG/wKn17+KBpE11cpv2
msDwht/nyjRgV+qedWsSjVE4J5ZqUbQQz8qJlOlBOuQ9hKiLSgCTopMn5crp
qH/C+632ErDzUJxUVwQdTwpmdwhXAum/uG2D1tExR+uR+XIDYOn2YcbWEI6J
KQ+TnwLapjkRtiM0rOGd5Gr+Cxg66OYkllLRfSc1yXQOsJYe9zq2m4oMb8kl
T+eBU2EuRUobqOBrd+R4zUmD+9AVJ1q6PvhYLXMTPDQI2rMvCYvVw6qZnG8b
xGngLJJ7IB2tg85LGgHnJGkQpjrucaDpIN2hc0JKmgYviyTx1Zw64K1bPK6i
QMPd45ENQke0wRPg/9GEQsO/f2tXeS3sOys+GvUHMWnYpj9qwPNWEx0n3zpO
W9DgVKMgbXlZE0fpB19FWdFw4N3FcK4QTSw/X9WTYkfDjfXrit8u1wS304au
Ahca2K+tUVlJNMD1bLLlURAN5ns+UZNuqoHz7tlK8Vwa+Jt5fpTNL9TdenTG
m3waomyWfnv1TBmVN8fe5pyjwbPDryi4dKGOr9Pn4yuhof3zX8mxbcqovvIm
mK2GBpOXLUrHdyjBOVdcZ6CNhin1qMNXRuShvr6jO7udBslvAxr1Z+WxLDv4
gO1jGnwslM4espZHbWZL7qNuGgx4RS+p3ZXD8iOe8zcGaHi6PjtC/IIsrkeU
NZ/6TsPB5CNhx49II+23jdO2XzS09AR9S2FKY0/I7M+V0zSInIkekFwhvaCf
xRbWPxoUE2qhd3wL9u6bSAlaZgB//Yjhm7lS4NuuZmm12QC/A19/uf1MAgfU
b71axjTA0C1m5/ZSUTR2vii/bmEApSpD6bJIUaz1mYz2tDKArHkZNcBCFHeL
JaVa7AygmHw7y/qHCNYIpAfGuBog+sBRT2MTEdyadl/+O8QATB49T232TVh1
KnqwONwAp1cI5RnWbsRe1Zxq24MGGFeQnODz3AjeA0+318QYgPRu6Z9+Iow9
/dpFPkcMYHx1d3J9yQYsv8ujP1xoAM2l83meB4XgulNmVeYFA3TFGqlOagnh
2m/DIdpFAxy6y3Ff9LcgXJQjUgrKDGA17NoSESKIq+eGXjjWGeDKOdkH3REC
2Jlw3bfrkQEGHNxynhesRZmpW2HDLwPw4IL+jD0f1OVFqWTaANsDni1bKsuH
Bp63fXdnDGCf2voqam41Op85CdxjM4RixlbHiuLV+OG0I+0+tyH4q9iyJ/+u
AjXQ6tCDTYZgcrX1h/rzos2Wd72pqCFy3LW9ZMV5YUV5Uv9Q3BDvAw58Od3D
A7dZ5vd2aUOIYWxzLuFBUqLJ/seqhnBbeVZsw/qV6MyhOnQbG+JHltaMwwQ3
dhye+7nN1BAl10LUXpdz473L7cxnTEO8zhxom97PjR8SOk+fWxmiLllhMf+n
ZRCq1DDudTQExfZJV+0YF9zuy6v3+xqi9nDS/b+8S/Hzy/pVI6cMoatlMahz
hwNZeR/bcs8YoudmUJV6MgfULGujbXINMckuN3/XhgMBNRYTjecMcWdxq1r8
GDvGw2OenC03RPLInX1JEuz4sHjkqHWTIaLPakS+L2dDQn0NnavFEI+KLdhW
x7BB3Ct6tqHNEJ3mJ1/X2LBhd4egt/xjQwQsT+fL+DNPBjKYzKUvDREn9D7K
qfgfebG5etmdcUO81C8PkZGeJcFdh+8FTRoiQaQxSa1/hqyJN4uQ/W6I5ekZ
VUtPzBDrkaHR038MMfpX8gPn3F/yuHzdg0AOOnLpX5RXD06TFu1DidJCdGzp
fPngedNvcs3GhCOLTsfrc4URvst/kGTmdZawCR2ZcSnfa15+J7sMZbiKTemw
XJVlG3bxO2FXW76ybisda5bdvRFp+J1s5Xu67qUDHQyGQToj/hsZ7bSXFfah
Q6q13HtYcIrcetBWXuRHR3Syl9rx8UmS1qilpBBIxwHL5dnFTZNEvWq9OjWM
jveNFdKrfCdJ7PFBfddYOnpKDM6fz5wg67d6WBedpOOn7413ndLjZNyo95l8
Nh0GS/k2vB8cI436DPtrOQvjC177WnFyjHgoyO5sLaDjeeqzVUGLx8jVFV/d
Ry/R4f6P/Ng//pmYPwoJl2+gYyTetMd4YJREM1gFtSN02F1UX7tO5QPpdt63
S/kTHT5U/rdas8NEIoQpVP6FjnnO5VVv2oZJ+7nVmRcm6dCYvFZ51XWY8M/k
JWb8pcNsMWO3RfYQKb1S5+PPY4Rzdplblm16T/7ePyM7tsoIJumT1fcm3xGL
14c+eq4xwhEjevzH++/ItyWGu10EjcD8bswMOfCO6Lk+td0qZoQHRn3SmXff
kk6+UV15TSNo3/a/ver3IBGTefSnRMsIWx8OP8i+NEhCSMU1cV0j6F9+6jS0
a5Cs9w5W2gAjrGJytdS3DBD3FjZxbjMjRNye5hQv7Cd/woS4R52MULgoXlYp
9DURHTB7eYFlhOKh8IuDOT0ktUm30i7ZCC6jH27sceoh30rkE5ceMcLFVstv
6SI9pCmQR/1AuhFuGu6f7Ct9Qdy5uo+rnjXCePmXn7ONz0mp2g6Te1VGuFVU
1la98hlZJWS2KeiqEWKczK93vOomEf90fkrUGcGwUdbE/2I3MXsofCH5lhGo
1yedTGnd5Ivz23+WrUZo67Q7KXC4iyimetYN9hnhX39jNW1FJznl53AsfdAI
Vl9e2GU0PiXztqbuBu8W2rWkWce8npLOzXJ8F0eMcIe4tqHhCQm49tXHZ8oI
yLTgcw98TGrfhkjOLjFGvWBO/EeOR0SHkpAlpGqMsYbkq+/utJIeNyHNPHVj
FPvaqlyObyVBaRW9IhRj9EcllbCbtZLyDy/XS+sZI+vLWJ7LyxayKUvhnKax
MXI2aWRXzDQT9qmeKzaOxihTuf21bed9ki/sbdm7yxjLhtLbN8jeJ7qMRVOO
LsZIzZ8SnfzTRIIL5NTd3I1R7izivi67iYxYxNz09zXGtNzVDdT+e+TRZZm2
Y3HGsKRVxosebCT7ehr2rWYZQymtd4LLupFwsttyn0wyxu+0KsfdWxoJdUeU
Re5RY+SWH8xpunyXVC199uzyKWMkmKrv++vdQLLcD71tu2yMLW4PZnLX3Sa7
Nj2dXvTMGDoDQVt6J+sJj1DgtVsvjEEby942VFFP7q1ZGxDy0hhOPfOVxT71
RGrZztHRAWMUXFmkTh+vIxPfR3qejhpjKPb1vcs/rpG4h/+u5v0zxrfjy+aU
xWqJevM5v+2LTFC6r1I8+/NV8rGBLrea0wTOe2POZFy9SsxrU88nLDNBp+/O
Fj2Tq2RtwboTB/hNkHreoNIopIaUBiv6asua4HmWnr3Ulyri6Ncl813eBAdk
yrQot6vIyv3BH8qVTMA0khh8cKyKBLrc3CWiYYLgQ8KdXqpVRNfMmLkUJnDL
GGri4KgkTzY7S7+wM8G9NoVkHu9y8rP92Hv/WBNofeloMHpZQvqXv9g3G28C
y32t7QXZJaTJXHhiYU+CuNObscAdJST9yeWZ/CMmuPpVt5rVf5HIdrfxPz5p
gvlIjS97R4uJ86tFJjKXTVB98GWpvUARoa83fVxbbgKWwA1bzzcXiNzOdBtU
muC+0ueVv0oukD/9m1y315pglQD3SJrOBZLxVjeC1WACwZSegbq950nrx5Cy
d90LTKz8JZ8XknLpOyo+L0wQYyKtpFdUSDK9OK//WThHq3fFfnsRXEhcv2Q0
8w6YgOsyqzlToJD8/Vo5oP/RBLJBHUfjWvOJ0q9PvDkzJuiQDjy6bUsuWUdR
OSX5b0HvCpV1ci/PktmwcOFqNgY+wP70mtSzpH16icyDxQyYrvScWTeVQ9zn
xA1+8TLA0dtd9ufRGZLN6Ry8TYKBmmtK9TXXTpN/ewQ0uqQYeJA58fVL+Gni
fr/zp6UMA1GXFFOi9U4T5TjDMAtFBhrUK99ENZ8iD+alIxlaDNy26Z1SfHmS
/P77PZq6UDfsnavM7FuVRXY5XsGdrQwMsaUUPXiVSZpueCzSs2bgp5iMsPSF
TJIW/ipO256B3s0rHptSMonUrwaWuisD91mRfF57M4j9VMoR2WAG3jA/8Of3
pZPbVobml0IZ0BKkia64kk7EqmZXSEcwoBF65uH66HTy1dcvTTKKgReGxw5K
SqYT1pjtCZFkBn476cfHfUsjn5k82wpSF/wTn17LXZhGrMra+DYdY+Bb1NDa
RZZpRHi/TtaGDAaMawbDbKuPkdqPm0+vy2UAwpejVJOPkvUmr7afzGdgsnit
Ri/tKIm5mCHIf46BV1ofjgnNHSHmexfnrL7IwFM1Ji0t/AgZfv85d0XVgn8t
X5zLY1PJmsFr59mbGZC1+PL61KVkkrbi8OH6VgYU4q9zKh1IJty6dAfvhwyE
NMNRWSGZsGd3r+x5wkBXm2N9WE0S+WY9EX7p1UI8+wpidzQlks4WaUurCQYq
n9w9eWA6gZj/mJBZ/I2BtOfZfy41JZAHYvWcN38w0OiaZhB6NIHcjTa6Kf53
wf/9JTfviSaQCm03yd+cprAYOBjvbhNPjl45O5O33hTD39nr+57HEq5+t55t
G01BIua5VpTGkgRu2eqlIqb4MB8x9/VgLDnoed0jQNIUQ373Zl9IxpL9oi+6
6MqmSApIyN0XF0MYJ3lKvxiZImw4fv+X8ijSfP9FXCHDFBATOxK8N4rgW66T
HdMU6Q8/udRtiiIUS7k1d61McW1O6fC2zMML6xUjKmOnKU6fUf3kn3CILD4c
a6sdYIqV6R/OesVFktqpsem7QaY48DXxXyojkrh7OBQYh5rie13LP17eSNJs
qfTZ5uCC/239hzTzIkiC2EC0L8sUqqU3JtPvhBPOB1plF86YIi8x+N725WGk
Vq/ISjbXFMECGeacPaHEvZr3V1W+KSL5t3H1FYaS5pwRNFwwxcnMyLo/mqEk
3ier5+UVU4R71fmmu4cQ9jWTi3iaTKFw0l3+X0sQqUnaWZLVbIptteFpPzKD
iNtsq/mGNlOYPqZe8nILIk0f8k5Ld5hC+0zdhodsQSTuOlPBsMcUj63kw+UN
A8ki5xKH8M+m2D47rrBowJ+wXXKufM9nBrnd/ouTqr1J61ivb8FaMwTdWrFB
1tWbHFW2VtwlaAb9Em27YF5vInDd8MqLjWbokjU5NeZ3gCi2SZc9kDbDfBF1
eJKyn+z68O1iBdUMhzfd8vZ567lwPvH2OEAzg2TO8VG7055k1PuDpDTdDJ2P
d+UHbvUkQT96i86ZmkE09rST2x0Pkspx53yWrRm0+FJqnuTvJTdEk/Ij95vh
bp36r9CQPSRqL5szxccMgSNjh4pU9xD6pYiNP/zMEO0U+tx70o10Knvn+oSY
odvo6tmPPm5klFjnuMaYYfvfp3zaAbtJRXz7jo3xZshyXVk6qbabBLcZCr1m
mWHWLnlH6G9XMr9VM9vmiBkM+cbrFse6knXOG04ZnzJD8qlXrU/1XUj/uSw7
jjNmeMoUb0nqcibnP6xc23jWDIMVjRkGns5EwYctS/ucGXRb3T5+z3Yi9EMf
TsiXm0FWSSexfN0uwt3obP2pwgztDAHe97d2kk6Ol6suVpuhuEDkX8yenWTn
kfbjm+vN8N5cwlHxpiMJzKk8xtdkhi85H4QqEneQ+tmcpKZmM3w9rpvSQ9tB
Zp0TYwPbzOCj8ly8dc6BJIk7hXR3mMGC75huUYADyS3ndsroNQNlcof2vNl2
0tKwV55v3AxMeUF/7y5bwi1qLdU0YYaxinPqOtG2xCpeTyTwmxnecTy6e1ze
lrw2WcPf/dsMAosWX+ZJtCFfOxtnTrAzUWdqsZVDcxsRHNrwaLUgExeMn1Qu
VbQkTkZLW+6tZ+Kj4FWe9uSt5HzJt4aAjUzc8Vk3Ez1sQeS9H9Z0iTGRbb/v
ECkwJ7SfoTknFJioly4R3SVpRhK3u2XRlJk4vebr2LIjpqTjhkXalCoTZRPd
RnnfGMQ+SiLOWouJGbXEwvE2E7J/abfXakMmHCfY/sanGZFKrzt77hktvO9V
rHpliRH58ajUKYDBhCB96fSVWDqJTo+27rJgYksXn1JljCFp/rafGWvFxFmX
5k1jnIaE287eSMWGiYzFhrkRRw1IlpCC9gmHBftW9ZgvppFXBwXVaDuZuNpZ
+1FNi0Y2DXIoTDkxISNyXFj1CUjp+dci1nuY6Bn6pMS5BGScs3X9Ig8mEj2H
hWWsCFH1rOav3sdEIP+Tn09yqeSOXDLXal8mhDjNZ85a6RPN5wKPM/yZCMpm
+yTfpEeqDpWc4A9iokjvQ+8vXT0iI0mxPxXCRJi66LBsgy45/7h1vWA4E3z3
+2T+MnSJcKj9mzORTFyS02s52a9DTm4aubDhMBM/qr26FSN0CE9byL68aCYk
zxzx+bVJhyT7LVbYHMdEpMTDmo1PtMkiwZNThQlMrLjn8CYxXptENkrUiSUt
6Ncz6t2sqU18VtOJ1FEmROkVXB0ntci2q3HWCqcW9MiTUL6iRSEfdQ7nmDYw
4dCumfWgTZm4Dq1wedTIBDmT6vDBQZm8PpIrbnGfiY3qpgHmz5RIR/+tcqsH
TMi5LMoc5VckNVF/G7Z3M2Eg56J5/7QsOdQUNrR3hAn+AEo3W6s4+bl/aenH
USa6KyvU9L+LEd81p729vjAhr+9cf09MjOx2r/vpPbmQH/qrRfakiBDjJT+X
Bv9los3z4/m0H+tJY0VCx89ZJj7E1VKXRQkR7e38J8LmmaBJ5S/j5xUk8qVq
6w9ymuP0H2ExR9O1ZLVZoHwcjzn44sXWSMusIoX3eJfrrDbHkWLRdt57K4my
9pVPU2vM4TpaN36dsZxslR69uFvIHP0spUs5F5eQgQIWS0jYHAI/im7djuIk
3gLi7l2bzFGi9NvgbBA7SV3iLEqTMEeqX7nZPd85qlDUzPwfKXOUqnz+uXvV
X2rpz+zBKhlzhLyVCRH9/ouq5aN5Z5+8OfyOzxl8EvxBbRt+dlZEyRwqdr9f
nY+fotrvCoh8qWIOZuo2L7/9X6kjz3h2pKubQ3XE7KyYy2dqCLOcwqCYQ/jz
DFX10wiV877pOjYdc/jeSTENWDFMzdT5+KNezxwKKYJVNR3vqGI1Cc/8iDl2
hHZ4PlR4S62WEavZYmCOdUmCHGE6g1Scu5v+hm6Oo6t+8D6h91OfCjr5nTYx
x/74pTfs7V5TndP/WliamUPEtkNho/dL6uFojeV3Lc2x/K2lVlb5c+qK392f
QreZoyNhkYJTTzc119f/gaKdOTwdzMqylnRRbzqVsfIdzbGriWcx28926i9d
UbaoveZ4eWdQLaT1JpV1tWFQY585opQr/jWglsovt+vO+H5z7B5Y3XCivIyq
tv50pJO/OcREI6Ln9EOovwIGHaYX+P/+X/5/FLJBNg==
          "]], 
         LineBox[CompressedData["
1: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
M/BekBGyMvr/HvwDx0Xygw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
a4y2/dOuWvI/svZSVJMdSfl69X5zDR0Z13Uu15XYEZZT2im6dXTwXd7M4Zxi
R6J1Hpu0Xqfjl0D7H48QOzL7wYnb4CYdr5+3F9fZ25GgrM8DHbfpSK04L6Vt
aEcm1A8WGDcu6ef4tv2Lsh1xfcfh8qiZDrMGtsI6MTvyIq1QmHGfjpGUwqGD
fHbESklq8nEbHdqnhC9QuOxI18vbleaddEjUCcs9ZbUjBkn00L6H9KV+LVSq
sWBLmqSHla276ShXuijl+suWUAb9/wz0LOWHrNIPme+2pPbQn8bdfXS4ulru
zPtqSyR3HE143k+HZWbybMK0LSnt4TNyGKLD6viu+PEl3rr/EsfIczqEtxkt
VszYkpOCak+cX9IRz/0mu2XWlqx90Jk7+mpJb9myoE1ztuRoqK29+xs6ZnUF
b51etCXL+Ce3jr2jI3ljX7H6cjsS0xL5zmt8KR8jdS3ecdiRH/4ryycm6RCQ
+fU9Yf2SXutOBvh9WsrH5fvq2bfZETfP6z8CvtIxoftBN0FpSR8Og1tfvtEh
pv3BywJ2xLp+4FDIDzpikh7aNJos6bHix8rwP3Q4ChvRpH3sSPPVxK4f83SE
rPl6YXWEHVHbzZsZ+Y+OnLCMGJ0EOyJVrsgfzWoC4QdPjAKK7MgF8/uv5leY
YJXloVytKjuydc7y/KFVJlh+UH31tkY7kl/81oeJwwSveY8NLHbZEW5amFQ8
lwloY7+3PRq2Iy+le59G3TGBm5pDnneFFTn3ifvgsiYTMHK+cPBlWBH3S1Zi
x++Z4N/Nn/tvRliRDyJD+4vaTSCh+GhdoZ4V+bn51ZaOXhNkRDOSeiYtya3n
2zrMn5rA6JHZs2dPLcnBk24hLwZM8DIu631skyVhXfe+5fMLE8x91OaOzbck
3OxTPrzvTfDebn5E3NyS9HdIc5+dMMHHfQ8VVxJLkp8UfGvHRxM8yCllU5Sx
JFuZv3NoTJvgdtFbbjqnJZH6PVfjNmeC8ZOmTz26LYjB+Mr5q5wM8M5J5Iea
WJBVpcYXKGsZmFEr8w7XsCBdbmmmLTwMPKhp1xKRsCBWI1zFAxsZ+LrOZtJ9
hQXZcNqc5sLPANv7n5Uj383JC9us75MCDBTeKnYcGTUnrv3rDea3MzCG/S56
N82JSNbu6SQRBkyeDZ7PLTUnE2an8tfsYKBdp7Semm5Ogh4JfBKSYsDWdkY4
092cRLcIZxirMJDrpd6Q88+MaMd5qT2lMBDzLSKq/4EZYdEue+uowcBBOzEX
6SwzknJTQjkEDBhb1Di+EDAjJpEBr+Z0GQiqmtm14rUpWaN89UiCPgMf48PU
/541JXnV8i/yaAykizDHT280JXZBexMEGQw4NId3tvcyiIBUvdRlMwbCA2bv
bDjCIOfLKLF3rRmIyngX3vvJhFSfJSJjzgz06PPER2XTyfcD31e6uTEwfC+Y
dl+VTlR2l30a8WAg+IDi1uXPaeT2mjXXhnwZOAFfc1EeGmmPe6XzKIyBM6GK
rY/2GBE2pyxRowgGePrLxlWXGxG6msGqtkgGnqr6X44tMiS9M1d6G2MYkBv+
PJzy0oAMux90qU1m4NPeeIsnfvpkK5HXk01lgNL2e9KPW5+4bn4vVpnGQGf7
+JWKW1Qy/tTky4WMJX1rtJO5eajkK1Xg4KkCBmbZQobrn+qSFTtuF8RdZSBr
2CfgZSGI8bLgQwvVDPzxf8i9zhHk2Gsh9wPXluJb+Xv+uAAId/7RneENDIzH
Zw0E6RIisMq+waeFgSbpii3moVrE5T1n4VgrAx0fqQVFLFqk5N69WLcOBjYI
dt7izdMkOw7sNHToYsC7pG6v8n0NovDp94Dp4JIej4wLfimpk4iOypuPnjFw
mttqNeugGmk473rGaJgBVelTlJ79akTLsdNTd5SB7TnLrYPvU4hR98nvyh8Z
qByP94jYo0qcqlS4tywu5Wu/9In0v0rkuv1vrl4mU/zbweMbWalEuFbc4khY
ZgrxI59MDjkrkWZHLbYPbKZoPFLWWd6mSITYqf/q1pnije+euCtnFci4p8Vn
k52m2GFrV+sUKEeC+AMexFibQun6CisZPnHS3ibdIbt7af7X1542iTvIttDp
1rd2piiS1D937bMY6e0IazZyMcXv8/admxpFiUJE1A1ef1OI0dQufvAUJr96
ki9UxpoiICiwiPnsFhKXVHz45WVTZObQczrushHOyJU0tyum2NV4xfzewApS
4BvIM15lCt1rHvPMM6zkGl3t/HSdKaaEfJRT5ZnJOPeTVpYmU/RuEQribPiu
vadKikmt2/S//0n+Dz/Jvk4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k4ld8X9pGKEiVkyjxPmWf2jcM5nHMcUxESkiRDiTRQhqNUSJEkMjWK
zEUJiagoRSiNlGhCqSjl9V7X+35/zz/P9bn22vu5n7X23mstWf9wl81cHBwc
7gs4OP7v22Hz6OPmsVpLjv/3cNuIb38tlkn+P+vlZ+dWi537j+ld/VV5YjX/
sXvAr1snxFr/45drDtmkivX+xwXCrINHxN79x/E81cqHxab+Y4/1heUTk9z4
/7x0Lt6bKiXwHys6fx29c1ToP45+aEKyp8T+41U1K15xckr/x9eGbDofmcv9
x320+MlU6v/459VGEYbL/9hon4lfx5b/cd3KNT+bT/yP6yniMlWj/+OGCxM7
MzPl/+MXfFqnXfL/x7MR2xqXl/yPLcgIT2rT/7ixfzAv6eP/uImnvX0XFP7j
N2HcX/TpCgiR4O7xXyplyfHUSvD7WgVQ1icGbsU9SxmzA0aVvgpIFA9cW3ji
jyUKG7zDtyngW05Es/4OSeK7+He85i4FdMb385VI65O4UKOLn+IUgKFtegP/
7EhBT2Tn5aMK+DA39tm5fh1pNqma3JKlgPZou23KhgHkTf64iFKhAv6WzxjY
Xt5OOBZpmr+7ooBy/XVq4qN7iExIsF/RNQUMym9lXtdPJFZPLh70va2AQxG1
Oa+2HiX+xu+vSHUqQGathWre9xMk4azc4xd9CvDnNQj+E3+aFHH7/sx5qwCz
RedVG+8WkJbgPIn1nxVwjeEb41V0nlSPbdvm81MBGzfNGB7muELOBZne3MSh
iIoFnlr3CypI5geepVuXKCIoPvDLoHkNSQrs9wwTUoT519TmCp86suv9+ZKd
Uopo3y88FL38FgkMiPy9W0UR1w5/euasdZu4D1s77NdVxJ7CZ2/6lVoJzX9F
TqK5ImjObQ+WRrcTk7evx5LtFJGWvy7PQOEBUfO9apLmpIiMN7eImt4jIvE6
5nCGpyLS8a7mXO9jwudDf5YdoIjFSr/Gj9j2kr8vxFTPhilCJaHuj8HXPvLV
a3R38W5F0KkMha3dz8ij9UmiV1MUMeK/dfyA/BvSPOAaVJ2liPseTxzefX1L
Ktzl6uoKFLGwL/RI2LNhcmJtk/udGkVYF7TfN142ShJ7Uy92NCriRedducXu
H0mkq/evrg5FlPP2K8w0fybrnGeyBl4oYjid0+317wlC7W4feTmiiMeLP8u4
+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
x4CWjW+nzRZrUtqXEC55kIEjuu6S7s+tyFjN9NifdAZEl5qubXgGslsjq6M6
g4HH2ZkbVuWD8JzTu7gti4HelYe5GgJBlDLCAgbPMPBHr1JJ4jchtUv4bDLO
MsAhGBdecIoQSsJlWXohA0meNT0CpoT473j36sYFBsTueErrpViSF5rdPXsa
GOiXsl2rXG9G8j+tiF3QxADry1j/LV8z4n/ZVSn1NgNuDw5eL1lsRsYU+ncX
3GWgbsnF7zddTclPiVer27sZWD4Wpao+YkxWLPm8Reg9A7nl48+r5gxIb7vm
irMfGGgLHJbpKTIg2UnhN5Q/MpAQ1+ElYWdApDi/85mNM2Cus1nEI1WfaEzP
VPrNMNDS/yJoUlqP2I0snr26jIlHd7c8EfPTJrzn7M8bL2fC/DTxesmnTTr9
jjq2CDIhZMM9pL9zDXF9yV/4dBUT405HXbZpaBHfXmG7WVkmYu9EaTbeUCcK
J9zHkxSYYG6tL7ypoE4+sE5nCygzQXn4oD32uBoJeyD5SU6DifX71/+o26lK
9rXIp9sbMmEpwRk8ukGZWMZtNukxZuK2VzHH2BslwmV5ccjbjAmNq8veHtii
RJLr1Qy2gwljPSP6swOKhBEd8mrGmgn7G1Om3SsUiYDB1UOJtkzo/N01n0MU
SFaFzvMsByZCN971EH0jT9aH7UyUYTJR03P88aUEeSKpUatRwmLCpExKo1BV
nrwZ+/lUz4UJG5GQMxJP5UjxReMDt9yYiDbZ46KbJEcCN+9VobozIW5ly54z
kSNq8g2Pu9czEeX+aFPed1lScZYovPNhYqen+HR1lCz5vvf7Yj8/JvLMpKuD
iSwxdL/46eUmJvhbzdyV+GXJbj2vR56BTHQP7RR5+VaG3BQQqO4PYuL5hNDy
9Osy5G7cK6sHEfN6Oyt2BQvLEJ4NJxRpUUxw3fv4Sv+lNKGb2PG2RTNxPmJb
7Zd0adI9WdbdGMNEgvKey+tnpcigf+zGqoNMGDU86rs4tJpIER2bNYeZEPaX
EvPOX018Jd4rlR5lwjaoYjttw2oy0sP4ej59Xl9y66+6F5JkgiIZezqHieSb
19IOjkmQRco3c+KuMpEjvlzFwkic2C8I3/+3gokDloszDi4UJymv5fz3VjNR
nfZs591eMbIi+4hqZB0TMhcN1ojtEiOSvJ51W1qYeOX9tPbUHVGy8f2y3Het
TAQml0/LnhYlRbdvH/BrZ4J+t+JtfLgoUd6rSvXqZMIixNGySkqU6H6afurY
x8TlhRx0/4OrSFR7af2Dgfn9s1VyVMl/Fakr9s2jDc7bt13xKrBcRSy8OwKs
3zBxdL29T+GMCKF1nfpu8JEJx+zDv4OiRciGcsMVq/8xoZm9rT86TZhc85zm
7+ZwhJPz3GqvHcKEf9ENvsQFjih7E5PT5iZMmr0teMZ4HGGx5YSVxGphIreE
Mlez0hEX11eeNawWIiMBzl8Yqo44MbfcPntiJbFcvvLTnLojjs8q+O19tpKc
utk7WqXlCNXNWW+OtawkNEGPd6L6jjjv81UWJ1eSkiafwXeWjlA3/sstb76S
cG2TeXbKyhG3+w9eXaa0kniJDPU5UBxxuUx5gHP5SsIXuvlJhb0jxt8urZsc
FiQBosrdmxiO+FMVOzXUJUhu3RntEmE54nr+plsd1wWJSHjJg3vOjoh/2/s0
r1CQhImH3Itxc0R95SjHhqOCJC6pMP5FiSPexfLK6xrxk2XRix38yhwhclY6
kPv7MpITFCo4Uu6IPQPx3/eWLSPVdJPi8RpHKLylvNWVWkZGVjxu5WpyRF5R
KWfg7FISscAo9dBtRywmkbSBa0vJ3FTuWr5WR8jKl4bERSwlogNBI8L3HHF6
n3Xdpi9LCP0sB49qjyOk9r6lLp/kJQPHArvLnjrit9+CwAc1vCQgvjNbd8AR
OgusjPL38JL9Admq5i8dMaP6fkPCIl5SoaZNZ32Y94fI5YvdGjxE5PrGtKg/
jjjc9/qo96VFpPhS27rffx2ROd3h+2XfIqKdoy59gIOF7msKmd5Oi4h97K/y
5IUsXGzmjW//s5DE2Bx7fEaAheMi/hu3ei8kvAY/TssIskCU61YeMlxIspS8
/M8LsZBpqzG7ecVCUs6r/P2qGAu/N1F65wsGMvSoUahFfn5cny+11IqbhN9W
eGmnxMLJJrWHobLcZLbqyPkHKixU3xMU6+HkJsJZ6wyfarKwTEjYaF/rAkLz
/uo+asSCRNqNA4NOC0jZ6Ooz/AwWGuPsi64kcJHkvCTfV47zXLHX3iKIiwS4
fFG86szCj42zci6OXESyoaGC6c4C48En+UkJLnLkmNfdFH8WHjW5+exq4CRB
hqcnl+xhoX27VIMmPyehfOK4/nwfC6leNTPHZziIdEFQTMl+Fiy5kmxV3nOQ
Pl7jxQ5sFkIFHzf2NXAQ25d9koePsWCk8tW4LJSDyLGFaIsvsKD9Q+RcQeGc
5T/jmGX9l1jo73W9N7ZnzvLZl+EnF66wkHv+ecuU85xlunv1BrvKeTa+WaDM
OWc5p+ayM6mBhcfT+3jfe/6zfP663nhtEwt2Bg1PZLT/WV7LlP2n0MLCxnxt
Rhf3P8uwfxPJre0scEhcucUq/Wv54vGxswt6WFjHzsl99W3Wsu7gr009T1nI
4dIeS2yZtcw026haPMCCwafh27Tjs5b081o11q9Y6BPLTeLRmLW8sbvrXvwY
C2XNnB6UtX8sszQNjjl/ZuHLZsvF9yX/WO4YynWTHZ+Pf1WilNTwb0sVRsjr
5ikWBH1Wf+cJ+W3Jzdl7Lv0XC7cYIVuOav22fFNrFuz7m4VrHPWV1eMzlg3B
xWu0/87vp9txZdHlM5anpJf+mJtj4U8fDLtCZyz/DzHvUrI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
CnD3Vxs6G73XBXNLJX/7Xzo43Az6O6yLwF3dtD9TdJQX/4l04NVDkICtUOsw
HRm1aq9fSeuhJo53GfMJHfUCkVM2cnqY2G7eiVY6phxqJQoV9eBZnZQo3EBH
0FMPRriWHs7+tVBdWcW971+SygVt9JB+cX9f2jE6dut0PNrK0MMmVmQKM5Or
L0LmU6ezHtgxjcxxDh3L/16VOe3J1ZeYe3o6go5piVdJuiF62DNztVqfWy/0
1qjlZofroeLNrqfB9lx9uRE3pqP00DOronaWcO+nqvDwgyQ9OJ76mS+hw5Vv
aeqx5qQe5hzekXZIhI7PiUnb7+XqQdRLaa0SP1dfc3v6igt6iPBfua73Nw0H
XANrhq/oofHF0qBzX2l4cPzqM9frejBnp6rWc+vd75e/f1Tf1EMxJz1R/CUN
wUGHVRMf6OFEVXs4tY2GvJJ+64EWPSw6oERVbaSh97vqOqcOPfDvMFnqVEOD
XUxN1qLnepDJpzmuukZDTN28kj2v9aD35PxuyxIaKuZ4NL75oIfPDNq57QU0
yGcNTReN6GGf4JhDTQ4NNX7xRRU/9fB7evc3veM0+BhKrr0zpYch+07jkcM0
zApcFmqY5cZ3uqJ6KpOGM72Um218+ih6NDm1aj8NFoUdm3rm6oM1z2/dv1Qa
Xuz2X/xaVB9Z38NMeTg07HaaaBpYqI/Ld6689UykYcmy/btGpfXRUXCiTCie
hhsjy1SmlnLlUT/+lNpLw+q6az08ivpo0nj4IS6GhonDtJR5Kvp4Wx5RYL+H
hmMBz40kNPXxWXKhb+RuGoyMQz7K6nH3H++gCHD5qSBv9kpjfYRqH/T8HU1D
xLNsWy2KPox8RKvXcNclitV+GhF93I0rsVfkyrsWc/e8lZ0+XHyaeVdz9bkw
XVbRHfRh3naneyqWhu/LP/KyWfpYf+9TuQjX3kPfo655uuljgG6VlMX1R6de
xM93jT58ehli6Vx/O47mLdi8Xh+bprokJ/fRELLRsC7MXx9nzAtd+zNoEDVt
3r5nkz7yVE6kUrJoKBHylk/epo8claowyWM0OL4Y6cgI00fctf7WYO7v86Uk
KS57lz7ubwrVs8ynIW2vtE5ujD5qi1yND12iQZVd/KogQR/dfSE7Aq7Q0KRA
zSxL0YfnquKo25U0zGnYOFx7SB+6gqcsJhtouHhs+nRLtj4mJBgzb9q5+bMp
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
HDrlSiNPm7UXnv3sDH+vTZfItB05mbL9tupXZ6Q7PB+qOWdHlvP+FLUYdYZN
+qJ7aRO2RGtq+prfNNd/G0MmKbcho1UW3kN/nGFn5tRg6W9DKiL2Cuz8y43f
vw0pNxfZEPNRHs80fia0nj7hZyVaE/rA3Jmy+UwccFRsGtgKMu+iQ4HZAiY2
JQf4tWmAtPllsOolmJDdkCX4rZcQt1di53oWM/E08MSPXR+pRPq0i+MGWSbw
QfXW4x1U8mLNkZ+DckyUfjn/cJKHSnyfLqLPKDIxpvdXYEbLiigd8RxNUWLC
xkaf9afFknxmnzoprspE3N5fyxZstiShrXJDK7SYKJHoyqyrsiD66T7ZpTpc
+6ysnOP9Lcgver6ViT4TDwzftJ+StCAx9SuzHEyYyH+lOV85mUKoCRvNu82Y
OFaU7xVApRA+6uX36yyYmNye77x6ypyk3dIw3gEmWLOJyAw2J8fL9V8cd2RC
+mC2Z4GFGSk/S5Q++nD91Te8f+WGMfm55+dcPz8mDJdE3Xy+0ZiYeF4eehXA
hOrRkEMZksbkjrj49b5gJq7x3p93LcSINCW8tm4NZyJsSC3Efbkheem/d0NF
KhPL7U2epcbokeVE31Y3nYnyw69kqlX1iO/STyqlGUxoN31861moSwa6nUcK
spjwvR4kabpOh3y3k9t7KoernxPhdqNDkwiq3slJKGOioXClRPdPFeLAvz1u
tpyJPzEnuli+KuTAmxX+e64z4Uhfp/y8Q5ksPLlfPfImE6souz7urlAicvO8
bm6qZ2L7L3OLg8dXkA2f5p/52MDEi57kxYrSK8j5+/fj/ZqZMDu/1ir5pCJR
3aPO8G5j4t1Oet2iSwrEYGiqh9XL5dsDFK2OZWRnc+mt1mdMVPX1JGT8kyM3
L/jm2r9kYlnFqgZhMzlita4l0OYtE61H9abVa2VJglmsfe17brykdGkaYrKk
XkpPy/ITEw6MCVuRjTLEvv3ET+OvTIhWyojraS4h+4uc+iqGmbgYLGnyNGcx
aU/5d1t3lAl6/YJGGcnFZIH/9bOlY0wox/l+0cuWJquom5LUfzGxca1rp8Ny
aXJMdmnQpQkmziwwuJx9bRF5NtHhsHKaiV++rqetWYuIbHeSdv4fJpLn/n2e
8EuKrL9qsnDZXyam6lKzki5KkWqvKbFOHhZozwazf6+RImKCt0WT+VkwmI7u
2CgjRTZdixE2EWRBek/fFZ/3kqRunZXQFyEWBuabZx8slSRLhP7NOSPCQlB4
15rbUZIk7HodP1uMhYsrHYZe20qSFcJ2/yolWdi2PtpM8I0E2VM1Z3aTNAte
rxOe8JVJkG7f5t+yMix0nhGeHtorQTg3HCcSlrOw8YFtcZSCBBkIdP3mrM7C
Fufb3ct3LCTUBZJD/zRZKGRThDToC8mJO08HK3RY4AuPp89btpDYS6z5uMSI
hUVz/pw1bV9Aimt9Xn6ksjAzrTQxa7KAhMpuexjrzsKDY37v5niLkaZG7WZd
TxZExqb1apaLEfmw0Yb3a1l4vUAr/e6H+aSzObzOfgMLSgnnOsPD5hODnbtv
SG1h4T6jVE32tCjZr2BR1byNBZOf39Q9g0XJh9aZij3bufFQcdUpMhEl2SsS
yt5GstA+p+5eRK8ImXycWlAaz0Jwt2zgpKIIcYmxv7AhiQXdQdshvUlhUqgi
fE4ihYVphvQOVrsw8dqbeSZ6Pwu9D3+PysUKk7sa2UftjrHgznfWeN2HeSQh
5VxifzELi8+qkLndQmR+1FxHvyssLL1LqayuEiI5wSESA1dZQPTr4r6TQuS6
k/mFUW6tz3yfa+DlK0QGFnY18NWyIKgUa9f7cy5xOssjpN7NwoLk68Zstbnk
2aGgzis9LCTQV7neF59LAhPbTho8YyFEsIDmMSlI4gJPqlu+YkH2qG5HR5Mg
KdfQc2J/ZsE8Zc1kbJAgkb6x4eDOPyyk/ZoI2XJxDrlQ2Lj69ywLoTZB5y9m
zCF6OZry8TxsLBq6IngtfA5x2Dt5NW0OG/aBhyK1MIfE2h7qOi3OxpLTsnEr
ngmQecbjpxQk2JANbHvof0+AHFfx9i+QYmPujcEdzPMC5Oo81Z9lMmxYSWh8
nr9VgLx/XCNVv5KNKRu2aPkkP9l+X+kVXYWNtTw9rTee85OZiv0FrWpstO3y
lLC5w08WHV9t0qPNxv5LSx0fxfIT+3UjnoOmbJhUK8wum+YjVwaXnRZzZuNn
jaxx1BNekpab4vuaxUbuU789pwp4SeCqb8plrmxEtIgG34niJXJ375YzPdk4
crIs7f0SXrL/kHfTAX829NP3WL/w5iFBdg8y1m1kY9jdcF+nDg+xmdZw1Qpm
Y7Llbu0lPh4y7f/7ZWsIG4LLL8Z2rP1HDTY5NSa8m43LxWMPW6X/Uu2GeG68
iGEjxdlts8SjWap8fnBscRwb409O1H+Jm6X2zjOb68hh4/fqr6KG32aotFe9
cumH2Nh4P+fz/pd/qCs4UvZzL7Hh5+QxrPJ7mvrXLHZ+XyEbH1/dPVX1YJr6
/NuHJ5dK2DgZu79o18Fpapbn9fX0a2ysLIz2iladpv7TWBWRcpeNaKvUwadB
U9QXb26ZedRyf79q/ixX8ylqdbbiX6V6bvw71EK7RKeooX+/pzU0szG/eL/Z
g+pJan/XobP83WwcPHBk+OGiSerN1MmA7h421PYb6N0ZnaBmW2xQv/CMDc6d
O3EJjyaoTgU6lTav2didXHxpe9IE9XZ0+8PEL1z92m+ELP6MU49rGx9yHWYj
jVW2X/XlODXs/Rl3xVE2zEwLh27eGaeqOW97U/eLDWN1q6qKuHGqAO/Ti1mT
3PMnBleJ+41T31ZZbPH9zYbliTfm07bj1LtbLujqzXLt9yrmbFEdp56QFxn/
948No0VdzPUi49T/A+MXCAw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1553168#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       Opacity[0.5], 
       RectangleBox[{12.142857142857142`, 0}, {14.285714285714285`, 5000}], 
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[{14.285714285714285`, 0}, {16.142857142857142`, 5000}]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 1200}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Complete relaxation\"", "\"Major relaxation\"", 
       "\"Minor relaxation\"", "\"No relaxation\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.794156686526167*^9, 3.794156750752102*^9}, 
   3.794156821046194*^9, {3.794156858997643*^9, 3.7941568661139507`*^9}, {
   3.794157000749041*^9, 3.7941570211408873`*^9}, 3.794157098341044*^9, 
   3.794157570846714*^9, 3.794157764047497*^9},
 CellLabel->
  "Out[1528]=",ExpressionUUID->"c0243088-3c01-4773-bb6f-6ee34e6e38e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/Desktop/fig20_4.png\>\"", ",", " ", "fig20"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.794156982796707*^9, 3.794156984540175*^9}, {
   3.794157087820444*^9, 3.794157088157761*^9}, {3.7941575107207537`*^9, 
   3.79415751142692*^9}, 3.794157561132143*^9, 3.794157750827306*^9},
 CellLabel->
  "In[1529]:=",ExpressionUUID->"4a1538e0-7cb0-473e-8ae1-63970aa1a942"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting R0 = 2.4:", "Subtitle",
 CellChangeTimes->{{3.794156090803885*^9, 3.7941560917658577`*^9}, {
  3.794156834506391*^9, 
  3.794156847638949*^9}},ExpressionUUID->"4611a5e5-72ba-49b9-a97e-\
fa81a28cb294"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitude", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", "+", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactor", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"relaxtime", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", 
    RowBox[{"15", "/", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"baseline", " ", "=", " ", "2.4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol06", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.4"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol04", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol02", " ", "=", " ", 
    RowBox[{"runmodel", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npifactorrelaxed", " ", "=", " ", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol00", " ", "=", " ", 
   RowBox[{"runmodel", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.794156106672036*^9, {3.794156141078863*^9, 3.794156173417129*^9}, {
   3.7941563630521793`*^9, 3.7941564001285667`*^9}, {3.7941564393207912`*^9, 
   3.794156439386325*^9}, 3.794156908471367*^9, 3.7941575538284397`*^9, 
   3.794157752984179*^9},
 CellLabel->
  "In[1530]:=",ExpressionUUID->"be27365c-4d3e-4301-b38c-933cf9fefc5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prmax", " ", "=", " ", "1200"}], ";"}]], "Input",
 CellChangeTimes->{{3.794156277514061*^9, 3.794156278914998*^9}, {
  3.794156331056059*^9, 3.794156348490449*^9}, {3.794156915596548*^9, 
  3.7941569205773573`*^9}},
 CellLabel->
  "In[1545]:=",ExpressionUUID->"3186ae79-0397-47be-a7d8-7ba19e48fb32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig24", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol06"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol00"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol02"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol04"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol06"}], "]"}]}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Black", ",", " ", "Red", ",", " ", "Blue", ",", " ", "Green", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Black", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", "Dashed"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Complete relaxation\>\"", ",", " ", "\"\<Major relaxation\>\"", 
       ",", "\"\<Minor relaxation\>\"", ",", " ", "\"\<No relaxation\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"npistart", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "5000"}], "}"}]}], "]"}], ",", 
       " ", "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"npistart", "+", 
            RowBox[{"15", "/", "7"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"npiend", ",", "5000"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.794156672417858*^9, 3.794156750149516*^9}, {
  3.794156816678644*^9, 3.794156820239547*^9}, {3.79415691200869*^9, 
  3.794156928506096*^9}},
 CellLabel->
  "In[1546]:=",ExpressionUUID->"29d0676a-06cb-494d-b0b1-a247cb6f66cc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF23k0VV/0AHBSEYWQaDLLPM/DPZs3GSOeoQyZogwZk5LMMlNUypgKoUKS
iMwksxBljBAZU5Th935r/X7f3j9vfdY99+x99r73rXP+eDx27kbnd1FRUZnQ
UFH977fO+ZnumtlXGNX/fXbjjniMciaj/7dsZkraS87H/1m3faAknbP0P5s5
/K66zdnwn4clb+LiOD/+56xDBhHRnJP/OZju5ckozp//2fzMwxdLy7vh/82w
E2xJOsH0nwVOL8zUx7D95ysdyijlJ+d/Plx6cISamus/W8b+JU+y/3O2w9SH
JrF/Fjv05k2M+T9r+trcOVT0zwppZjnJktz/2dY6xypv5J/DdI7evz/7zzkK
iR+jf/7zPOM1XTd6nv/s+05fWUbhn2O519jexv1z2QSurVON9z/3awUvx5H+
+dfzanY9o39W9Fe2bXH653JWyV81t//5Df4Id8nMPw/lmxE8Vv/5D/MdZ4nt
f1YZZnqVz8r3nysu79F5hP3z25wl7+Tkf/6yX+K+UeY/b3q5VDPn/7M6+kYX
9+6fqwc+p4d//+cRdc563No/bz8ynaGm4v/PmEe3zI1D/2zdz2iuxv3PN9T0
Av6I/HNGdlR2ufw/v6NrbvaFfx67tPuHnC4/tDItcZwQJSOqPg2WVRN+mJOI
emjTkYu4VQMVi234IWzZgT6ooh7Bw7eW7i78kN5oyLIv9COyof0TLO7LD92u
/Pz3zo6jIDfF3Lkgfhi99ndOjOc7yur1aXsaww9s9zQm8GgF1SiXLDvd5Yep
px/rkiTW0VjmIrvgQ36I67YYVu3bRlR7xdUmC/ghW0LluvQhGuB2dbbNLuMH
nTe5AcsstKDRkxthU8sPl9RTfxrZMICd0lTBiTZ+qNTbGh/ZYIKQDN7uL/38
cLeK9J14iQXqnNOPnpnnB+2LbZpH3xyGl7MuLta/+OG+36tBQ+sj8PiCSqU9
lQDkmn34wcd1HMIdB85eYhMA9xj7n7p+PKBld/BBqJoA2DpOy9aOnQTl8dHZ
SKIAyEQWcA2nCIOIzXPleEMBkFi1sk8mi8J+a93BFAcBcLCeYMDSJKDzTDjH
81gBmHO586YULwM1n4wvvLwrAKwfGPLqf8pAkRlveXmWAHg9PzZjnSULt03e
mdWXCkBH46rx3JwcmJ7euPvpiwA8SmYN7rdWhC9abodoxAVB/Fx5y/aaKrQ3
q56nUxSE0uaRYzQRalBNpH91QEMQmnPsjlOzq0MmPpfMYSIISP99cJQCBnYw
niQeIAhv+ddlPmIAM4omLObtguAt9/v+aIYmDJbx2VkNCMKQDHmQd0ETWuVX
iu3GBWFiaJeRJoaDAtmE025rgkDT5/tTZRwHlyTfJ4YcPwlP63GHmGUJsCao
zvTM7STk4uYQ/oAWYBOazdF+Jyn9WNT29dWCiHStwAuhJ2GjIiQHxrWAnY28
yHf/JFT36HTVVmqDArVL54MGSp2vPpFyCtcFv88pCZFHhSCyyDm/0ssAau5m
kBwFhcBy3wWGwA0DoDN6vIOTFoL+kd9XZTQM4X7LC/cdohBc2V39zKrdECZC
X50cPi0ETl/IQ0TW0yCCKkcrLIVgXCVxspt8GipeNRn4eglBsqRrVMyH07DL
s42WHCAEVCPi4XLURqAj1vNOOlIIUsoX2ixljeD29MAVpiQhuNgbIq9sZwSf
s4clf6QLwd+qGZPNOCPgt/463ZonBA4bzOG9ZUbgyjmbmfdSCOLeOryY+2IE
mwk/mRzeC4Huyx9fg3mMAa/7p1njoxCE/dj/QweMIXYvVRDXqBBMktd45i2N
4WPtHqWtWUr+tm60EVeM4XgAw9LQTyForDjboJhoDI5KB/PKd4Rg8KvHqeO5
xvB8ld3mLr0wtJ7v5DJ6awyYM2/XaW5hkIz9ffnAhDFECAhFSooKg+HePXfq
V4yhY0wcDigIg5PKia+Cu8jAnia7/h2EYaFIzEebmQzWZspFLbrCINsTZKF+
nAw5LOhCjqkwhO51KWQTJsNCO547zFYYMrFOl3FZMihE6XyydRWGar/B4y/V
yRCIN0xEV4ThtwGr0j0iGVp2TLSOhwhD7o6KXeopMjBXWlD9jRUG8XpGfLsJ
Gcx9bcs/3ROG6T69cBVLMmRJO3mUZQuD+R1ljyVbMszMuwolPxMG/XiLZ+uO
ZJDK8xrzLBeGlRHDNQsXMvjZ+6UY1AtDc66iOJ87GWpO3DAU7xAGpQQ+NTMv
MtANhdIxDAqDcvqZv1SXyWB4J6pm5islXowsErpChhTDBL+mBWEYSXiQ9NGP
DOMMd6QebwjDu+ErYQeukUGk+cFM8G4RGKe3Fxii2CskK+sckwgs73unBP5k
qFDPMVc/IgLECd7rBIp3bRQwHxUQgW9B3M8XKeOPtmuuIkkRSFG0tDOiWO7h
YJ+Dsgj4mpnfuHSVDHqXPcqjcCIQ//aGF4kS/7w2bepzfRFwrA4uGvMlw43j
GQG9ZpTrpaz56pT87y7L2azbioC8okq5rTcZXjR+0DzuKgKjB0LrDDwp9b5v
J6DpKwKGGksJ9JR6jLtt0DoFicBny9DpZFcy/NFI/B4TLQJ/r0bGLl8kg9j3
qhd9GRQ3i26JOJCBUE2+/SdPBIqSODcYKPW3vj3nw/VSBFyEUxaarciQoMKp
crFZBAQm6Mo/mZIhj7HoWHy3CPBtG36WMqbUf4K4U/JZBNodLs44G5BhJdqn
YXNRBJQP9e9Ek8hg+rnzVCKHKCgf2KTLViDDsesR9q8visKtNBsm7oNkkDc8
TvziLQpH26zbhfaT4RR/qRD1DVFwL78rxU9Leb7axn/o3BaFt1ubymubxjBx
TN1vpEIU6vglTjHPGMPfpd6zNI2iYD888KmK8vyzNTqrC3VS5mP4JGg3bAxE
t5RdXl9FoUceVSX2GMPTqtXYPfvFgI78ey2B8v7U3Yp2F2EXA7nYjM2tMmMY
Os9jZMAtBts508Hni41hP6PB4ftyYlDS9vUQb44xpQ5TG1WYGJiwyCddyaK8
f2XXv0xoiUGNgLx/8wNj8LDOfyhmJQaVb3IdzBKMIUpGI+y0kxiIq7X33Isy
huy9nxx9PSnxr5mE94YaQ8XQJe1UfzF4m9v7kv6GMfQ+3yNWEy4Ge62Mr6r7
GcN8SBrjVIIYqKcYzbh4GcNuM9nlfQ/EQHq2MFr5EuX3QrS1V+KxGDAtxWwZ
uRuDwo5NmfFzMfBcsoiLv2wMevo1IYRyMfj4kXX8XJAx2KdyGSjWiYGhYszX
+5T8rs3eOCrcJgbKOzXs1I+MIVFxZPpIvxiUEky1rSqMISdcvXT/mBiEvEv6
dL3PGN72pgVtz4rB6ObTS5I/jaGHZ1NvaVUMXnC/idFmJ8OsuwXnxJYY3NNR
cnqkSgaq6oqpXlpxuBwa8JKd8ryx7z9S0nhQHAjsLgeDE8igmfdJ56mAOOi1
JpVVLlB+H34pHk6VFIf05Htqxrwm4I6/9zVWWRx4NyZd3M1NIG3M5LqHvjg0
pFR5fPpgAiUSr7TszMTh3DNnbIvOFFqusx0i24pDz4rCdxMtU1jj6H2meJkS
b9N8yrrdFE6dNhzdThOH08kWDORFM3DIfFGwlCMOCwzRbBFq5uD/g9Fvokgc
jr9O7LwZYw55Ue3MTQ3iYJst+mJM4gxQ1+loxs2Lw6E75x00os8CB3M+Y+Av
cWi03i7QmzoLEtb7PntQSUDwtoHujoYFnP3T7E1mk4CijWgmQypLKJUhPDmq
JgEF085z3olW4PgI0eXHSAB/6UIAKdAGri9nfEy9IwFdPfwP+t/YQBLazorL
lIA7gukZyms2UPP5rbLnSwkYnaC2CrxkC5xsKi5KnyUgiO4HlaiLHbSFyXU0
iUjCSmMvq3q8A6gwfdh1S14Sbi09ODr0xQHy7tsqWgDFI1ZTMWLnIfR5fNai
iSSUrpuWKHSeB5VPM14cwZJgpq+iNMvjBHmi6YedByRhneSw0bJ9EdjLZPXk
JiSh/zXd88ZzzhAGrUHb85KQ56ax9rfWGYry//poU0vBGQ5LhhPRLhDzTmhk
mF0Kfn3/u9tX2A00Z0OK9mpKAVTpZHEbe8BViY5WF5IUfPJhOTAb5wFF3pxT
XXpSIFbvvGP13gNObL/gTDWTgs2ckyGGmp6wwTIcIukmBUk7vH0ual5QpKZo
Yp4iBUoq3k6rp32AK3Fu4+mCFIzEPK68QHMVqm0Dn5asSoF3w0ufxVNXwVqW
9UzluhTIKec+2Z96FdL6VcrbdknDS4/XbHvlrwHH8WjfRXZpaBASv9nv7g8s
+UKrckgartkqBnbuBMCehvPz7xKkISUGR7VdFQyP72yktiRLQ+W3jh+354IB
7xSn231fGhS+9B4x4gyBEPpX+ROPpGEs2W+ddDkEtg13X9xTLg1LsiMCoxKh
sD6cPaUzJg32z1d2780Ng7nfoyN9UjKgbHGITyv1JpQ5JdTpKMiASu5z2aX2
mxA0gOW8U5UBuUS+IU+qSGB/ne72lCgDYryqtKsOkaDpa7F53VIGfp08kRom
GgUPfvZz8kfKwEiTJV1cQTScd4jYSomTAdPdd5dph6JB6qP8+IEkGWB8FCjM
RRcDTS+T836ny8Ccgul3FvsYWPYyUvzwUgaY+gcas1ljQWu5new1KgN62bXU
zJZxwGoboDQ9KQOH6I9XhoXEwUiX2DHL7zLQ6a/ReSYvDnyKYr4S1mSgUCFi
kn0lDjLdtb04GWQhUn3DNTAgHpxH103imWXhuO7v9pSMeJAzyFOmYZcF5sgM
p/XqeGiVoKX+wS0LqcVbnwO24uHXj4aEGgVZkBz8xm/imQC1Vj7e8mqyEGCW
uGQYmwCx7Xxm+RqyEJagxxGQkwC8z0JOJOvJghqX2UfLTwnw45jMrn1GssDr
xEnev5QA5bHjUwFmsvC6pa7NkyYR9F3hmZOdLHA/cK+l4kwEji+LiV+cZEEU
mtl5+RJhQjfT57SbLKTltVv0iiWCn+i2qqofJf/Ez50TWCLgUp9xFQVQ4q0z
lCFSIjAyWNEIhMrCT5+oEWGDRHj8vbKVMV4WxKmpzj+ySoRL9wz4nJNkQfhm
/yCrQyIo4r/6N6bIAs0jM29W50SgWvb9yJ0hC2dCAxYeuidCazq9+PVHstD4
rnzfO59ESNbJCB/Ik4Vvi1dDna8mgvVv6RGZ57JALpA+8jggEYQeNyrEv5SF
51GGsS7BibBseCZhtlwWxFb1UmrCEqFia34aXy0LUSPKbI9uJkJYfhBk1cvC
+g8HZtboRDhlxnb/b4ssDNZmPGGOpdRjd96yaYcsxP55PZ8aR6lHkapOSa8s
eCoFb5fGJ0KBVWf2gUFZ+H70w6pFQiL40Nv/vTAiC2YEx6lEirHXv4wbvspC
J1f7qjHFdA7RhVyzlPW8ue/7hHJ/D/OJPf4LsjBtdXg4nDJ/WlWxVf+qLFQY
Pbm7FpMI550JZdIbslA3ks2yFpUIEocHGeO2ZSFUy70mjJL/er2r0wyNHIT2
X2R6QllfnQdVDW6fHFyoVPUwpaw/9ngyRyajHCwRQq/cp9THtPWk5x9WOVho
jB2/RKkf15XK9yaccvBB/pnrAKW+M3wGvMUn5OBHgvJAL6X+JV0T1/bzy0FF
R8SoA6U/1wN8e52E5SB1fhYXQ+kfUYRerF5CDlQy39aRrBNhMFR6+KqyHPwW
57gcYZgI2VKN8n2YHMjy8+fQayeC67B5vBReDlbYN98JaVD6rRiEpk/JQW/U
63IFKUq/v7KmaJLlYLRvIU3oZCIkJeYupZ+Rg5NlNFfLjyeC4PeOh2QHyviH
d7vK9iXC0l27Py8uykEn37cgg+0EqMD9MmJwlwOf84bUV2YSQD/9+O66q3JQ
pEVdllWRAD6Gro6SCXJwxJ35xxPTBMC2dqqjk+VgSM2eZ1M1AWjzkw5/uy8H
rjffH3jGnQAPaCpb0h7LAdsKXlxkJh5qy/aJ0lfIgcOlx5vj7vHAeDx3cXJS
DlolnTimHeIATEOHv87KgUeIp+9LXBx4JZz7MLEgB2lLh1M4eeOgn5ojd2xd
DpiS3qhWDcdCxrdI6y/75UHIkHUzzzAWJIqc23vl5EF+QdqQeDIG9HESBXVh
8rCJZ/apzIuEG9fp79dGycPd2/ttIgMjoejVt4iaeHn4oJP3WtU0EtiEMu2q
U+Thnl2ftjVNJHzZz3ykolAexmQVL3+wvAmu/cuRxR8pprUS+nMgAmIvvnLM
4leAqweLdAYuh8J3eBbJIKIAf3iWvGO1Q4HE8STfV1IBPjx9XGF3PBR2NScv
6KkowPPSvl9+jSFwld/Hd8NAAdZyOtl8D4eA46hMhJG/ApQ2Hk3rqg8CDZOi
J7t7FID+dc7zsOjrkCGW1+w+oAAtCnc5q7HrsEmTNTv0RQHeGBrJ+636Q3lJ
gnjxtALE1dfNelr7gwSz+yurLQW49IZMk6RyDY59EG8sE1KEqPmpeNb9fvAL
CiYvBCqCgLbo4e1DPvD28VzqlTBFIJtW5bOMekMInZhxRJQifG+405ie5w2M
XYW1j5IUwZW+0YFd3RsEzz3PGMlVhEe/pOijXLzANKDYnNylCGseeBzPiAcc
G19msu9ThAs+Nyp8nnvABF6m2XNIEZijDlxVCvSAS/tfyidMKsLCab3njLwe
EJFaytK6rggnXtsYdAxegldvXrchHiV4ddr+aZK4K1w7vh56SlAJxq9P4qs/
uwAEK6laiSrBSpTFUhll/9Cm9ebpNXklCKHOlDkw5wyTAxURr7SVQM7lSZjQ
q4vA9qsKRL2UILfYzW3ZzQmGzmz/Vr6iBFNTTMVWQk6QVYW90LquBItYx/WQ
r44gFv7uuGOEErRjJIElC0fAs9X+yXqgBH6t16nlTc6Dj0xDKXu9Ehw+c4wo
esEeHOW4s261KEH6a86HKUL2YK5wPWZ/hxL4vsy3aJi1A1UVObtdg0pw4U9B
l8ElO9il+ZhpYUEJlGe+eu4JsoWE02HOjUeUYVBQ6Wt35DkIMh4zAW5lwI6Y
W/VznQMvEzWNSgFl+CxQF8hdbg2mZ34eLpZShufM1Xf95q3gmK1DYxpRGX7v
mG1/treEfA88t4+XMmxIK0+lRp+BNK8shsUryhC4uuznK3cG4nw2f10MUIYC
u6R2+1Fz8PArbT8XqQwm0GzprGQOikH8/roZysAXHjPU+8sUGhJ29/O2KoNu
LW91ZjYZym7Z1KZ3KoPkeMtDbcr5PC/pbSFHH2W+4J8PP1H29zH3fEIZx5TB
0Yh+JDXeGIwyJ6X+rClD1LG3iR6RRjD6vCGmm0cFrlvHeJ54ZAhdP3bPy5xU
gY8OR0vWnA2hRoyglyymAicHy7dCZQ0hK79xv5miCoTRj4ZeizMAu5ymuC96
KlAaIJTd8V0fvqW3JExfUYHuwfXnt7/qQP8XuiWtABW4euL8KZlIHWg+qm2Y
H6ICM0uH9lNJ6FD2t++Z3eIo4ydU2A8HaIPzndZbK9kqUJUnP/pBSAt+xLYl
bbWrwJ7aribdlwQY+bD/p3WvCrBler8WvEiADnp9cs0nFVAalrLZ4CLA88h2
ttCvKsA/7L3tl4gHj7COO3QbKnB/+GhkzHUc/PTvusfKrwo1n0ZDom9owGQF
87qPsCoQLv6uCNLUgL4NQ/N+CVXQDZKZA1oNKLvSzXFfWRUigsUNDiUB+Hn3
3D9hoArHaT2O33NC8Nf5Y6rwNVVweci696WEGpAVrG5JBKrCil1K4JGPqlBI
/S1CNkwVynKUprMo46xTfnuqx6vCeueU/larCtQ2HtE6nU0Zd/EpW4qfMtzk
tv3p16oKx3QTnvjuVoSxudnZgE5VWJYj+BIqFEDptddoCGVe6i9iVVSeCvBd
P6w1dkQV6mXzPKXH5UHfPzcra0UVOt4vdIu1yQFr/w+9liNqMPrA7hpfqwy4
PvTVbOdSg9DTv6Y8KPvKBtcdxR5+NagOyXwddFoGfGkO8n2hrAPjPLRv5LM0
DErJbSxqqoGkb02z3oYUZMZce3LYRQ1KjsATqnwJWDelST3moQbzO9dkG4kS
YMgbm8hzWQ1Ef9551TIpDrvepPuLBqrBi1Jt/+v84nD+W81plKQG9mtNTwVL
REFUg3bbsVIN9OkiF01phCnnkYKTn2rUYPIOTXhggRDIsRme1m5Sg3B+1ooh
shCoTac8Fu1WgwJfpaLDBSfhVJyI7tI3Nah5+jZW6bwgeA3qp1xlUYdVmjmd
L/v54ZfmSu33w+qU89qFn2eb+MC/8O6cxXF12GqibuoM4oOwwFEME1KHBJRI
l7DOC3cFPKd2YepwDVrxjKs88MYzWSb2ojr0aHFm2B7kBuyzkuXWJXXYH1de
mV3MBXX44fBLPuqAdv2pZdTkgtbDgoOGgepwyG9P8xWnE/Cl6nXgoTvqcPX8
fc+t+mNARf+5LaNGHf5m0XjbvOOEMO/AX0xN6iBNf841z4ET9g3zcQd/UIfO
JjdbSQZOYCly9bbvVwfyXhfXWQsO4Dfd5hSaV4fd0vrEFIbDQMrmcSo+jIGN
dLO5ShYbyKUwCjYdw2AXiy1Rz5INuOP/Tg7xYPDxVY2nOicb/LnaZ7dbDIPM
ivrnJXdY4dnpKGszwODs5NXNtBQWYKVeNtm6gMGFsMJtlgZmoPo9zMZyCYO1
OQvJvlhmmJ9v7RX0xoC3OeidnikzNH16fNowAIOed66tOf1McLXIXP/RLQzs
H+Ek96gywui5Grx2BQaLHdsERg0GaDN5RmP9DgM0/u6tyjQ9lOs+qPNqwMA8
n1Y/Lp4ebiv6QFoHBsmCUUb3xvYBgUlIbXECA4Lk++ixW3RQUJ0ge4cBQcTR
g2JGgnshpfT6ylNmBGXHdlnoDu+h7IcvFlcfQkDXaZ4id2cPWN/FSc5wIdjf
kl/+nnYPHLz0W0RVDsHcsu1swW8auHL8HO+4JYKahT1XNneowc5QyvSLLWW8
oLRrSyM1nAqljh5wRBB15fgrw1hqEJx9tNzugeCqBg/EHqWGj6UzNRVhCKz7
JPsualKBlJ7XueRCBHbGT5Orzm2hY4G4pIRiBGFcTXrvqLYQbQlbc3QZJX/L
9Cc/szfRyOHXEsE1COpwixLfv/9FsV//brl9pOQfqm+aGPkHzVwLTyNtItiI
Mf528/dv9N1U9MJDKgC3JVOznae/kc0S6y4uGoqrC+97Wv1GunxT8kfoACqO
/mxXbv6FeKNupjOzADy+5nl358ka6iK3uW4JAMjt7f1bHreKiAule/2FAFgr
U2M8Tq2itzfTs9ZFAAy9KwTXmFZRbsWlj6uSAL8qprwt7qygG9wH1b4rAxA0
HI+ZPl1GYvMmDAP6AKVfgsYLpxdROVnvXbQhwGGeGMbKK4sIV6XpjRkD1Mf9
bTbat4jOxkt+fmIOwMAuF7ZPegFFSe0r8LEHeG5Ll7l9ax5983mrw3IV4LI1
oTnozizyGi7ZbvQHCNdbf/tWdRZtEZ6WXL0BkM43WiP7dQaxHb57ZDwUYAwf
ZlMrP4Nwb9y/v4gH8Jkv/z068w1lbfFG6z8GSHzKVPMwdBKJOXJi1LkADkVm
1A9VJ9HrDqaV0qeUeiU2n0v/+RV1ZG6eOfYCgHbfbHLgxa9oS6NfeO4NgNoD
8oMo6wl0NiLqfWQngPNkscSK1xj6thAYoNYD0M/wYEpFeQx5mvlKL30E4GAf
ztGnGkORQvb3zYYAxBWtueN5RlFZq9pFwSmAvOt+67cvDyNWpiW6hj8AdJk3
X+rYDqGequib2lsAJfVL6sP0Q+i2q8Dezh0Aa7zeYsyrQcTSepZmaLcGVCa2
lEswUhzeuLXIqAHves+EcbcNIOa/D1aO8mnAal1P770rfajrqbznQwEN8C1a
VMFJ96FE865FQSENuPTrYWbf3EfEVLbnh7S4BrDqT5Zk239EjJ4e0yRFynW3
IqVwq160f5rwxVtXA3xK1kKl/bpR252xsxv6GvA1Y3f/FtaNYvH+gzcMNSBo
ikc4Ym83Ysgu6o8y0QCj54cW3t3rQvRWR7szz2kAQ3e00+HwTkTXu9T4wVsD
pr14Zva5t6GW4Bj8aV8NsKyPC5s92IYipQTr+/004I/4QPPfVx8QbbxFzXiA
BuRdeXUgl/oD2qvdVPH7pgbUTcbyZOW8R7vfpb7gS9OA1PRTL9L5mtGQGl5r
NEMDJGXxlYHdTehFxfzYg4caEBUWLH0zqAmdLVNnYcnVgFaR/L8/xxtR8bNR
H6oSDXijkmTdU9yArNP4VIabNUA5cdR3ObgOyR1p60lp1YCKh3n9lKhoX4qP
C7ldA4YLGQ8H7NSi0qTGtA89GhDs3GCXE1SLGGKcdt4Ma4BL5hmCfVwNKr9a
0HB3VQPEayb0d6dWofjfxlZGvzSAL6rtbId0FbK/vLl2YEMDzsemdtO1vqXU
X/9k+LYGJAdGaFZvV6LzFxajvPdpQm77F44yvwrEYiZrYMilCQzPl7qlCl6j
mY+fpxl4NcH/QuoTBrPXqMooLKiZXxMKTLM2WHe/RhdO9RVjIpogtt/0Qppt
GaomXGETl9eEpsQq0mGRV8hFrnJwn64mkIwdhlzmS1BNV19hub4mrIiv9+Pz
S9Aht6VAJ0NNSBR0x9FcLEHvnggINppoQqePYK3gbDFiPZzoFWSjCSKpDx41
rBahyg0Hht+XNUE2QJYUYPMcMd8NHHnipwndhUjq/q9n6LzMg2KyvybYSbNk
y8Q/Q0wunWYlQZqQjHRaW2sLkf0X5cduMZrwyIP4+4VyAWJ4x6g+maUJopfV
xbYc85CNhTBz0iNNiDmoVX2UJQ+9+o37qpGjCen+Q6fsq3PROamrUZkFmsC+
V0Lf6kguevnwa9/ZMk0wOPhyNmb0CbIIK7/U/UET1Gf0/+qlPkJF3L0aQR2a
wHmAd/Cw2SO0p+oHm2S3Jly9u8u0lfURerHGWxnbrwn0FzlMhhKyEY1THK3W
OCVf6Sw7u9sPUYG2XVb1L02InehhnwrIRHJiPBja0IQ2Y4m2i4czUTXj2Od3
fzXh1rvSBbWSDNTVa3W4lgoHscq7yqrn0tFPqzPx9fQ4eJI8PFPrloYwL8Pr
LSdw8OUpSQiXfx81k5mOaPPgICW/PbzR9D4yVOx4/Z4PB5t2TOXGu+8ju03d
1VYhHGTXruyKsktBNyNIzu0yOOjM8WI4IHoPdT3AzHuIOGC7w1ss/D0ZnQnY
WjPSxsH2uUcJojnJaOLc26ReXRwQtm9/ZbRPRj/5VTo/GuKgzX/O2H00CXG+
kCcOnMWB5FyFpP7EbWRXLyb35RIOZtyibjMy3kJzT+a6LT1xkD+r9/dzfyLy
icx3H/bGgUqDWYZ1ViK6qS9UMOKHg/XCt/nX5BNR4QAf73gIDmrGBHZldsaj
tbkjzN/u4sDv2ZfYlb4YlJw+3Zx2HwfeQcmed3xikKxBaaBxGg5EblGZx7PF
IM8S/cWahzgwJ2x6uJhHox9+QR2phThwmytukF2MRFN7vsWersOBa2WDujg5
AoW9LsHTNeLgtuD9xdo9EYjvYuBmdTMO+Nty+93Kw5FtG4erWDsOPqydc/rD
HY6Gb+vq0n7CwcCB4pse26Goj6t4X9UPHBTnBDlxTwcjn+6AWu8lHCxp5IRJ
5AUj1lCdqyKrOLjzscyO2TkYnf72debeOg5MmMLDsKUg1F7I3uJFgwdLAV3j
jj1BqFH5eoQQJx4+DanbYI+vI4c5LWz0KB66HGkKddWvI5r0Q7/unMBD7PC1
wvoBf6RB9eI8DT8eEgIW+SaY/VFV0zh+RAIPvid3zKySrqJXxiSaZDwe/Ljl
xT36fFGkbnn4MRIeVt5YyURG+iJLnDDdE2083LCW2MlQ80W7ZBkOlJ3Cw1iE
U1JF7mV0iqWT/ZM5HsJD7nERonzQTJepyDE3PFx8MHor1NcLVbY0Fz52x0P7
+8VPg4peKL5GSVLcCw+DvoP39v7xRHJFR+SwK3gYaBQcXAzyRMEJI+o2wZT1
vZNhrU/xQEdOOZ5+fAcPAj3ldqtf3NAPwkCvWAoesGIdTPyqG6pR1zJ99QAP
wx0+60PsbshRXMSiKRMPo/K7lINMXdHL/QsOM0/xsFzPhl3+5oz0Plz2E6vG
g45z8RIf4QLiqv/2p7SGEt/0p134Lye0UmEWoF6PhxTNW5dZnzqh+/nKIada
8CD0R2A7+6AT+ha1FePRg4fCrUMCLgvnUaBWeGbpNzyYrV4xDOu1Rz3WFyyl
ZvGwvyr78NU79oj/si5n4RweuCZWd/TM7VHrw4NJj5bw8E19n9ztMTvE9jc9
4vYfPEyrUYnc/muLHA8G4xi3KPUds/oT2GCL3px0oIrewcO+sfE5vXhbZE0W
uRa8mwCaS5YyYfy2KO9ZmZsHIwF+mXHpX7CwQX/q74vMMxPgaP8LQQNRG6Q/
dH3aiZUAE9btmiLr59DKXpztOQ4C0M3E/7wO55CaTSf5FC8BXuAlA8JHrVAX
y4yqmAIBzso3ev8lWiBe4Q/ruUoESDylJ/Hh91l0GT1/xadKgJbSqNtXnp5F
R1x9JI8CAV5dOGnuyHQWOTRS8dHrEID90sJA6pQ5Wr/CST9jRYBvC/lPHStN
kU78ZpO9DQG4hu7uUF0zRemPR0NH7QhgxaK8c0XZFGl2P9nqdyKAiXPW378V
JihWRGa50ZMAZjNUFeWNZMQzrPPpUTgBPqnXeMT+MELRdaovTCIp5/g1K5LV
CyO0kisWQRtDgDD2jZFMTyNU58Uo55JIgB+3Tp6+9vs0cqDrSZBJJUCgx3mN
MLrTKE/2DKm2iABVD95nfwo8hZg5dU54vyTAFleJe8nBU+jqtsoafxkBnHzv
VLs/1kc67489iqwkQHCgYF1ymx6asx7bNmgiAGNLGJP/SV0kEe1UNvKZAFOR
Urz5tFrorrt5XOIIAWLdGtDTXBLaIWs7aI4ToFH03ukXWiTUxSXKkvONAMwz
ke7GCUTk+WrBzW2ZAI4G8dmnJAlo6MEonusnAcLP85TLfMYjzaCuo92/CGD0
5+HrJ5F4xKJb8l5ukwDxmS4+SjM4VDp2WWBzLxEM/1xOXH6jiY41OW4+20eE
K41mmqOemii8wKz33H4irDPt23dAVBOZ+ioH1x8kwmW+oY9CDzXQb4atL9HH
iECHV3C0TQOkohiWzClDhAOdRnDjtjrqt+NUSJcjwgunRwklwurIO/75ALci
ERjcbndI16qhwqlPR4TUiPB38+Sg9LIqOpEs/lCBSPGUgtFxUxW0a7n/mfFZ
ItCGHrT8oKKIMo65GgxYEmFTmWMqbEgBqWpRL589RwQ9MwmT/f4KyCdTVM7O
gQhUu8/nPamWR9/0gyo8LhFhYpBab9pQDn3IF26OCyHCsRMnmbvypNGF/uoL
B8OJwBW3qo2dkUa7d5Hp79wkwjlLsNuil0bYmRv6abFEcDyjOB/vJYWKaHt7
8+8SgY9WQ/z9EwmkJ3vhssR9Iqwazn0POC6BZq232EtSieBMprUySxFHvGUn
z77JIsL8Hv2hN/fEULLD9bHmfCKwXT+SSvtOBEklHgzRfUYEq20r68LTIqi9
Moev8wURfsqGta9PC6O9rN2O/aVECFeQFm3lEkbZmCPd2ddE+KqRPOBeK4SQ
89+nw2+IYB9wu2DbUQj51Qr8mKwmgvguTiJn9UnE9qMi/kItEYaiAlob3U+i
Yg5Dqfl6IgRWy6+kCZxE392vea+2ECFehTOFLkMQWZ7o3KDuJULTBfVJkSQB
xMjp9aqyj9I/eXKRDkkA1bIe8rz8iQi8UrLfWf7wI8F9FjMzw0TIsO98s2HB
jxZXv/V3zhChtFJIp5CVD4W8336Zvk2EPTMZatRO3Eiu4aG7GTUJPPu/Micy
c6Pparzowd0kOHeLSeWKDxfSK43ODttHAqfhyZGYYyfQoUz2Wy5sJGB0X9s8
f+UoyvORuKQsQoIDM+JP7gSxo7Pu3cKrYiQo6l7IOvLjEDrg7DNVKEmCNPfU
rFrLQ8jrXIUltzwJyHL1XZJENsR/1opjSJEEL5gbWMk1rKifTPUxSYUExfvf
BpIxVqSqQ9SlBRI86kj7/YjIghbws3trNUkgrMPAbth9EGWh2LprBBI8Nbwe
ctvmINot36O8oEMCxYuezslxzKhM8vJarj4JhqT814tEmdFFEY5iW0MSpH8R
WFXNYEIdXNZCfSYkaHNdXCXqM6KgI9ST8eYkkPqRfFim7ACSPfQ4U8uCBA8k
3VxkRA+gb0wki13WJOif3aJ+UrgfpdB/Z39rQ4KH3W0/vqnsRzp74nou25PA
Mu2chkk/A9rakYyXdCRB0I4qk34gAyr606M9e4EE8RuXWuvlGJDd2uU9j1xI
UNFRc/TPDD1iW+KotbxEgvFbKSURKfSo+XvldXZPEmiKd4hl4OiR2Bj1zyhf
Sr3ulmhC3D601ho34RFMgpT+LUWWn7ToC0Pfhc1QEiD9ta1jcbSoTu/YImVP
CBm8bs1FfLQosSP/b0YMCRg+fKg5obMXifQ0s7XfIcFnfFNXfdBuZD1ITRLO
J4HYuTfBzyuoEP6IdntpIaUfhHsEa6BCohaJxvCCBPRCZzciY3ew9S8nbMxK
SeBx9wu8y9nCbo+pXg2vJsHR3MRQqsUNzI8ndIe5lgT8Ju0EQdoN7Jxda3ha
PQlwltLWjrzrmNik+e2XLSSYVNXVjrX/hTVNXy4Y7yGBcVYLUwfnKlYoVCXt
1keCiWua0QLkFSzp4u7y9QES7FFKbcUnL2M2c7cbmIZJsMbVSJY+uYQRxYZ0
UkdJIHuWbs14bQETd+PpFpwggUj9X9WQ/B/Yn4UXw+rTJMjf/0cUpzmHjUn+
tn8/S4LR4rFYMcHvWLMH9p08TwJ9yZ/mVEdnsefF4R5jCyRocOKdv8gzgyWv
tP1yWSbBuvqZbDaVacxfli3g9yqln0kRAwXnv2F2PhY0ob9IQNBNmR56PIVp
vcqOYtwgQSnpuoT++iQm+WuW6cFfip256Z7bTGLsitJ3BbZJMHPXqytv5Cu2
ecXvWDGVFnx8bvN1xusr9rX8XbYajRbcSP6UxnniK9a6sVe4ZY8WeIm0mH8b
m8CKVE69MKbTgjbG7ITQ8gnsnv8d+VF6LSB/632omDSBOWzxaf5i0oKCmfGn
h3QmMB3MpSWYRQuMZrU01QQnMOnAklMHDmnBCT+9naFdE9g2lYYF/xEtYJzH
xK5VjWMpu619jPi1YHLkgjyz0ji2bX9YvltQC6LUH7de5BjHHOq71gyEteBe
7s0V4Y0xTCoEd0VfQgusIl9lD1SOYS07Qte0lLQgfuoV11vCGPb7z2ogpqcF
bM843sd+HMEszz6DqlNacOp9Qt2drBGs7o0jtdppLSgx6OBXdhvB4v0GQ5RN
tYDTI9BHk24EE/xVHS5nowX63XW+ewnDmOlyVIyIjxY4PSG/juv/jL01xOk9
9dUCZKbxuib/M8ZbtLlf6KoWNDa52lsEfsYWLrnHC9zQgrKXVgcrhT9j4fPk
W9yRWqBwr3yjNWQIK53museepgXn2AYLHXGDGOvIq+xdDVrg4bTBbTHTj8Xv
Dwh43aQF6dqPd6vX9GP0qnhz1/daoFJMK8GT0o/tSuk50N+hBQO0kzxjpH5s
5fSi39NBLWBNclRvzunDuhqFDAwXtYAkIP3uhfVHLPZZ6t/0I9rQS25rvfOg
G6P7YtdvdFwb+oJ6j846d2Nh9CLFtNza8HJ2RbpKpRvzdyp39BTQhp0LjgED
n7owZ56+bryUNqgzc2YS2bqwbwZphRsy2jDvykO81dqJ2d2wv/lcXhsmLCOK
Ay91Ymc+L6txqGqD8smRsu3KDkzrDmPeHEEbeO2p7le4tmMN9X0hWVraMPd+
YJB4vB2DlTQrE11K/N4bEaGdbZiigSjrO0Nt4O+6cHJZqQ0T3Kd147aFNkg7
Tz/uOfEBy1ZkOkOy1gZs2tf28JdW7IRjv+ymjTa07JW63fOgFWOvd5g976gN
J8T1yAnHWrE9AcFkZU9toD/k5Gcm9R4rXZ7feOetDcaD2Rxymy2Yg6N5JtFX
G756xPTwv2/BGgwkvxv7a8OSiz6NqGMLFsY7HHgpXBs6OjadBAqbMbl7WgJr
N7Vhxpl2aiuwGZtkKG31j9aGQzeSLCrJzRh+LfpQVII2JFkcedJO1YztblEq
eHRfG9ikdN/k2zVhpWqPDUXSKPfXvj+4V70Jcyhm+lWUoQ1xlzJwhzmasIYH
36D6kTYIOcs9wnU1YqFuyf2fnmlD+Ul/Wy6tRmwX6xI1Y502OD9+ZVJp2ICV
3LTITW6g9MefwbZYtgGz22zSO9qsDealNnt22Buwuqn0e0Jt2oAyVyOjRuqx
kHJdcVy/Nowm88WUedRj1Na55n7fteH79I9fWml1WFEPy/b2vDac9H/xYi24
DrMh3XgUvkhZXzlnbapTHVYjZbJw+6c27A3usXorU4cF0dCEPdvWBo1Y9fj8
5lqM6qn1iwkWHbjroUpkna7BmuYHLmUe0oHMTxl49uYaLFbqtIQlhw6cop+X
zM6pwQ6X4571HdcB2uOrXQoONZhEs1BBi5AO7ARuF+4qfodZTq3kPMd0gH+7
x58Dq8J4hV0dXTR0wNrg+4rczFtsxnVKQAivA/ebDGy9E99i3j8HHj/U1oGR
D/aiRz5XYtE0VdnJZB3IW/jIn3mhAnvDczPjmrMONKbWCvKlv8ZunKeyVnSj
xNv/zOwo8TWGf3r1+E93HajfLpVNXSzDuqRc09wu68BSoFGMFL4Mm0GnH9gE
6YBghd7+vNVSjN366F3iXR14whG2fN2lBPN68CKOpU4HpB5ameb4FWCvNx/c
rGvQAfnW9oK3P/KxTeuIYK9mHcipSVGvt8/HbvJZXe5po+QzX+CXYfQUSyuk
t7o9oAMT/LVb11Rzscbq82IsP3Sghc/3g7LyI4ye57Rg3aIO9J8hu++pysYM
Q9W4vVZ0oPgNDJZpZGNDJFa2nt86MNpRZNui/xBb6Kr5e2uXLqic65o7OZ6B
cXw9+uEghy7Il+5xulxzD7Mi0DbWHtEFnbZ9IUKTd7Hs3JVqz+O64LOcqHZ7
311MzPV9STevLpAP7jIJO5OMaaz5PrglrgvbzvaXqw/cwpxpey4exOkC56lg
2g+x4dhrs4sR8y66//3f5H8A2QRehQ==
          "]], 
         LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAABHgeq9IvT0AAAAAAAAAAAK3oHZsO
TE9AqomVVgqZYz6InYVg3k5PQNqI4YVMeGU+ZFLtJa5RT0AvzoMKplRnPhy8
vLBNV09Ax4KPJ28Eaz6Kj1vGjGJPQGkAkR2FH3E+aDaZ8Qp5T0DxaJMN9Ap4
PkTrALfae09ACc1s+IDgeD4foGh8qn5PQLYFerU5tHk+1gk4B0qET0B5IhKw
FlZ7PkXd1hyJj09AdUBo7NaCfj4ihBRIB6ZPQPnkklWZPYI+/jh8DdeoT0DI
2d7wVpiCPtnt49Kmq09A8REJifrxgj6QV7NdRrFPQBNj6bTnoYM+/ypSc4W8
T0APJHEdBvSEPtrfuThVv09AYtBGwp9FhT62lCH+JMJPQNHs3G0HloU+bv7w
iMTHT0DxizveNDOGPtzRj54D009Az/5ZRrRehz64hvdj09VPQA3HykNqpoc+
lDtfKaPYT0DOK95R1uyHPkulLrRC3k9ACuHdpMR1iD66eM3JgelPQKyW2Eim
d4k+li01j1HsT0Dg3vXtuLSJPnHinFQh709ACfCXrWnwiT4oTGzfwPRPQNCD
W4GZY4o+BAHUpJD3T0CQkfWXEpuKPuC1O2pg+k9AnX4Fzh3Rij68aqMvMP1P
QIaQxyS4BYs+lx8L9f//T0DKDHid3jiLPpen66Y=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1554748#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF2nk01F/cB/AWpSIJKUrJvhNjZ+4bY2wpzFhCQpaKKGSpZE12CkUoSlna
VJJUKKRs2dJmiUpIqFQUeuY553l+zR8z53W+d+7yud/7vZ97znezq6+V+6IF
CxbUsr7+99fUfbi9ZuQOdcH/fdgMBA/0C6ST/7fK+cyc2wIF/9ms5eWtXIGy
/2zr9uvhKYG6/9yreMIgSaDrP+et2R4TL/DhP0csuy0ZJzD1n+125N+Y/MqG
/zfH3whHo42r/rO45fhwbQLffw5q1SSZUwL/eW3Z6r6FCzf9Z8fEP8wP/P98
we1j0xO5f5Zbc+9egt0/6wc6Z6wp/We1HNvL6YrC/9nF6fLOor5/jjZdn5U1
8s+X1VK74qf+eYzrsNn+FZv/c2C1uaay2j8nCv/ge5D0z+WDBs3PdUT+c7dx
xNcko3/+eb2Kf6vVP6sf0XR56vnPFbyKP2tO/fM9mqDwreF/flNia3jg+z//
5s7YpzD/z1q9q+6U8Ir+58pDS0wvUv/5weVJ//T0f+7hVMiyOv/Ps35eVdwl
/6xLhpYlVf9z1cu3ucdH/7lPV6DW4Mc/z1+0GV64QOw/Uw+0Kx9b889O3Vx2
OsL/fExna+hvmX8+dyHuQoXqP1cva2gIxD+/82H7QjETQ+OqyXUbZZlkwQs9
nu/WYvisEJfv3FpIhLXD1G86iyH6q9uK8MpagvwHjr5eYsitt+BZHtVFnNl/
R8gHiqHdW0zsjP0ACd+vXvg5XAz9h/98lts8SvI6A5qLE8TAd0ZvkEa+kRrN
W189T4vhY3HX4zSFafLu/AS/RL4YktoderVfzJMFS+V1PlwRwwUFraNb1iyG
sPc+lwvlYjC9Vxj6lYcdeh2FMc6PxOCjmz1l5cwBV42PVzY2i+H+1rmBvplV
iDwn0t7TLYbTD41G6T48eLwvd/2OMTGY7G3WX39vLW6PeHk5/RRDVvCd1xZO
gijYo3V/9wJxFNo2fRHdJITjHi/tffjE4Zuwe8oseDOMXVefjdIRh4vHJ5VH
7yShOdA/EksXh3LslU29mdKQcb6umWwhDoXvO3enM2XB6WT2OtNNHG5OgxzU
HAU833F83fVEcXz2yrhXRlNGzSvGntunxcHbxFFUO6WMUluRioo8cfhd3zDs
lKeCU9bVtrVl4mit/874/JkCG8uZ0696xHExnTei20kdPcb71yyWl4D8roqn
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
aSqY3XfHpVUgCeq090fqM1VwodCr+ZJ2EhpzV8gfvaiC0eJbF0JCk/DVYkfK
SIUKxmpjptxnklA5N/aJVqWClKzHJWX8yYguCUderQpenpLmZKgkYx1b0Veb
VhWEqofKHtqXDOrdn4y69ypI8sRizrZkLHOLv7ppRAUdly7Lnv6UjA7ujUuO
jKvgTXYgcZpPhvs+w/ItMyrQEovIyJNOgcLa11xJ8yrgOdixci01BdO13p7D
iynwzFAarbVMQaJQ+rrzXBTc6w3gvh+YAptGyYO/eSk4tNe8clFsCjYF3X9m
LUBBGTu705HMFAyLbhe5uZGCDKsbV0SLUnCrbfAwpxgF6h8YjN/lKTgaGtjp
KU2B5m0Fjvm6FNBlVsjVKlDw9IPXgHxHCl5HbekN0aSA2jIjuWo0BReU6lVf
UCn4asyuVT2VAu9eu2QlGgVdW72vZs6nQC1+bCjBhILLuYv3tCxOxQL1cPJp
GwUfJ18dGWRPReN73kx9JgXFE1M7EzhSkZZaOJm7g4K45rolT7lS4airbTLj
RIFXvvv+zNWpkBhtzWe6UaASO5U8y5uKydOuv2/spaDubLLb1JpUVBr8tOLw
pWDxd4vhsLWpiJ6Mu+IRQAElOILv/LpUmOcKsT0OoaBSKvSPpUAq+E1vOgqF
UXDVceJdJsvvftLuBEdToPsxmiuA5ZKLr1Z2xVGQmzba8p71/wALbw/FFApm
NVr2DLPqp879rYpPpyD+8mupSP5UsJekrR3KouDwtQe2N/lS0WYjeUDvPAXb
E9aaB/Kk4uzi+09zCih4YeNxqn1VKtxKt22eLqbAjo/9QS1nKhR2DoYwblCw
vNrWyXx5KqaXB3ZcL6NgrVX5St8lqXhUvlx2RSUFN5+GO0kvTEX87two92oK
OHRkGmemU8Dk3tJTU8fq39O64K7xFGx8WEfZ0EgBTHYzP7xnzf9eu6Sg5xR0
Sj5dLvuKNf/8Yx87uih4L3bXsKQpBUdqw6gKbyjIWTBVtrsqBVxChRMfPlBw
kenxLiE/BbCJ6n0/wooHpcaOOy0Ffim7mgbHKehQ+vVgPCoF3QvXFb6bpiCY
X3hzze4ULNOeSu+fo+DVnhtJ5VYp0Apoi+xbpIotp2eqVuql4NxQrFMPpypu
MmaMP65PQdsm961vV6uC4dW+du+yFCzaoaf1hl8VgxOjT5lTyfBomlnzSlgV
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
vKsml9X9Blr9fHeln/5IOh7GnzCZA+qEWv0LLD6SU97iS5//BRZmH9+eyfGR
8DTaL37Dpgfzde8/C0d/IDzH6+cmuPTwxzc9zzvsPeH+c/bbelE92Irc1r6U
M0DailUP5ovr4bWlXXTF7gGSatc2ISGlh7sDX+4flx0gq8qXfNkirwfdZ1+i
DB6+I1wHD3wyUtdDSbqIPVdHP+H8ZNjjb6aHZiFTn+XVPaQ54539jLkeynSH
j/G79pBE2pHXxyz04NF+jtNkaQ/huFDaHWethzEbI8V1Vm/Jip3r28/v0kPb
+6Iqtl+vybLOyfomfz2EfsgRhP9L8jQigWYZqIdl+d/99SRfklglidruYD2s
bKpJUOvpJuzJDjUDoXqgjwdyTBp3k6UmTyp/ndBDmui5uV3yLwhbdfYN0Rw9
fKsW36Yq3Ene6NCM+8/p4YwsBOR6O8iNyrF3Z/P1kO+RocGX3UHsy3V5eAr1
MDjo5J0v0EFuXusPWHBLD/Nb+tm2b24nTjmiWr0NemDvzDHlKW0lFMHmjsxG
Vjyz6Gz5tFayPDPAi9nCilfG0oaCNy2kLK0+p6lDD3IlJUW/VrQQjgTPv/d6
9cBdX1une7SJVIRcqTv9XQ/F47QdH3OekuRfjJ1WP/WwIzgw/hD9Kdl9aPbH
yhk93Ppa/5XytYEVf3PJ4/N6+H3miwTFtIG475mI81+uj+s/C2NfLn9CeGxV
tlts0kfU1NfWow9qyXDX208cIvoI/9S30yqoljy0ig5vENNHInN49XqVWrJn
24ubVBl9TN9XdQ+89phUGQbxyavqQ9n5dt6fq4+IF+X+6+Vm+mAdpVV/FlWT
mrYXVyvM9VH0ZaXqT+1qsmb/ZJinhT7StBsn97dVkepL4hL11voQZxdhlM49
JLxrU/3CnfUx/L217tueB+T+jBvHr0P6UAA/m3zoPcJ9OqzvUrA+GvI5P0uI
3yPuymdvMo/o49YSRXfr1gqyyuu57a1wfRzr+sVjIVZBdvdoFuxP0MflbAcD
3b5ywlHNpfshTx/6Z1sjBqLKiLODNHfaRX3Yx507oqpbRu78Mnivd1kfz8/V
bz/x6zbZpRQSd/4Kq73qpODnPrfJ7fz3L+zL9bGsoO3koOct4hBd4dPepI8O
e8qHb1GlpFS4Uy+8VR+mp0RH6GalZMnDL3yK7fpwzy/k3ctbSm78ELmf2K2P
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
v/cp/wfD7goe
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1554748#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
xGHdNmCwyIypUT5N9jmEqHzrAILnvtml754mJ2R2ZDi8Ada8fb7asWuK3GnS
3S31EfDbXz8QWjVJBHi/Lan7DdxsPDCTUjFB2h7GHTf9AwSGJ5ypipggp/0k
FzXPA02Pio9dNp4g/E3bFrzh1Mf55rO+J7u/Ef7Y+j/jPPoI9NzXEbHwG+Gb
Pf9dRFwfW0zT1X7NjJGWQuq+XEl9PI8+dHz6/BhJcWwZl5LRR4vwtteryBjh
vbPwi4qCPt4vF0utixslPPsChow19DFhKfAzRGmEcA8Z9gSZ6yPJ5Pyay8VD
5PmZgW2/Nuuj/JeOZP72IZLAONh9xEofIrayI9krhwjXpbLOk3b68G/5cNsj
6hNZ5iLSmr1dH0V3b+p3en0kS9q/1T8L0ofNtmblpw7vyZOoeIZ1iD76/H/F
FQu/JyeUpR53huojpkCTYdczSBYnOdW8O6yPmxucLk7vGCSLTBsqZ47rQ4kW
UCBz6B3hrL5QKp6pDyOuYy5nMvvJG12GSf9FfZyWXVKfr9hPSivHBs7nssYj
ez1Z81Ef2XZHj58/Xx/Kyn/LHn/pJTdK+oPZburD7VnMwXG7HuKaKa7d26jP
Oq8ueC3q3U0oa563pTfpo/DqmZwXy7vJ0vRgX+YLVv2UFJtK7rwm5an1mc/a
9JG/56XTD67XhCt+5/y9Xn28nDkuplDXSSrCiuvOTupjiDPiJe+uDpI0Y+ti
80Mfq5uu7RTa2EF27J+bXv5LH1/cL5Txv21n1X+zdOxfffgFUKgfrNuJ167x
k0FL6RATt/RPMWsj/A5qllYb6Gjc7WKk6tVChjveDnGJ0XFsPqFMQb6FPLSJ
iWyUoMNbaNqxf6iZ7Nry6gZNjg7R0XOBB7iaSZXhgZUKVDqscx8nmni+IL6U
+91LzemQblfXd3ZsIjUtr65VbKajwDqtcsffp0Rwz7eInVZ0TN1eK5t59Smp
viopVW9HR4Nsn3f8zBMisColMNKNDmOd30zOwkZy/5cn18x+OhbTGzccJPWE
72xE39VQOj6Ffv3W+6OOeKmev8E8SMeOkYpN2qV1hNe32eFmJB1yVP/LrWJ1
ZEeP1pU98XTs3jc0v0HwMeGq5tH7kEPHcObfLQzxWuLmJMuXepmVt7KRv3C4
htyeMXivn0fH+mjnre3Xa8h25bCT2cV03GnUUAzQqyG3ct+/2naHDmFU7BBr
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
XRX6YW3r1pKZ35MRNAsT2FxYLhf3Wpg4byvBwy0mWNKePvkxVZg8uufNrmtt
goQ96bcWWgmTpNDuaC17Ezg+mxI61bSaSP2oiqW4mWBaVsy368kqYj9xMl4u
2AQ6QZamYiOC5IGVgUXh/36X2C0a/vCGIBErm+OWCTPBg0veuWvDBcnXvf5J
kkdM8NHFsl1quSCJHWOeEj1hAtsDZ+p8dFeSEXMem+w4Vp7ppYWSy1YSq+JG
/vWJJkh99f3oldcCZK2PdprIaRP4VW9c9/WAACkf2nBOKNMEG9Snesqq+cka
426HMxdNsOoZ1/74VH4SmXd69cpcVn0fnVsgt4ufWHgtPL8izwTRb7k5bwnw
kw+DI5ncZSY4Xep7eipoBRHou32Jo84EK3v3LmXfwkeSuA8fvttggnWhgVF/
JPnIMh2Go99TExz3/aZ4fpaXcKS3Le98ybq/6kqdZ1t5yXfr8dDCbhN4zCeJ
/1zBQ1rqZSytxk3gdd6aengfF7GYGpdd+N0EjyWzPnaLcJEnYnc5K6dMcODH
WGtP/TJSHWFYKf6bNf5dGa6vVi8j17U8JGc4TTGkcV+UrXYJSSi5MJu1xhS0
YyIR8SaLyJIej06bdabw62YmJ/5dSGKWyd1YLGqKZRJ3P+feXkgO7qzw3idp
Ct3hLb3fpBYSn42vWhnKpnguTfW4JchJTM7wFIwamuKeh/wPaVEOUvf4VXSO
iSm2lmyedPrITvA908XO3BQZK37d317MTjQsNwlUW5ki29+Ir0GLnfV8NDly
2skUCocld2ZsZyMLD0cxtfaZ4nD4yUf+5/7QyifGflUHmcJe7/BVfdofmqe3
Y7ZRiCmOzD9RWPZpjlZnqTRie9AUL+t+S3lqztFixHoj9saaYpNU4/EjQ79p
nE80iy9nmMKum33Hjt0/aRwC39h5HpniXMlkRM7zSdrN4075aXWmuFJYHawU
O0nzmGuwEGlk9V+5v71Hb5L26GPWOZnnpjB2UW08UPqdFl1hrmDQaYresC+2
E6cnaOyu+Y6hI6bwNG2v4y/6SmMrdC0d5DeDmt51kQp8pDWMde3NFjRD9I5z
N8/nfKAlKFsrOq82Q2UVe//SBR9oqyoMSl6tM8OBqeKM8OZBmmKjTPETGTMc
PZI6v+7YAG1q2SWf2E1m2NB7zOH+ZD+tcouIHF3RDMEFym6LBvpohp3LC++r
maGndmH964YemvPH73nXaWaooCuXbn/+miYm6+ftq2+GpNqtzgrdXbRhv4+S
MgwzsJWsJGEjnbSgqa4ruaZm6IwbHPJc84oWt+DhpTSmGfZddcw4dL2Vdm/j
8YvhPmYo/cO2YRetkXbEi81VY48ZZCsHn97uq6cxCsPWTfmbgdNu4fTTY3W0
FmW/zD37zdBQwLT++aWWNkysz7tFmuHGFdGkLPlK2vWjTVvXHTXDnvVvVTw/
3qUFNxoIv4k1Q7wTdTTq2m3a/Bb1dNt4M5wQdyyU9rpBE3IVOWt01gxyUxHa
1TOXaD25aXYLMsywOu5Y/4mEi7RLH5cL1lwww7Al5/Qq13M0hT1saVq5ZjhS
RD9bpnmU9r0szPbHZVa+tqlFWbRdtDNSv6foV83++97+fwCbQ8vs
          "]], 
         LineBox[CompressedData["
1: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
xgE=
          "]]}, Annotation[#, "Charting`Private`Tag$1554748#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF2nk01F/cB3CkKIVIsmWXfd+XuW9mjLFvY4mSLSq0IGkRskS2yhIhKVG0
qCiUpSQSKkUpVFqIFtqk0DPPOc/za/6Z8zr3ztzP5/O99557z/lK+29z2cjB
xsbGu4CN7X+/bTaOPWr5UEth+78PJ1V0+0uRHPL/1inJL7oqUvafbbufXikW
qfnPHoHTjUdF7vznIY2D1AyRJ//5pJBj8iGRt/85nvvqmlSR7//Zc23ppckp
Tvy/ef7Gr7Nazfef5Z0/j7WmrfjPu3qMSP53kf8sXLN8mJ1d8j+vS//DfLvy
n08Fvrt/V/WfVYXq69M8/9kiyjdXqPqf9Ys8ynM0pP6zn0/5+rPD/5xoI1ZQ
8OGfy/UPPzn0/Z8/8u6xDVsi/Z+jmu2NtPX/OV3qx4qbGf98bYTa9cBU5j/3
M+KnMqz++efFppV2Lv9ssNfIryP4n+sENX62HP3nepqo1JWxf35e6WG5/ds/
/+bP3aI+/8/GQ3y1lYKy/7lh50Kb05R/vlk+GZGT88+DS9ULXEr+eTY8pIm/
8p/NyHvujOZ/bnr6ojhp/J+HzURaqT/+ef60+xg7m9x/pmx/pL1f6J99+nk9
TaX+eb+pXcxv5X8+cSr1VJ3ePzdzt7dH4Z9fbeX8pGsrh06+yVWrVZiErc9c
4JubHCbUU0t9eyqIlEmswWVfOSROBS6Ja2glKL25bluIHIrbnAQWJzwhvly/
49Wi5PAoVE7umNdrEhdmUDERJ4eXe/5MqEqPk5OPI7vOpclhxTHzERr5SlqM
rkwF58nh3bknt7PVf5FXJV9WKpTKIeOR95BJ3zxhW6Rm+rZKDqfUjfdpCS2A
VOgWv1PX5GBTXxEzJcAF896KZN9bcthqVvjdxZcH/obvqlZ3yeGG3dzr4Rk+
HDgh82iwXw55jVbj9K0CuL2lWGztRzlYb+6yEKsXxtUPISE+P+VQEF074OQj
irJNxjcC2ORR4XH/k6ykBJKCnnptXSGPbWkB322jpcHwX348wVQefkGjOrde
rYHR65cfUujy0E6pkhzKV4Ky70WjTCd5qH9bH5DDVMFSH9uB/EB5BPqM8FCK
1PFgbdKqi+nymAjJra+haaPlmeumq3nyELzPc7b1uzaqPWTq6k7KI/yi+JjP
SR0cdWv2aK2RR0/bN9eJCV24O8/kPRuUx+kcwfh+HwMMMsKEFqgpQG1DXcf8
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
56IJ9wQJ+uPjrHzmL4kUemji9u1Huc0NznCj/tFhW6+Jhcyj3uNDzkhPoTts
9NcEuxKXhjKnC2YEhg5ohGkixbPHyWOtCzQ9FYtzwjWhmP5ywYIU1vMvjrg+
s0sTF0QYI6TeBU/WLPnYekATz7WORy+SdUW1qYGbZz4rvoKq5hDWehmNP7Ct
sVgT3r5NcbouTKxu706VOc2K54u117ccJtKdA5s+XtAEXTL3ppSUGzYFHVkT
38qKh+NTtLCdO0qqBs3fd2iivvl6akihO/on16yz7dHE29SCF9s+uoO2t+mw
0IAmDLmEx3dme0Dy8MTMuc+a0O7bdWvVD080+cWeu/JNE8rqW0fsbNfCR0dw
7Y1fmogbPpjx/tRaFPUb13VxaOFyuG4Rw90LqyQORX1ZqQU33tsKXd3eEKhU
/KZLtPByymPJebYNuLz35ikzmhZKb7/fmxi2AU72Ti50ay3g3Cf5vhcbkDW5
67KHqxZGz4ZGRPr4YqlB+7Y9wVqY+WB37wjDDwvvbPzYnKUFy5Ku48YWASjL
nSnsyNGC/hWXPfxJAaAFZ9g+KtCCzgcLjYaOABxYUls5cloLyjUijVkugZh3
4ty8sE4LTqc5BsO3b8SvoVPvbF5poUFnxCavPxjHLunnur7TwrJcrYTINZug
H99JWzeuhYI7SgXmuzdhp9zX02HftTAlsn7JJcnN+LrF3P8wtzb2SVt6ckZv
wcT0y+E+TW2srzN1nvIIw7XgrNs2+tpIOlMZcLIlDHFPKeXNJtooX1WUlqi8
FSuvF4edo2ujoe8J/1f2bbCI8p7dt04bxmf23W7bsB3Hv/eLyKVo4+Mb54ub
TMKxMTB5Lj9DG4ZKi2Ou7w6H5hO918uytcHxyLPnXF047l7NOTtdrI2z62Xk
9hhGYCrcxeD+VW1spp6W6iKRYEx1M8NfamMooqBrTVgUBP1iDEffauOzZ9LK
S7VRGH6oKr5uXBvU6/xJT+ejEFmd9sbyhzYKxi4zubN3oWSbdbgIjw7aInfa
P7odjZ+f7mS16Osg9MvYYh6yF2XjNzp5M3XgcsqyddwhDluPOcpuydYBu0OI
2tyeOBjQ3uxty9fBogN7nlEq4tBZvERt32kdNGxWlbVmi8eU09qsD3U68LPe
mm1dEw/K9Z+ud97o4ObIiXS6TAIGErSGdhvpQoza62iyKBmnNNv0+ii62Gl/
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1554748#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAW2lVc/lIT0AAAAAAAAAAAK3oHZsO
TE9Ak1oNiBI/hT6InYVg3k5PQLwvSCPQ7pM+ZFLtJa5RT0CFqIV+MzCdPhy8
vLBNV09AkndGbDXEpz6Kj1vGjGJPQJ4L/pkW4rQ+aDaZ8Qp5T0D5lrPrhRLD
PkTrALfae09A4X4Psk0dxD4foGh8qn5PQM4it5/mJcU+1gk4B0qET0DCr9xW
bzDHPkXd1hyJj09AcUkm/hMqyz4ihBRIB6ZPQEpv7z60VNE+/jh8DdeoT0AT
L7lV9MbRPtnt49Kmq09A6usOzOM30j6QV7NdRrFPQCvlV4rCFdM+/ypSc4W8
T0C8izIyG8HUPtrfuThVv09AY+suKnIo1T62lCH+JMJPQOlXqudbjtU+bv7w
iMTHT0Dg3hdm2VXWPtzRj54D009AjVqgVRjT1z64hvdj09VPQG7WZ16hLtg+
lDtfKaPYT0CJbqGSoIjYPkulLrRC3k9AFHtkMPM32T66eM3JgelPQGG8/CWF
g9o+li01j1HsT0Bk0CdvW9LaPnHinFQh709ACxC4SYsf2z4oTGzfwPRPQGya
AWbptNs+BAHUpJD3T0AIqTeBEP3bPuC1O2pg+k9AI2vM4IJD3D68aqMvMP1P
QK1CfvE8iNw+lx8L9f//T0B+kQsgO8vcPlpy65g=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1554748#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
f6BZ
          "]]}, Annotation[#, "Charting`Private`Tag$1554748#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFmnk0Vd8b/ymVUEoSosxJMnPN+43ruteUMZLMUYlk1kRkvIokaRCFBoSE
NEkIyVSJlKkSkkxJKfTzW+v3+3zPH+es19rPdJ69z97Ps9YRdTtktXcJCwtL
0eLt/z6N9w6/qvpapsvy/y42A0G/PoFU8v9ZOTP9yj2BnP/YpLmzJEOg9D+2
8/j1JEWg9j/ukY81OC3Q/h9nrd8RkyAw8B+fZL+3JV5g+j+233WtaGKSDf+f
Of+ddDTaxP0fS1qODdcwef/jkBYNkj4t8B9vKF3by8q6+T8u/2TQ1Kot9h93
0E9Onjb6H88UVvKZWv2PKUc1XBu8/scV6+RnqlL+xw+ogiIlw//jxzcmAlJT
xf/jbi65i1aZ/+M5f+/KNXn/Yx0yyH766f+4svNDRvTI//gpe319MCT+435f
tu8qJhLYn/3XKWXFJl2Wt3o8P2wloHMib8aurkFXRCucctdFAnnDVGqf3l9d
XHvseMhbAo9y7jnlWgsRlxV/Tm4PlsAf6VuNHwVUSIQP5ea3CAlUhWtu8PpL
I1lvAptuMyUQ6s8X8btiJ6nSKJn0SpNA1t/+ofdqHqQ/c5xP6poEnhe8c80o
8CMsy7drD+RLQC5qtNx6LIyIHDzger1cAkc+Pj/DrRVF9F7fjHF5JgHKxXs/
XIOYxE39S/6mJgl819XdXDKXQiKvir3q7pBAhEa01qbki+Q6m8vMpY8SENvo
VKb7KotUH8jYuGtUAp/4L5DXd3PJva/e3k4zEgi7KjG+iS+f5OzTfOTOIonx
BvEzaUXFJHWInXM/hyR0L7DldVqUkmjPTgdfXklIPt8csTmsggR/yc0L2CSJ
L1fPc3ArPyGeHoF/QqUlUbRFObCM+ozYfdY3PqEkiVhWRvdRg1pCd1t7KUpb
EsobdllQL9cTjY99X+NokmBkhTw7Z/mSyLgUapyxkAR1tGKZuXcr2dh3LP6c
gySeaZu84f/1inA5mXSle0hi49WpFVGH2sl8t8DWq76L8t1s9r9EOsnY7uHQ
7FBJBJVc2b9n1XvSuiuavzBREqMWa6ZumPeTqnfW++6lSaJN2+R7i+gnUmwn
VlGRJQnb38cWZNYPkBTbp3Y1pZK40O/+Vd9pmES1n77ZUCmJAElPtmelIyTQ
2vFXc4MkCmLGc0dkv5OdlrNp77ol8enJe70repPEqK1+sGdQEnbvjJveF08R
9R1pap8nJCG6wf6BseI0ETBT7vjOJoV26dfLB/b+It10n/VLt0tB8893vV1X
F0hzvdZedooUfh38NvTShAWVNI6yVXpSoLntzl5myYpM6k0bflspfNjOdVgt
aCnc8PHc9uNSUFsi4CcswQ7rp0WflWKlQN/cEr1h70pQdU8oq5+VgtNyqnhs
IQcktTe+0c+VgvnX9oBSh1UYptjy2DdLod+2e3iQuRZd5eJuezql0KN89PGC
GQ8aVafuun2UwlxVb6w+7zrkKydZ+vyUQhhfO9PsDi985V8kRwpvQVfMqLz/
Wn78lNLhvuOzBZE/TBpXZm+G7if9+oTQLVAT/Zdi6CyCmAx6+L6oLTjFfcgm
cVwEfLw24+IXt+BIYP/Xig1iUGP1br1UuwV/uY9Wz8ZI4MRjv9jQ1i1wZHqU
Wm+VRF1IMNn5fguiJbhlbVsW8zx2smjtxBbwZ/l82SuyBaEf0pPiNkoDNpqr
9n7Ziqq0q0aeUtL4YeT2OidDBuxWOf8MFKVBPdbDV2W/DRcbig79o0lDsqXt
5Y1OWTwsq9sR7C+NKBHKm9+/5TGXNM3t8UIaNemhY8fclUE1+VOv1y6NwL/d
lns7lJG4nCVic580vjjdFThlrALh45wT76cX5T82s6mpqUL3gFibpchW7Lp9
9/EqQQrCqRbJJGQr9km/8ZpYoYUls/lrNkrKQHXT6IeQZD1sbNb/QeRlQJM/
ElbQpAeVa11vPTRksDejwrmSXR97GSsuF5rJQKb010HvCH00XHST1A+WwQ0Z
c45YHwMkaQpo7q+XAS/Ly5+c2oa4tbpY6MwrGRgUtPKeCTRE1Sfav5IPMujN
3DnypMAQUwmBtXPjMvBefeursBANOz+0mifzb8OXm3xqN2ZoEDoW435//zY0
sNo8drtIh6qFMK07YBtK/wWNDL6kw1yiVJr1xDb8kXOz/zdPR3jTx+/GKdvg
+6Hc66sLA5+EdEJ7H27DjvdDs/Gixrj95EfiMi5Z/LHZPuRz2gTVZxMOyfDJ
IuPcpZ/9FSZ4v1fUaoeILNxVjov0fTYB1+odGy6qyMJ83feJo+qm8HPKuya7
RxYlf0Luq3WbQu2fS7l1oSzYPysvVKwyh6lZVaRhhSyUFYYUZBTN4X558w5K
tSycw2wt5WzMkUzpHRLskEXTGsdP0+nm+Hpot8CneVlslbl5547wDlzptz3m
Z7YdJwozUr5yWIC12lj/9Oh2XB5WTBIfsQD/mrzV4TPbMaxc/NX1lwXknFZ+
8GORw4/carFzbJZw+FMfYMMrh/YPL46/2WSJUiXD3I3acljPe/LYmJUlPLMJ
ex5TDlT5Ov7Uh5ZoOqXSUicjj2fKIbcvnLGCJvfLJWdV5THYJ14akGGFWxdd
Kbshj4ebEw56FFghqvBM1ritPCyYRSyxjYvy74b9+U/KY+V39sIvK6xxa1vG
hgOd8thQfVPwYqw1+MqVTVU+yaOyNO3u2nRrnEJjxMKoPJwT3gzdumWN4ry/
gQxWBfSKmfeoNFqD+VS6t4dPARc4WcxbVttA/2tk8XJ9BWjFfk31vmqDMLmW
Rm8jBVi9N3vAddcGxQECX9pMFZCTbt/wocYGmxaKBC7bKYB/ar/hmhEbzPL0
RMr7KKDr+sODGhq2ULCXzkj1V0Dcd8eOO2a28MwIuD8bogBxkjji62aL9i0c
ozWRCnih6k39mmiLYm2KrX26Asbke7X1B20xdDLy0JMMBZBL5r1X522xqb45
XixbAbPvNdV81+9EoqVH5egdBRS9EHIMpe3EPs+zW07WKGBDvql0beFObE7+
Nnt7TAEFrUc84q7YodI1/HbJDwWsuB8xJvbIDk7K63Y9+q2ALQF81zze2+FK
h2ZF0xJFrJe3fjAqaA9+4YTgcT5FiCjyrQnNscf9MWGp3xsVcSNz/cPSBnvs
rLr7lkVUEc4jz5TKv9vjvHuXCs82RXwfUVnKp7kLPHnSP1SIIkySH5CC7l24
e/TxdR2qIqrZ5Bf8VzjAwszCisZQxEz89lJBZQckTYTctbNWxJybZrHgaQdw
UeoPHfFSxJ69f69pme7Gstq9o0+TFDExLPFpYNYROednLzekKmKe+0+9scoe
UL1Om7y6qIjtQ5k8dYf2IJKjLO9TtiI2He7zWDmyBwsWbPuXVSji2PM4J4FR
J2SIpfOvfqKIt/d4ZE/KO0N7elsDX7UitJaJT/IFOuPoBest0k2K2Nq5Veog
iwt+91z/YtyviHA+p8rIVBdcKFI7b/1FEUXK4cv4H7lA7WQj1XFEES8TB9gt
PrkgSGIq22daEfeS2pYXKrli6oCeWzK7ErwWCg4zPrji26++3rcKSuA+tH5M
0cwd5V5J1cZqSlj7fAV3Q6Q7Ijp1bzzVUkLrgRWrKQ/cwXc/w+c2TQmsq/1Z
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
f+X/AdZb78Y=
          "]], 
         LineBox[CompressedData["
1:eJw9lXswlfsax2VVVC4V21FHRCmLHSWtbjwel2zh/b2HvaMi99BdqyQrl4XQ
JlvnYNMKXYxCJZdsCtWSyJGNtFlItLDW+1aoydFt49gzZ8535pnnj+/MZ56Z
7zzz1fc/5rZfUUFB4ejs/LVzg95JPwdQqPA/1airV3SHUHjabAf38bUr0Ch8
ZdPCpzDdNt5Zqawa+vyjfMoTKWRHpaFMTAvoWm+wM/uZwrJt6hPajq3g+/eR
NbdSKFTmZXpPL2gDWafLWMEFCqPieDpxVh3w3l4n6qJolldno+H38wuYv7ZG
JCyhUGeIo5GT1gs7Oceip0opNHTK/H6uXR+cHzDwF1RQWLfc1SPmYx8syU7m
nqymsN/rhlKdcz/oLNhbHVxPYa7hQXl1zwD4jKjmDDdQSLn8h6htH4RrYnGM
XxOFS/SMe7uTBmGtgPuD5zMKM231NbeueA3mbz//QbooLPLTuLJ/sxTCmm7d
a5FQqLKj8WyiQArV+b65jn0Umq9pRapWClZeTwNtBymUpSe6dW4fAsfWrI+b
3lBoPxUW9NF4GJKLnLvL31HoXvJr2smAYWhNmLlvNk5ho/hgVZFoGNwgOI47
QWGi+KXW5nkjsO8Ob8mKaQrFc3/LU28Zgd/2flZrVyB46pr/pO3UCKjNv68S
zyEY8ZbjrmAqg0deVsqsMsGJzB6eQYoMtJVn5uUsIugTx1imVMngeMUjDq1G
8OD6qz8lSWVgsNB+5q4GQRd5Q72NhRwElfOmgrUI2pxZmDfXUw6dvk1fly8j
OF9ekhEglMPZKqdJoS7Bcc/m/ulGObz0V5nYqE9w3ftlldaMHDap/f5Btopg
KD+6zFCZAVmg66gLl+Cw+5ZVb+wYgMUab2dMCJrbh6xo9WEgq+YFU25KsGyT
n4O3gAHHpbuHtS0IWmwPMM24ycCVumXSFh7B3b0OfKt6Br6E9A1EbyX4Mr1w
LLebgeKH3n3DQPDToUui1GkGFA+t7MmyIVjxnRKtv5gFTy1pl5M9wa/jBTvC
VrJwV5z/YsqBIIUjj1LMWFA5sv956U6C21zMOcFWLARqr20PcCHouucrWeDE
Qt1jplWLJqh3u1h2chcLWseKW5pdCXJTS1Vu+bBwdPnh5sifCHKsIzhlISw0
PlnXZOYxy1PmqyaGsqB3fLxBuoegm6nykXXhLJzWKavP9CLYP1kYWBTJQnsT
/5Gjz2weN8S8P4UsGJ2wePDNj2B0wkNDo7MsxOpO1pQEEizpUj9plshCb3PV
Pb9ggqcH9QI1k1gwD4uo0jxIMIzx2tIz6yev3F7ZdJigqYXFRmECC0Mtf5YL
jhFcv0Aja1E8C5bhD0rX8QnOuR10PSqGhQwDYcngSYJb9ufkSwQsjLba3EoP
J7g3XL9DN4wFhwhOsYOA4JhRwHG3oyzkrX5y40skwV8e/t4YFsTCp7bEglsx
BGuEHRop+1j4xxnHfJ84gkrlElHGjywUrll4dWkCwW/ZrnkZjizMed6S9ySJ
oP6ZIt9USxb2RqXmnE4mqJZHrY6dzaPciBaZpBLc+cNNE74+C4teLM5+lUbQ
s9bsnv9SFmqNM9LtMwnarvQPdf7AgGbXrn9+yiK4QfRG13GAgSOxf0srFhE0
mCT7qGcM6EpEyYuvEAw66JsuyGfgVLzXucfXCD5VZdRvpDLQZqqbeKqAoH+R
wpqRUwwIE67GviwmKBy4aHTZgQHVcCUnv9sEMy5bu/SZMiAKObJUdmf2vpcz
WbQWAxXOW/PH7xJs55XPyKVykC3paFB8SHDaSz180Qk58DmbU5PEBDPH79la
7pLDzETOLpUGgj0v7GQVPDloS0Jk3zUT/JeiRCXmkwyc8xSUuZ0EX3WbW1eH
ykCSFtR++w+Ce0aVN/xIySAw9lm2uYTgZZP4YjuuDKIDs7mW/QSPpjqc/35g
BEqN1zvT8tl/6tzKd7UbAa0qn1/CvhGUde6ZEz82BPmFT9y/ThFMUPh2z008
BOtFJnoxCjQqKv57T2b6EOyM+nTn3Dwam8Y6rwt4QxBpl9ZxSZ1GLa+n/Z/D
pCBte6BZv4rGrvH7n737B+E2s+KSmguNogtzvT0qe+FcboLvK0KjdeiKp1/W
90Kg26hhiSuNbyYORLXd7AGd2tpSyoPGAxsLNnMvSyA5zbPxvD+NfQe6362O
6oIQ3sUPCyNobHstPlS5/DkYnNV0VLpOo/vh9guTM2KY3hKp2l1Io+qvk08l
3Y+gZ3To+fWbNL6uez/e7v0QLnhU7HMoozG4ZNs6fs19mDF2O5FQS2Pe7oJK
QWgZRKuK0q920P/vs/8CKl07qw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1554748#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
FX3wxFVrxv2LHpXlYoa564/HHAWtyIqjsQ5aQWZYY7AvPETTnFTNfpmvC2Hk
2/pobmDMjHj5OF0yOWgGzYP1DTtzzEjTVqVJ+yNm4FvZZ3JzgU6ObxqKDog3
gynd+N+RLlPC0qpZUnjODP4bTNP2XzcmVbpFNrK5ZuCNCvLR9jEmXrd45you
muH97guzVRLGpOn8J9QWMvqvmxKuKKSROP/s3tc3zbC8Ku1e7Q0jskzgKzNP
gxlYz96W0us1IJWJLteym8zQZN7L13vRgLG/NFuubzHD7bjfJet9DUjDaN5Z
mXYzSMfr/CxdADlWY6Fg1GsGr+YH3WMKIMxu15wOT5phV+N0SaW9HmG64VY+
wm/OmMdmew09qKT5S1/ApTXmsJXNnzL/o0HSKLaKroLmGDT1t0vK1iDraoxu
9mwwx/WR/sXSp+pEsUWmpFXGHMJHjPI/aKgR19FvV8v0zdG200xdbaMyuSee
eDFinzlWqBh6XAuSIlHeTG5Uf3OopoR1Vj6UJLQb4Rt+BJrjFoeDQyu7JOmk
7M/1DzOHsxpTgmTRZjJObM97xJjj9/dsIbVxMbLWbf0ZkzPmUHnvmrpgv44M
FmQ7Lj9njrTioWFmvrXk8ij3mvoL5kjU29Rzv2M1UfBnytYqMMeEaNehQAd+
QoscPSlfao4d9Tn+P5dzkuDz5Sf4G8zR0ZuXZnJvVv/uwvnEhiZzNI5Y5nye
n9RfcEuIDW5hfF9RJ+zz+RH9xM07w7razZFy1eXx+PZb+tpLpaIZz83/+3/2
/wHM4LzP
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1554748#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       Opacity[0.5], 
       RectangleBox[{12.142857142857142`, 0}, {14.285714285714285`, 5000}], 
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[{14.285714285714285`, 0}, {16.142857142857142`, 5000}]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {250, 
          FormBox["\"6.25\"", TraditionalForm]}, {500, 
          FormBox["\"12.5\"", TraditionalForm]}, {750, 
          FormBox["\"18.75\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}, {1250, 
          FormBox["\"31.25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 1200}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Complete relaxation\"", "\"Major relaxation\"", 
       "\"Minor relaxation\"", "\"No relaxation\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.794156686526167*^9, 3.794156750752102*^9}, 
   3.794156821046194*^9, {3.7941569179010572`*^9, 3.79415692905227*^9}, {
   3.7941570014358*^9, 3.794157021743639*^9}, 3.794157098949112*^9, 
   3.794157571385209*^9, 3.794157764682548*^9},
 CellLabel->
  "Out[1547]=",ExpressionUUID->"b721dad8-8153-430c-947a-80170bf3701d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/Desktop/fig24_4.png\>\"", ",", " ", "fig24"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7941569890056*^9, 3.7941569934682283`*^9}, {
   3.794157083985305*^9, 3.794157084410201*^9}, {3.794157514896134*^9, 
   3.794157515125869*^9}, 3.794157557991055*^9, 3.794157755853054*^9},
 CellLabel->
  "In[1548]:=",ExpressionUUID->"6fe38e47-880f-4b99-8f6a-df584e69265f"]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 3, 53, "Subtitle",ExpressionUUID->"ab566253-7f82-4d8d-9c27-65f1490a9767"],
Cell[774, 27, 8099, 183, 682, "Input",ExpressionUUID->"c73a97f1-c4ac-409c-a8f1-c3c6b1d45354"]
}, Closed]],
Cell[CellGroupData[{
Cell[8910, 215, 168, 3, 53, "Subtitle",ExpressionUUID->"9e70e588-eb8a-43d3-b82e-99cd3f899a76"],
Cell[9081, 220, 10069, 242, 598, "Input",ExpressionUUID->"355fd5ea-b022-4c67-a16e-8dd50237bcd8"]
}, Closed]],
Cell[CellGroupData[{
Cell[19187, 467, 168, 3, 53, "Subtitle",ExpressionUUID->"f9b2b6c1-c48f-45ed-b422-19985b256573"],
Cell[19358, 472, 1021, 25, 157, "Input",ExpressionUUID->"b7f8eae6-27e4-4dc9-9442-50a9d51159bc"],
Cell[CellGroupData[{
Cell[20404, 501, 608, 16, 30, "Input",ExpressionUUID->"ce57bf83-11a6-4e0d-b1fe-28ae86543ae0"],
Cell[21015, 519, 27444, 470, 229, "Output",ExpressionUUID->"9dd3c63d-fb79-4c01-9baa-e89a12f5c884"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48496, 994, 638, 17, 30, "Input",ExpressionUUID->"ce832def-0640-4355-a54e-e45dd74621c2"],
Cell[49137, 1013, 11523, 210, 239, "Output",ExpressionUUID->"15333ad0-4b85-415b-a700-fc072c2802d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60697, 1228, 654, 18, 30, "Input",ExpressionUUID->"efe35891-6b66-4397-9dac-012f512d9c48"],
Cell[61354, 1248, 2921, 67, 256, "Output",ExpressionUUID->"a69d3620-1cef-4b83-9254-1006f3557df7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[64324, 1321, 266, 4, 53, "Subtitle",ExpressionUUID->"7f6d5abb-2207-45b5-a326-b5e6a9ea60a2"],
Cell[64593, 1327, 15847, 401, 1039, "Input",ExpressionUUID->"69daacc6-b850-4531-8630-f7ac5da6f809"],
Cell[80443, 1730, 1158, 23, 52, "Input",ExpressionUUID->"207f130f-0dfa-427f-80c1-83b653dba7a8"],
Cell[81604, 1755, 1118, 23, 52, "Input",ExpressionUUID->"d41ddfb9-09a7-44f5-a5db-23895c757cc3"],
Cell[82725, 1780, 1143, 23, 52, "Input",ExpressionUUID->"98b1d7df-b31f-4ac5-a386-0559bcc1f1e5"],
Cell[83871, 1805, 1168, 23, 52, "Input",ExpressionUUID->"a86fa224-d13c-4be4-9414-bf0515416fa8"]
}, Closed]],
Cell[CellGroupData[{
Cell[85076, 1833, 217, 4, 53, "Subtitle",ExpressionUUID->"34b58635-6a7a-4de2-8aa1-e07ad2679f40"],
Cell[85296, 1839, 2079, 56, 430, "Input",ExpressionUUID->"6077a067-c04a-41d0-8a04-2dd515b36308"],
Cell[87378, 1897, 355, 7, 30, "Input",ExpressionUUID->"9770c67e-c44a-4ed7-b260-0d20a22adf79"],
Cell[CellGroupData[{
Cell[87758, 1908, 7369, 190, 472, "Input",ExpressionUUID->"366c8fbe-61c9-4926-9be6-1bd43ee5f98d"],
Cell[95130, 2100, 140450, 2458, 315, "Output",ExpressionUUID->"f97e7712-f256-4fe2-b469-e4de6758ea14"]
}, Open  ]],
Cell[235595, 4561, 439, 9, 30, "Input",ExpressionUUID->"de896541-33a7-4e96-9053-a7cb64b47866"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236071, 4575, 213, 4, 53, "Subtitle",ExpressionUUID->"a4748fa9-bfd0-4be4-b241-0c9bdd7d8fb1"],
Cell[236287, 4581, 2105, 57, 430, "Input",ExpressionUUID->"cec1c990-48cb-40cc-8c77-2d8d87c9e8ee"],
Cell[238395, 4640, 357, 7, 30, "Input",ExpressionUUID->"53984cae-3fb1-42fd-b9ac-1c712a671e25"],
Cell[CellGroupData[{
Cell[238777, 4651, 7415, 190, 472, "Input",ExpressionUUID->"7176af74-4137-4423-8952-cadf0bfc9540"],
Cell[246195, 4843, 182248, 3146, 315, "Output",ExpressionUUID->"c0243088-3c01-4773-bb6f-6ee34e6e38e3"]
}, Open  ]],
Cell[428458, 7992, 436, 9, 30, "Input",ExpressionUUID->"4a1538e0-7cb0-473e-8ae1-63970aa1a942"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428931, 8006, 215, 4, 53, "Subtitle",ExpressionUUID->"4611a5e5-72ba-49b9-a97e-fa81a28cb294"],
Cell[429149, 8012, 2108, 57, 430, "Input",ExpressionUUID->"be27365c-4d3e-4301-b38c-933cf9fefc5b"],
Cell[431260, 8071, 334, 7, 30, "Input",ExpressionUUID->"3186ae79-0397-47be-a7d8-7ba19e48fb32"],
Cell[CellGroupData[{
Cell[431619, 8082, 7366, 190, 472, "Input",ExpressionUUID->"29d0676a-06cb-494d-b0b1-a247cb6f66cc"],
Cell[438988, 8274, 164715, 2862, 315, "Output",ExpressionUUID->"b721dad8-8153-430c-947a-80170bf3701d"]
}, Open  ]],
Cell[603718, 11139, 435, 9, 30, "Input",ExpressionUUID->"6fe38e47-880f-4b99-8f6a-df584e69265f"]
}, Open  ]]
}
]
*)

